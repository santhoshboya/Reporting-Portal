const INVALID_TOKEN = 'INVALID_TOKEN'
const INVALID_USER = 'INVALID_USER'
const NOT_AUTHORIZED_EXCEPTION = 'NotAuthorizedException'
const USER_NOT_FOUND_EXCEPTION = 'UserNotFoundException'
const INVALID_SESSION_TOKEN = 'INVALID_SESSION_TOKEN'
const REQUEST_TIMED_OUT = 'Endpoint request timed out'

const INVALID_EMAIL = 'INVALID_EMAIL'
const USER_ACCOUNT_DOES_NOT_EXIST = 'USER_ACCOUNT_DOES_NOT_EXIST'
const INCORRECT_PASSWORD = 'INCORRECT_PASSWORD'
const TOKEN_HAS_EXPIRED = 'TOKEN_HAS_EXPIRED'
const TOKEN_DOES_NOT_EXIST = 'TOKEN_DOES_NOT_EXIST'
const PASSWORD_MIN_LENGTH = 'PASSWORD_MIN_LENGTH'
const PASSWORD_AT_LEAST_ONE_SPECIAL_CHARACTER =
   'PASSWORD_AT_LEAST_ONE_SPECIAL_CHARACTER'
const PASSWORD_AT_LEAST_ONE_UPPERCASE_LETTER =
   'PASSWORD_AT_LEAST_ONE_UPPERCASE_LETTER'
const PASSWORD_AT_LEAST_ONE_NUMBER = 'PASSWORD_AT_LEAST_ONE_NUMBER'

const INTERNAL_SERVER_ERROR_CODE = 500
const NO_INTERNET_ERROR_CODE = 503
const BAD_REQUEST_ERROR_CODE = 400
const UNAUTHORIZED_ERROR_CODE = 401
const ACCESS_FORBIDDEN_ERROR_CODE = 403
const NOT_FOUND_ERROR_CODE = 404

export const resStatuses = {
   invalidToken: INVALID_TOKEN,
   invalidUser: INVALID_USER,
   notAuthorizedException: NOT_AUTHORIZED_EXCEPTION,
   userNotFoundException: USER_NOT_FOUND_EXCEPTION,
   invalidSessionToken: INVALID_SESSION_TOKEN,
   requestTimedOut: REQUEST_TIMED_OUT,
   invalidEmail: INVALID_EMAIL,
   userAccountDoesNotExist: USER_ACCOUNT_DOES_NOT_EXIST,
   incorrectPassword: INCORRECT_PASSWORD,
   tokenHasExpired: TOKEN_HAS_EXPIRED,
   tokenDoesNotExist: TOKEN_DOES_NOT_EXIST,
   passwordMinLength: PASSWORD_MIN_LENGTH,
   passwordAtLeastOneSpecialCharacter: PASSWORD_AT_LEAST_ONE_SPECIAL_CHARACTER,
   passwordAtLeastOneUppercaseLetter: PASSWORD_AT_LEAST_ONE_UPPERCASE_LETTER,
   passwordAtLeastOneNumber: PASSWORD_AT_LEAST_ONE_NUMBER
}

export const statusCodes = {
   internalServerErrorCode: INTERNAL_SERVER_ERROR_CODE,
   noInternetErrorCode: NO_INTERNET_ERROR_CODE,
   badRequestErrorCode: BAD_REQUEST_ERROR_CODE,
   unAuthorizedErrorCode: UNAUTHORIZED_ERROR_CODE,
   accessForbiddenErrorCode: ACCESS_FORBIDDEN_ERROR_CODE,
   notFoundErrorCode: NOT_FOUND_ERROR_CODE
}
