{"version":3,"sources":["common/components/HomePage/index.tsx","common/themes/Colors.js","common/components/DesktopLayoutAuth/styledComponent.ts","common/components/DesktopLayoutAuth/DesktopLayoutAuth.tsx","common/components/PrimaryButton/styledComponent.ts","common/components/PrimaryButton/PrimaryButton.tsx","common/styleGuide/Typos/index.js","common/components/InputFieldWithLable/styledComponents.ts","common/components/InputField/styledComponent.ts","common/components/InputField/InputField.tsx","common/components/ErrorIcon/ErrorIcon.tsx","common/components/InputFieldWithLable/InputFieldWithLable.tsx","Authuntication/components/SignInForm/styledComponent.tsx","common/components/Icons/Logo/Logo.tsx","Authuntication/components/SignInForm/SignInForm.tsx","common/constants/NameConstants.js","Authuntication/routes/SignInRoute/SignInRoute.tsx","Authuntication/routes/index.tsx","Authuntication/constants/RouteConstants.ts","common/components/DesktopLayoutMainPage/styledComponent.ts","common/components/PageHeader/styledComponent.tsx","common/components/Image/styledComponent.tsx","common/components/Image/Image.tsx","common/components/ReactModal/styledComponent.ts","common/components/ReactModal/ReactModalPopUp.tsx","common/components/PageHeader/PageHeader.tsx","common/components/DesktopLayoutMainPage/DesktopLayoutMainPage.tsx","common/components/PrimaryLeftIconDefault/styledComponent.ts","common/components/PrimaryLeftIconDefault/PrimaryLeftIconDefault.tsx","UserModule/components/UserObservatonListPage/styledComponent.tsx","common/components/ObservationListHeader/styledComponent.ts","common/components/ObservationListHeader/ObservationListHeader.tsx","common/components/ObservationListItem/styledComponent.ts","common/components/ObservationListItem/ObservationListItem.tsx","common/components/PaginationButton/styledComponent.ts","common/components/PaginationButton/PaginationButton.tsx","common/components/Pagination/styledComponent.js","common/components/Pagination/Pagination.tsx","common/components/DropDown/styledComponent.tsx","common/components/DropDown/DropDown.tsx","common/constants/APIConstants.js","common/utils/StorageUtils.js","common/utils/APIUtils.js","common/components/SvgComponent/index.tsx","common/components/Icons/Loader/SvgFile.tsx","common/components/Icons/Loader/index.tsx","common/components/LoadingWrapperWithFailure/styledComponents.tsx","common/components/LoadingWrapperWithFailure/LoadingView.jsx","common/components/LoadingWrapperWithFailure/FailureView.tsx","common/components/LoadingWrapperWithFailure/index.tsx","common/components/NoDataView/styledComponents.js","common/components/NoDataView/index.tsx","UserModule/components/UserObservatonListPage/UserObservatonListPage.tsx","UserModule/routes/UserObservatonListRoue/UserObservatonListRoute.tsx","UserModule/constants/RouteConstants.ts","common/components/TextArea/styledComponent.ts","common/components/TextArea/TextArea.tsx","UserModule/components/UserObservationPage/styledComponent.tsx","UserModule/components/UserObservationPage/UserObservationPage.tsx","UserModule/routes/UserObservationRoute/UserObservationRoute.tsx","common/components/ObservationScreen/styledComponent.tsx","common/components/DatePicker/styledComponent.js","common/components/DatePicker/DatePicker.tsx","common/components/SecondaryButton/styledComponent.ts","common/components/SecondaryButton/SecondaryButton.tsx","common/components/RadioButton/styledComponent.ts","common/components/RadioButton/RadioButton.tsx","common/components/ObservationScreen/ObservationScreen.tsx","UserModule/routes/UserObservationScreenRoute/UserObservationScreenRoute.tsx","common/components/ProtectedRoute/ProtectedRoute.tsx","UserModule/routes/index.tsx","RpModule/components/RpObservatonListPage/styledComponent.tsx","RpModule/components/RpObservatonListPage/RpObservatonListPage.tsx","RpModule/routes/RpObservatonListRoute/RpObservatonListRoute.tsx","RpModule/constants/RouteConstants.ts","RpModule/components/RpObservationPage/styledComponent.tsx","RpModule/components/RpObservationPage/RpObservationPage.tsx","RpModule/routes/RpObservationRoute/RpObservationRoute.tsx","RpModule/components/ObservationsAssignedToRp/styledComponent.tsx","RpModule/components/ObservationsAssignedToRp/ObservationsAssignedToRp.tsx","RpModule/routes/ObservationsAssignedToRpRoute/ObservationsAssignedToRpRoute.tsx","RpModule/routes/index.js","AdminModule/components/ListOfObservations/styledComponent.tsx","AdminModule/components/ListOfObservations/ListOfObservations.tsx","AdminModule/routes/ListOfObservationsRoute/ListOfObservationsRoute.tsx","AdminModule/constants/RouteConstants.ts","AdminModule/routes/index.js","common/utils/AuthUtils.js","Authuntication/constants/APIConstants.ts","Authuntication/services/EndPoints.ts","common/constants/EnvironmentConstants.js","Authuntication/services/AuthService/AuthAPI.ts","common/utils/TestUtils.ts","Authuntication/services/AuthService/AuthFixtureService.ts","Authuntication/stores/AuthStore/AuthStore.ts","Authuntication/stores/index.ts","UserModule/stores/Models/Observation/Observation.ts","UserModule/stores/UserStore/UserStore.ts","UserModule/constants/APIConstants.ts","UserModule/services/EndPoints.ts","UserModule/services/ObservationApiService/ObservationApiService.ts","UserModule/services/ObservationFixtureService/ObservationFixtureService.ts","UserModule/stores/index.ts","AdminModule/services/AdminObservationFixtureService/AdminObservationFixtureService.ts","AdminModule/stores/Models/AdminObsevationModel/AdminObsevationModel.ts","RpModule/stores/Models/RpModel/RpModel.ts","RpModule/stores/RpStore/RpStore.ts","AdminModule/stores/AdminStore/AdminStore.ts","RpModule/constants/APIConstants.ts","RpModule/services/EndPoints.ts","RpModule/services/RpObservationApiService/RpObservationApiService.ts","RpModule/services/RpObservationFixtureService/RpObservationFixtureService.ts","AdminModule/constants/APIConstants.ts","AdminModule/services/Endpoints.ts","AdminModule/services/AdminObservationApiService/AdminObservationApiService.ts","AdminModule/stores/index.ts","RpModule/stores/index.ts","App.tsx","serviceWorker.js","index.tsx"],"names":["App","className","colors","DesktopLayoutAuthDiv","styled","div","DesktopLayoutAuth","this","props","children","Component","ButtonElement","button","PrimaryButton","value","handleClick","apiStatus","onClick","disabled","type","height","width","color","Typo32DarkBlueGreyRubikRegular","p","Typo14DarkBlueGreyHKGroteskRegular","Typo12NeonRedHKGrotesk","Typo12SteelHKGroteskSemiBold","td","Typo12SteelHKGroteskSemiBoldLable","label","Typo24DarkBlueGreyHKGroteskMedium","Typo32BrightBlueHKGroteskMedium","Typo12DarkBlueGreyHKGroteskSemiBold","th","Typo8DarkBlueGreyHKGroteskSemiBold","Typo12WhiteHKGroteskBold","Typo18DarkBlueGreyHKGroteskMedium","Typo18BrightBlueHKGroteskBold","Typo18steelHKGroteskRegular","Typo14SteelHKGroteskRegular","Typo12DarkBlueGreyRubikMedium","LableTag","ErrorMsgField","InputWithLableDiv","InputElement","input","InputField","observer","inputRef","onHandleChange","event","target","React","createRef","testid","placeHolder","ref","onChange","placeholder","data-testid","defaultProps","ErrorIcon","InputFieldWithLable","inpuFieldRef","lable","errorMsg","errorIconClassName","inputClassName","SignInFornDiv","SignUpSpan","a","GreetingMessage","SignUpLink","SvgComponent","fill","viewBox","d","SignInForm","usernameRef","passwordRef","componentDidMount","current","focus","console","log","username","password","useNameErrorMessage","passwordErrorMessage","onChangePassword","onClickSignIn","onChangeUsername","getUserAuthAPIStatus","Logo","strings","logIn","hiTherePleaseSignIn","userName","doNotHaveAnAccount","href","signUp","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","USER","RP","ADMIN","SignInRoute","inject","action","bound","getAuthStore","getInjectedProps","authStore","onFailure","apiError","getUserAuthAPIError","undefined","toast","error","progress","handleOnclick","userSignIn","onSuccess","userType","history","push","observable","withRouter","authRoutes","path","component","DesktopLayoutMainPageDiv","PageHeaderDiv","Title","UserName","RpFeatures","LeftPart","RightPart","RightSubPartOne","RightSubPartTwo","ImageElement","LazyLoadImage","Image","src","onHandleClick","PopUpDiv","UserNmae","ReactModalPopUp","signOut","userSignOut","isOpen","profilePicStyle","btnStyle","BtnValue","customStyles","style","onBlur","content","top","left","PageHeader","closeTab","rpFeatures","reportingPortal","assignedToMe","myObservations","totalObservations","categories","currentPage","navigateTOPage","DesktopLayoutMainPage","profilePic","LeftIcon","img","PrimaryLeftIconDefault","PageHeading","ObseravationsHeader","PageHeadingAndAddButonDiv","ObseravationsListTable","table","TableHeader","thead","TableBody","tbody","TableRow","tr","PersonTypeDiv","span","TableHeading","TableHeadingDiv","userFeatures","reportedOn","dueDate","heading","reportedOnSort","dueDateOnSort","ObservationListHeader","headings","map","key","Math","random","RectangleSeverity","bgColor","RectangleActionStatus","PersonDetails","PersonData","TableData","MsgCount","SevertyStatus","ObservationStatus","ObservationListItem","title","severty","pairedPerson","status","messages","onClickObservation","dueDateType","observationId","assignedTo","reportedBy","id","first_name","phone_number","slice","Object","keys","length","profile_pic","PaginationBtn","PaginationButton","svg","changePage","isDisable","SvgImg","alt","PaginationBtnDiv","CurrentPage","Pagination","goToRandomPage","getPageButtons","totalPages","Array","from","v","i","page","arrayOfPages","goToPreviousPage","goToNextPage","butttons","select","option","DropDown","renderOptions","options","renderValue","onSlectOption","isDisabled","isMulti","defaultValue","apiMethods","resStatuses","statusCodes","apiErrorProblems","getAccessToken","Cookie","get","setAccessToken","accessToken","set","expires","networkCallWithApisauce","api","url","requestObject","response","setHeader","getData","getUserDisplayableErrorMessage","getFormattedError","description","errorViewDescription","errorConstant","errorCode","parsedError","parsedMessage","JSON","parse","data","message","errorTitle","errorDescription","e","res_status","http_status_code","networkError","timeoutError","problem","isNetworkError","stringify","RenderComponent","renderComponent","other","Loader","xmlns","aria-label","cx","cy","r","attributeName","to","begin","dur","values","calcMode","repeatCount","SvgFile","LoadingViewContainer","FailureViewContainer","FailureViewMessage","RetryButton","LoadingView","FailureView","onRetryClick","errorMessage","LoadingWrapperWithFailure","RenderSuccessUI","renderSuccessUI","API_FETCHING","API_SUCCESS","API_FAILED","NoDataViewContainer","NoDataViewText","NoDataView","UserObservatonListPage","renderSuccessUi","observationList","filterObservationList","filterType","addNew","listofObservations","all","acknowledgedbyRp","resolved","closed","reported","actioninProgress","Fragment","observation","getObservationListAPIStatus","getObservationListAPIError","UserObservatonListRoute","doNetworkCalls","getUserStore","userStore","getObservationList","onClickAddNew","alert","pathname","state","toJS","TextAreaElement","textarea","TextArea","BackToObservationsLink","FieldName","ObservationForm","DragAndDrop","FieldContainer","Required","InputAndErrorField","UserObservationPage","onClickSubmit","cateogaryOfObservation","subCateogaryOfObservation","severityOfObservation","descriptionOfObservation","onChangeTitleOfTheObservation","attachmentsOfObservation","onChangeCateogary","onChangeSubCateogary","onChangeSeverity","onChangeDescription","goBack","getSubCateogaries","cateogaries","titleErrorMsg","severityErrorMsg","descriptionErrorMsg","cateogariesList","usersScreen","titleOfTheObservation","culturalDeviations","backToObservations","cateogary","severity","attachments","subCateogary","submit","onDrag","onDragOver","UserObservationRoute","init","getCateogaries","getCategoryAndSubCategoryId","category_id","sub_category_id","temp","find","name","forEach","temp2","sub_categories","onHandliErrorMsg","categoriesIds","addNewObservation","getPostObservationAPIStatus","ObsertationDiv","ChatHeading","Buttons","ButtonsDiv","RadioButtonsDiv","HeaderDiv","RadioLable","DatePickerElement","DatePicker","onChangeDate","min","max","SecondaryButton","RadioButtonElement","RadioButton","onHandleCheck","privacy","checked","ObservationScreen","assignedToOfObservation","statusOfObservation","dueDateOfObservation","privacyOfObservation","onChangePrivacy","onChangeAssignedTO","onChangeDueDate","onChangeStatus","onUpdate","reportedOnOfObservation","onReset","onChangeSubCategory","onChangeCategory","rpList","reset","publicBtn","privateBtn","chat","update","reportedDate","dueDateNewFormat","UserObservationScreenRoute","assignedTO","doNetworkCalss","match","params","getObservation","observationDetails","assigned_to","due_date_type","due_date","category","sub_category","updationFail","getAssignedToId","rp","user_id","getComputedRpList","reported_on","getObservationAPIStatus","getCateogariesAPIStatus","getObservationAPIError","getCateogariesAPIError","location","getLoadingStatus","typeOfUser","observation_id","assigned_to_id","updateObservationDeatails","updateObservationAPIError","ProtectedRoute","userRoutes","exact","RpObservatonListPage","RpObservatonListRoute","getRpStore","rpStore","RpObservationPage","RpObservationRoute","onHandleErrorMsg","ObservationsAssignedToRp","assignedObservationsGoToNextPage","assignedObservationsGoToPreviousPage","assignedObservationsGoToRandomPage","filterAssignedObservationList","filterTypeOfAssignedObservation","assignedObservationsDueDateOnSort","assignedObservationsReportedOnSort","assignedObservationAPIStatus","assignedObservationAPIError","ObservationsAssignedTOMe","ObservationsAssignedToRpRoute","getAssignedObservationList","assignedObservationListForRp","assignedObservationsCurrentPage","assignedObservationsTotalPages","rpRoutes","FilterBar","FilterLefttSubPart","ListOfObservations","filterCategory","filterSubCategory","getSubCateogariesMultiple","statusFilterOfList","setStatusFilterOfList","categotyFilterType","subCategotyFilterType","adminObservationsListAPIStatus","adminObservationsListAPIError","ListOfObservationsRoute","getAdminStore","adminStore","getAdminObservationList","dueDateSortOfList","adminObservationsList","goToPreviousObservations","goToNextObservations","goToRandomObservations","listOfObservationsTotalPages","listOfObservationsCurrentPage","adminRoutes","networkCallWithApisauceWithoutAccessToken","apiUrls","endPoints","envVaribles","process","Config","variable","includes","envKey","replace","AuthAPI","create","baseURL","resolveWithTimeout","timeOut","IS_JEST","Promise","resolve","setTimeout","AuthFixtureService","getSignInResponce","getUserSignOutResponse","AuthStore","authAPIService","API_INITIAL","getUserSignOutAPIStatus","getUserSignOutAPIError","request","signInPromise","signInAPI","bindPromiseWithOnSuccess","setGetUserAuthAPIStatus","setUserAuthAPIResponse","user_type","catch","setGetUserAuthAPIError","SignInAPIResponse","Access_token","access_token","remove","signOutPromise","signoutAPI","setGetUserSignOutSignOutStatus","setUserSignOutAPIResponse","setGetUserSignOutAPIError","SignOutAPIResponse","Observation","messages_count","SORT_OPTIONS","SORT_KEYS","UserStore","userObservationAPIService","getPostObservationAPIError","updateObservationAPIStatus","observationsSortOption","reportedOnSortType","dueDateSortType","observationsSortType","subCateogaries","filtersOfObservation","details","updateObservationApiPromise","updateObservationApi","setUpdateObservationApiAPIStatus","setUpdateObservationApiResponse","setUpdateObservationApiAPIError","categoriesPromise","getCateogariesApi","setGetCateogariesApiAPIStatus","setGetCateogariesApiResponse","setGetCateogariesApiAPIError","offset","ceil","sort_on","sort_by","filter_on","userObservationPromise","getObservationListApi","setGetObservationListApiAPIStatus","setGetObservationListApiResponse","setGetObservationListApiAPIError","ObservationListResponse","user_observations_count","user_observations","observationPromise","getObservationApi","setGetObservationApiAPIStatus","setGetObservationApiResponse","setGetObservationApiAPIError","ObservationResponse","rp_list","postObservationPromise","postObservationApi","setPostObservationApiAPIStatus","setPostObservationApiResponse","setPostObservationApiAPIError","postObservationResponse","parseInt","computed","ObservationApiService","endPoint","obseravation","Limit","offeset","Details","ObservationFixtureService","getPostObservationResponse","getObservationsList","splice","getUpdateObservationResponse","AdminObservationFixtureService","dummyData","all_observations","getObservationsResponse","total_observations_count","AdminObsevationModel","reported_by","RpModel","RpStore","rpObservationFixtureService","observationFixtureService","rpStoreInit","assignedObservationsSortType","assignedObservationsSortOption","assignedObservationReportedOnSortType","assignedObservationDueDateSortType","rpObservationAPIService","getAssignedObservationListApi","setAssignedObservationListApiAPIStatus","setAssignedObservationListApiResponse","setAssignedObservationListApiAPIError","assignedObservationListResponse","observations_assigned_to_rp","AdminStore","adminObservationAPIService","initAdmin","categories_ids","cateogary2","sub_category_ids","subCategory","subCategory2","adminObservationPromise","listOfObservationApi","setAdminObservationListApiAPIStatus","setAdminObservationListApiResponse","setAdminObservationListApiAPIError","adminObservationListResponse","subCategories","RpObservationApiService","RpObservationFixtureService","getAssignedObservationsResponse","AdminObservationApiService","basename","HomePage","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"giFAaeA,MAVf,WACG,OACG,yBAAKC,UAAU,OACZ,4BAAQA,UAAU,cACf,uC,qFCPCC,EACD,UADCA,EAEH,UAFGA,EAGH,UAHGA,EAIK,UAJLA,EAKE,UALFA,EAOG,UAPHA,EAaQ,U,gHCVrB,IAAMC,EAAuBC,IAAOC,IAAV,IAAkB,2EACzBH,GCFbI,E,iLAEA,OAAO,kBAACH,EAAD,KAAuBI,KAAKC,MAAMC,c,GAFfC,a,uMCAhC,IAAMC,EAAgBP,IAAOQ,OAAV,IACZ,8D,iBCODC,E,iLACO,IAAD,EAC+CN,KAAKC,MAAlDM,EADF,EACEA,MAAOC,EADT,EACSA,YAAad,EADtB,EACsBA,UAAWe,EADjC,EACiCA,UACvC,OACG,kBAACL,EAAD,CACGV,UAAWA,EACXa,MAAOA,EACPG,QAASF,EACTG,SAAwB,MAAdF,GAEK,MAAdA,EACE,kBAAC,IAAD,CAAQG,KAAK,OAAOC,OAAQ,GAAIC,MAAO,GAAIC,MAAM,UAEjDR,O,GAbaJ,a,m1JCP5B,IAAMa,GAAiCnB,IAAOoB,EAAV,MAsB9BC,IAXuBrB,IAAOoB,EAAV,KAQdtB,GAG+BE,IAAOoB,EAAV,OAoBlCE,IAVyBtB,IAAOoB,EAAV,KAQhBtB,GAEmBE,IAAOoB,EAAV,KAQhBtB,IAENyB,GAA+BvB,IAAOwB,GAAV,KAQtB1B,GAEN2B,GAAoCzB,IAAO0B,MAAV,IAQ3B5B,GAaN6B,IAXsC3B,IAAOoB,EAAV,IAQ7BtB,GAG8BE,IAAOoB,EAAV,MAoBjCQ,IAVgC5B,IAAOoB,EAAV,KAUKpB,IAAOoB,EAAV,IAQzBtB,IAEN+B,GAAsC7B,IAAO8B,GAAV,IAQ7BhC,GAGNiC,GAAqC/B,IAAOoB,EAAV,IAQ5BtB,GAGNkC,GAA2BhC,IAAOoB,EAAV,IAQlBtB,GAGNmC,GAAoCjC,IAAOoB,EAAV,IAQ3BtB,GAENoC,GAAgClC,IAAOoB,EAAV,IAQvBtB,GAGNqC,GAA8BnC,IAAOoB,EAAV,IAQrBtB,GAGNsC,GAA8BpC,IAAOoB,EAAV,IAQrBtB,GAGNuC,GAAgCrC,IAAOoB,EAAV,IAQvBtB,G,sPCjMZ,IAAMwC,GAAWtC,YAAOyB,GAAPzB,CAAH,MACRuC,GAAgBvC,YAAOsB,GAAPtB,CAAH,MAGbwC,GAAoBxC,IAAOC,IAAV,M,uGCRvB,I,SAAMwC,GAAezC,IAAO0C,MAAV,KACX,aCUDC,GADLC,a,kBAOE,WAAYxC,GAAQ,IAAD,8BAChB,4CAAMA,KAHTyC,cAEmB,IAInBC,eAAiB,SAAAC,GACd,EAAK3C,MAAM0C,eAAeC,EAAMC,OAAOtC,QAHvC,EAAKmC,SAAWI,IAAMC,YAFN,E,sEAOT,IAAD,EAQF/C,KAAKC,MANNW,EAFG,EAEHA,KACAoC,EAHG,EAGHA,OACAzC,EAJG,EAIHA,MAEA0C,GANG,EAKHN,eALG,EAMHM,aACAvD,EAPG,EAOHA,UAEH,OACG,kBAAC4C,GAAD,CACGY,IAAKlD,KAAK0C,SACV9B,KAAMA,EACNL,MAAOA,EACP4C,SAAUnD,KAAK2C,eACfS,YAAaH,EACbvD,UAAWA,EACX2D,cAAaL,Q,GA9BA7C,a,GACfmD,aAAe,CACnBX,eAAgB,c,qBCVhBY,I,wLACO,IACC7D,EAAcM,KAAKC,MAAnBP,UACR,OAAO,kBAAC,KAAD,CAAgBA,UAAWA,Q,GAHhBS,cCUlBqD,G,YAGH,WAAYvD,GAAQ,IAAD,8BAChB,4CAAMA,KAHTwD,kBAEmB,EAEhB,EAAKA,aAAeX,IAAMC,YAFV,E,sEAIT,IAAD,EAWF/C,KAAKC,MATNyD,EAFG,EAEHA,MACA9C,EAHG,EAGHA,KACAL,EAJG,EAIHA,MACAoC,EALG,EAKHA,eACAgB,EANG,EAMHA,SACAjE,EAPG,EAOHA,UACAuD,EARG,EAQHA,YACAW,EATG,EASHA,mBACAC,EAVG,EAUHA,eAEH,OACG,kBAACxB,GAAD,CAAmB3C,UAAWA,GAC3B,kBAACyC,GAAD,KAAWuB,GACX,kBAAC,GAAD,CACGR,IAAKlD,KAAKyD,aACV7C,KAAMA,EACNL,MAAOA,EACPoC,eAAgBA,EAChBM,YAAaA,EACbvD,UAAWmE,IAEA,KAAbF,GAAmB,kBAAC,GAAD,CAAWjE,UAAWkE,IAC1C,kBAACxB,GAAD,KAAgBuB,Q,GA/BMxD,a,6cCTlC,IAAM2D,GAAgBjE,IAAOC,IAAV,KACZ,4DAGgBH,GAGjBoE,GAAalE,IAAOmE,EAAV,KACJrE,GAENsE,GAAkBpE,YAAOmB,GAAPnB,CAAH,KACd,iFAIDqE,GAAarE,YAAOqB,GAAPrB,CAAH,MCDDsE,I,iCAAAA,GAnBf,SAAsBlE,GACpB,OACE,qCAAKa,MAAO,GAAID,OAAQ,GAAIuD,KAAK,OAAOC,QAAQ,aAAgBpE,GAC9D,wBACEmE,KAAK,UACLE,EAAE,m4EAEJ,wBACEF,KAAK,UACLE,EAAE,8JAEJ,wBACEF,KAAK,UACLE,EAAE,mKCaJC,G,YAGH,WAAYtE,GAAQ,IAAD,8BAChB,4CAAMA,KAHTuE,iBAEmB,IADnBC,iBACmB,IAKnBC,kBAAoB,WAAO,IAAD,YACvB,YAAKF,YAAYG,eAAjB,mBAA0BlB,aAAakB,eAAvC,mBAAgDjC,SAASiC,eAAzD,SAAkEC,QAClEC,QAAQC,IAAR,UACG,EAAKL,YAAYE,eADpB,iBACG,EAA0BlB,aAAakB,eAD1C,iBACG,EAAgDjC,SAASiC,eAD5D,aACG,EACKvB,cAPR,EAAKoB,YAAc1B,IAAMC,YACzB,EAAK0B,YAAc3B,IAAMC,YAHT,E,sEAaT,IAAD,EAUF/C,KAAKC,MARN8E,EAFG,EAEHA,SACAC,EAHG,EAGHA,SACAC,EAJG,EAIHA,oBACAC,EALG,EAKHA,qBACAC,EANG,EAMHA,iBACAC,EAPG,EAOHA,cACAC,EARG,EAQHA,iBACAC,EATG,EASHA,qBAEH,OACG,kBAAC,EAAD,KACG,kBAACxB,GAAD,KACG,kBAACyB,GAAD,MACA,kBAACtB,GAAD,CAAiBvE,UAAW,oBACxB8F,EAAQC,MAAMC,qBAElB,kBAAC,GAAD,CACGxC,IAAKlD,KAAKwE,YACV9E,UAAW,mBACXkB,KAAM,OACN8C,MAAO8B,EAAQC,MAAME,SACrBpF,MAAOwE,EACPpC,eAAgB0C,EAChB1B,SAAUsB,EACVhC,YAAa,WACbW,mBAAoB,aACpBC,eAC2B,KAAxBoB,EACK,sBACA,kBAGX,kBAAC,GAAD,CACG/B,IAAKlD,KAAKyE,YACV/E,UAAW,mBACXkB,KAAM,WACNL,MAAOyE,EACPtB,MAAO8B,EAAQC,MAAMT,SACrBrC,eAAgBwC,EAChBxB,SAAUuB,EACVjC,YAAa,WACbW,mBAAoB,aACpBC,eAC4B,KAAzBqB,EACK,sBACA,kBAGX,kBAAC,EAAD,CACGxF,UAAW,uBACXa,MAAOiF,EAAQC,MAAMA,MACrBjF,YAAa4E,EACb3E,UAAW6E,IAEd,kBAACpB,GAAD,KACIsB,EAAQC,MAAMG,mBACf,kBAAC7B,GAAD,CAAY8B,KAAM,WACdL,EAAQC,MAAMK,UAIxB,kBAAC,KAAD,CACGC,SAAS,gBACTC,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,S,GAxFFpG,aC5BZqG,GAAO,OACPC,GAAK,KACLC,GAAQ,QCkBfC,I,GAFLC,YAAO,a,GAiBJC,IAAOC,M,GAOPD,IAAOC,M,GAsBPD,IAAOC,M,MA7CVrE,a,kcASEsE,aAAa,WACV,OAAO,EAAKC,mBAAmBC,W,EAGlCD,iBAAiB,kBAAqB,EAAK/G,O,EAiB3CiH,UAAY,WAAO,IACaC,EAAa,EAAKJ,eAAvCK,oBACS,OAAbD,QAAkCE,IAAbF,GACtBG,KAAMC,MAAM,EAAKR,eAAeK,oBAAqB,CAClDrB,SAAU,gBACVC,UAAW,IACXC,iBAAiB,EACjBE,cAAc,EACdI,cAAc,EACdD,WAAW,EACXkB,cAAUH,K,EAiBnBjC,c,sBAAgB,sBAAApB,EAAA,0DACT,EAAKyD,gBADI,gCAEJ,EAAKV,eAAeW,WACvB,CAAE3C,SAAU,EAAKA,SAAUC,SAAU,EAAKA,UAC1C,EAAK2C,UACL,EAAKT,WALE,2C,EAShBS,UAAY,SAACC,GACV,OAAQA,GACL,KAAKpB,GACF,EAAKvG,MAAM4H,QAAQC,KAAK,yBACxB,MACH,KAAKrB,GACF,EAAKxG,MAAM4H,QAAQC,KAAK,uBACxB,MACH,KAAKpB,GACF,EAAKzG,MAAM4H,QAAQC,KAAK,yB,gFA3DFvH,GAC5BP,KAAK+E,SAAWxE,EACM,KAAlBP,KAAK+E,SACN/E,KAAKiF,oBAAsB,wBACzBjF,KAAKiF,oBAAsB,K,uCAGJ1E,GAC5BP,KAAKgF,SAAWzE,EACM,KAAlBP,KAAKgF,SACNhF,KAAKkF,qBAAuB,wBAC1BlF,KAAKkF,qBAAuB,K,sCAyBjC,GANAlF,KAAKiF,oBAAsB,GAC3BjF,KAAKkF,qBAAuB,GACN,KAAlBlF,KAAK+E,WACN/E,KAAKiF,oBAAsB,yBACR,KAAlBjF,KAAKgF,WACNhF,KAAKkF,qBAAuB,yBACT,KAAlBlF,KAAK+E,UAAqC,KAAlB/E,KAAKgF,SAC9B,OAAO,I,+BA2BH,IACCM,EAAyBtF,KAAK+G,eAA9BzB,qBACR,OACG,gBAAC,GAAD,CACGP,SAAU/E,KAAK+E,SACfC,SAAUhF,KAAKgF,SACfC,oBAAqBjF,KAAKiF,oBAC1BC,qBAAsBlF,KAAKkF,qBAC3BC,iBAAkBnF,KAAKmF,iBACvBC,cAAepF,KAAKoF,cACpBC,iBAAkBrF,KAAKqF,iBACvBC,qBAAsBA,Q,GA1FRxC,a,wCACtBiF,K,wEAAsB,M,wCACtBA,K,wEAAsB,M,mDACtBA,K,wEAAiC,M,oDACjCA,K,wEAAkC,M,wCAClCA,K,wEAAsB,M,4YA0FXC,eAAWrB,IC5GpBsB,GAAa,CAAC,kBAAC,IAAD,CAAOC,KCPC,WDOmBC,UAAWxB,M,8HEL1D,IAAMyB,GAA2BvI,IAAOC,IAAV,KACvB,4DACA,iB,suCCIP,IAAMuI,GAAgBxI,IAAOC,IAAV,KACZ,+DAKDwI,GAAQzI,YAAO2B,GAAP3B,CAAH,MAGL0I,GAAW1I,YAAOiC,GAAPjC,CAAH,MASR2I,IANe3I,YAAOkC,GAAPlC,CAAH,MAGGA,YAAOmC,GAAPnC,CAAH,MAGCA,IAAOoB,EAAV,OAWVwH,GAAW5I,IAAOC,IAAV,KACP,sCAGD4I,GAAY7I,IAAOC,IAAV,KACR,sCAGD6I,GAAkB9I,IAAOC,IAAV,KACd,2EAED8I,GAAkB/I,IAAOC,IAAV,KACd,sC,mHC7CP,IAAM+I,GAAehJ,YAAOiJ,iBAAPjJ,CAAH,KACX,ICEDkJ,G,iLACO,IAAD,EACoC/I,KAAKC,MAAvC+I,EADF,EACEA,IAAKtJ,EADP,EACOA,UAAWuJ,EADlB,EACkBA,cACxB,OACG,kBAACJ,GAAD,CACGnI,QAASuI,EACTvJ,UAAWA,EACXsJ,IAAKA,Q,GAPG7I,a,+NCJpB,I,qBAAM+I,GAAWrJ,IAAOC,IAAV,KAAkB,0FACzB,IAIDqJ,GAAWtJ,YAAOkC,GAAPlC,CAAH,MCaRuJ,GADLxC,YAAO,Y,+MAELyC,QAAU,WACP,EAAKpJ,MAAMgH,UAAUqC,YAClB,IACA,eACA,eAEH,EAAKrJ,MAAM4H,QAAQC,KAAK,Y,wEAEjB,IAAD,EAUF9H,KAAKC,MARN+I,EAFG,EAEHA,IACArD,EAHG,EAGHA,SACA4D,EAJG,EAIHA,OACA/I,EALG,EAKHA,YACAgJ,EANG,EAMHA,gBACAC,EAPG,EAOHA,SACAC,EARG,EAQHA,SACAC,EATG,EASHA,aAEH,OACG,kBAAC,KAAD,CAAOJ,OAAQA,EAAQK,MAAOD,GAC3B,kBAACT,GAAD,CAAUW,OAAQrJ,GACf,kBAAC,GAAD,CAAOwI,IAAKA,EAAKtJ,UAAW8J,IAC5B,kBAACL,GAAD,KAAWxD,GACX,kBAAC,EAAD,CACGnF,YAAaR,KAAKqJ,QAClB3J,UAAW+J,EACXlJ,MAAOmJ,U,GA5BKvJ,e,GAoCf6H,eAAWoB,ICrCpBO,GAAe,CAClBG,QAAS,CACNC,IAAK,MACLC,KAAM,MACNjE,SAAU,WACVjF,MAAO,QACPD,OAAQ,UAaRoJ,GADLxH,a,yPAIEyH,SAAW,WACR,EAAKX,QAAS,G,EAEjBN,cAAgB,WACb,EAAKM,QAAS,G,wEAGP,IAAD,EAOF/D,EAAQ2E,WALTC,EAFG,EAEHA,gBACAC,EAHG,EAGHA,aACAC,EAJG,EAIHA,eACAC,EALG,EAKHA,kBACAC,EANG,EAMHA,WANG,EAeFxK,KAAKC,MANN+I,EATG,EASHA,IACArD,EAVG,EAUHA,SAEA8E,GAZG,EAWHN,WAXG,EAYHM,aACA7C,EAbG,EAaHA,SACA8C,EAdG,EAcHA,eAGH,OACG,kBAACrC,GAAD,KACG,kBAACI,GAAD,KACG,kBAAC,GAAD,CACG/I,UAAW,OACXsJ,IAAI,mGAEP,kBAACV,GAAD,KAAQ8B,IAEX,kBAAC1B,GAAD,KACiB,SAAbd,GAAuC,KAAhB6C,GACrB,kBAAC9B,GAAD,KACG,kBAACH,GAAD,CACG9H,QAAS,kBAAMgK,EAAeL,IAC9B3K,UACG+K,IAAgBJ,EAAe,cAAgB,GAElDhH,cAAagH,GAEZA,GAEJ,kBAAC7B,GAAD,CACG9H,QAAS,kBAAMgK,EAAeJ,IAC9B5K,UACG+K,IAAgBH,EAAiB,cAAgB,GAEpDjH,cAAaiH,GAEZA,IAII,OAAb1C,GACE,kBAACe,GAAD,KACG,kBAACH,GAAD,CACG9H,QAAS,kBAAMgK,EAAeL,IAC9B3K,UAAU,cACV2D,cAAagH,GAEZA,GAEJ,kBAAC7B,GAAD,CACG9H,QAAS,kBAAMgK,EAAeJ,IAC9BjH,cAAaiH,GAEZA,IAII,UAAb1C,GACE,kBAACe,GAAD,KACG,kBAACH,GAAD,CACGnF,cAAa,qBACb3C,QAAS,kBAAMgK,EAAeH,IAC9B7K,UAAU,eAET6K,GAEJ,kBAAC/B,GAAD,CACGnF,cAAa,aACb3C,QAAS,kBAAMgK,EAAeF,KAE7BA,IAIV,kBAAC5B,GAAD,KACG,kBAACL,GAAD,KAAW5C,GACX,kBAAC,GAAD,CACGjG,UAAW,UACXsJ,IAAKA,EACLC,cAAejJ,KAAKiJ,gBAEvB,kBAAC,GAAD,CACGU,aAAcA,GACdF,SAAU,eACVC,SAAU,WACV/D,SAAUA,EACVnF,YAAaR,KAAKkK,SAClBX,OAAQvJ,KAAKuJ,OACbP,IAAKA,EACLQ,gBAAiB,mB,GA5GbrJ,a,sCACrB4H,K,yEAAoB,K,YCzBlB4C,GADLlI,a,uLAUY,IAAD,EAQFzC,KAAKC,MANN0F,EAFG,EAEHA,SACAiF,EAHG,EAGHA,WACAT,EAJG,EAIHA,WACAM,EALG,EAKHA,YACA7C,EANG,EAMHA,SACA8C,EAPG,EAOHA,eAEH,OACG,kBAACtC,GAAD,KACG,kBAAC,GAAD,CACGzC,SAAUA,EACV+E,eAAgBA,EAChB9C,SAAUA,EACV6C,YAAaA,EACbN,WAAYA,EACZnB,IAAK4B,IAEP5K,KAAKC,MAAMC,c,GA5BYC,a,GAC1BmD,aAAa,CACjBqC,SAAS,GACTiF,WAAW,GACXT,WAAW,GACXM,YAAY,GACZ7C,SAAS,GACT8C,eAAe,c,yQCpBrB,IAAMtK,GAAgBP,IAAOQ,OAAV,KACZ,sCAMDwK,GAAWhL,IAAOiL,IAAV,KACP,ICADC,G,iLACO,IAAD,EACyC/K,KAAKC,MAA5CM,EADF,EACEA,MAAOC,EADT,EACSA,YAAawI,EADtB,EACsBA,IAAKtJ,EAD3B,EAC2BA,UACjC,OACG,kBAAC,GAAD,CACGA,UAAWA,EACXa,MAAOA,EACPG,QAASF,GAET,kBAACqK,GAAD,CAAU7B,IAAKA,IACdzI,O,GAVwBJ,a,gfCPrC,IAAM6K,GAAcnL,YAAO4B,GAAP5B,CAAH,MAEXoL,GAAsBpL,IAAOC,IAAV,KAClB,yCAIDoL,GAA4BrL,IAAOC,IAAV,KACxB,qEAEDqL,GAAyBtL,IAAOuL,MAAV,KACrB,IAEDC,GAAcxL,IAAOyL,MAAV,MACXC,GAAY1L,IAAO2L,MAAV,M,6VCbf,IAAMC,GAAW5L,IAAO6L,GAAV,KAAiB,oEAMzBC,GAAgB9L,IAAO+L,KAAV,KACZ,oEAEDC,GAAehM,YAAO6B,GAAP7B,CAAH,KACX,0CCAP,SAASiM,GAAgB7L,GAAQ,IAE1BS,EAFyB,EACG8E,EAAQuG,aAAhCC,EADqB,EACrBA,WAAYC,EADS,EACTA,QAKpB,OAHIhM,EAAMiM,UAAYF,EAAYtL,EAAUT,EAAMkM,eACzClM,EAAMiM,UAAYD,IAASvL,EAAUT,EAAMmM,eAEhDnM,EAAMiM,UAAYF,GAAc/L,EAAMiM,UAAYD,EAEhD,kBAACJ,GAAD,CAAcnL,QAASA,GACpB,kBAACiL,GAAD,KACI1L,EAAMiM,QACP,kBAAC,GAAD,CACGxM,UAAW,iBACXsJ,IAAI,qGAMT,kBAAC6C,GAAD,KAAe5L,EAAMiM,S,IAI5BG,G,iLACO,IAAD,EAC8CrM,KAAKC,MAAjDqM,EADF,EACEA,SAAUF,EADZ,EACYA,cAAeD,EAD3B,EAC2BA,eACjC,OACG,kBAACV,GAAD,KACIa,EAASC,KAAI,SAAAL,GAAO,OAClB,kBAACJ,GAAD,CACGU,IAAKC,KAAKC,SACVP,eAAgBA,EAChBC,cAAeA,EACfF,QAASA,Y,GAVS/L,a,2tCC7BpC,IAAMsL,GAAW5L,IAAO6L,GAAV,KAAiB,oEAUzBiB,GAAoB9M,IAAOC,IAAV,KAChB,8DAIgB,SAAAG,GAAK,OAAIA,EAAM2M,WAGhCC,GAAwBhN,IAAOC,IAAV,KACpB,IAODgN,GAAgBjN,IAAOC,IAAV,KACZ,0CAGDiN,GAAalN,IAAOC,IAAV,KACT,yCAGDkN,GAAYnN,YAAOuB,GAAPvB,CAAH,KACR,8DAMDoN,GAAWpN,IAAO+L,KAAV,KACP,8DAUDsB,GAAgBrN,YAAOgC,GAAPhC,CAAH,MACbsN,GAAoBtN,YAAO+B,GAAP/B,CAAH,MCfjBuN,G,iLACO,IAAD,EAgBFpN,KAAKC,MAdNoN,EAFG,EAEHA,MACArB,EAHG,EAGHA,WAEAsB,GALG,EAIHC,aAJG,EAKHD,SACAE,EANG,EAMHA,OACAvB,EAPG,EAOHA,QACAwB,EARG,EAQHA,SACAzE,EATG,EASHA,IACA0E,EAVG,EAUHA,mBACAC,EAXG,EAWHA,YACAC,EAZG,EAYHA,cACAC,EAbG,EAaHA,WACAC,EAdG,EAcHA,WACAlG,EAfG,EAeHA,SAGCgF,EACW,SAAZU,EACK,UACY,QAAZA,EACA,UACA,UAER,OACG,kBAAC,GAAD,CACGS,GAAE,UAAKH,GACPvK,cAAY,wBACZ3C,QAAS,kBAAMgN,EAAmBE,KAElC,kBAACZ,GAAD,KAAYK,GAEXzF,IAAalB,IAASoH,EACpB,kBAACd,GAAD,KACG,kBAACF,GAAD,KACG,kBAAC,GAAD,CAAO9D,IAAKA,EAAKtJ,UAAW,eAC5B,kBAACqN,GAAD,KACIe,EAAWE,WACZ,6BAFH,MAGOF,EAAWG,gBAKxB,kBAACjB,GAAD,eAAehB,EAAWkC,MAAM,EAAG,IAAnC,eAA6ClC,EAAWkC,MACrD,MAILtG,IAAalB,GACX,kBAACsG,GAAD,KACG,kBAACL,GAAD,CAAmBC,QAASA,GACzB,kBAACM,GAAD,KAAgBI,KAGrB1F,IAAanB,IAAOqH,EACrB,kBAACd,GAAD,KACG,kBAACF,GAAD,KACG,kBAAC,GAAD,CAAO9D,IAAKA,EAAKtJ,UAAW,eAC5B,kBAACqN,GAAD,KACIe,EAAWE,WACZ,6BAFH,MAGOF,EAAWG,gBAKxB,kBAACjB,GAAD,KACkB,MAAda,GACkC,IAAnCM,OAAOC,KAAKP,GAAYQ,OACrB,kBAACvB,GAAD,KACG,kBAAC,GAAD,CACG9D,IACG6E,EAAWS,YACNT,EAAWS,YACXtF,EAERtJ,UAAW,eAEd,kBAACqN,GAAD,KACIc,EAAWG,WACZ,6BAFH,MAGOH,EAAWI,eAIrB,kBAACnB,GAAD,KACG,kBAACC,GAAD,6BAMXnF,IAAalB,GACX,kBAACsG,GAAD,KACG,kBAACH,GAAD,KACG,kBAACM,GAAD,KAAoBK,KAI1B,kBAACR,GAAD,KACG,kBAACL,GAAD,CAAmBC,QAASA,GACzB,kBAACM,GAAD,KAAgBI,KAKxB1F,IAAalB,GACX,kBAACsG,GAAD,KACkB,MAAda,GACkC,IAAnCM,OAAOC,KAAKP,GAAYQ,OACrB,kBAACvB,GAAD,KACG,kBAAC,GAAD,CAAO9D,IAAKA,EAAKtJ,UAAW,eAC5B,kBAACqN,GAAD,KACIc,EAAWG,WACZ,6BAFH,MAGOH,EAAWI,eAIrB,kBAACnB,GAAD,KACG,kBAACC,GAAD,6BAKT,kBAACC,GAAD,KACG,kBAACH,GAAD,KACG,kBAACM,GAAD,KAAoBK,KAK7B,kBAACR,GAAD,KArKG,WAqKSW,EAAyB1B,EApKjC,WAsKJ,kBAACe,GAAD,KACG,kBAAC,GAAD,CACGtN,UAAW,eACXsJ,IACG,mGAGN,kBAACiE,GAAD,KAAWQ,S,GAhJQtN,a,qHC5ClC,IAAMoO,GAAgB1O,IAAOQ,OAAV,KAAqB,mJAC/B,SAAAJ,GAAK,OAAwB,IAAnBA,EAAMU,SAAoB,cAAgB,MCMvD6N,G,iLACO,IAAD,EACiCxO,KAAKC,MAApCwO,EADF,EACEA,IAAKC,EADP,EACOA,WAAYC,EADnB,EACmBA,UACnBC,EAAS,yBAAKC,IAAK,aAAc7F,IAAKyF,IAC5C,OACG,kBAACF,GAAD,CAAe5N,SAAUgO,EAAWjO,QAASgO,GACzCE,O,GANkBzO,a,gYCP/B,IAAM2O,GAAmBjP,IAAOC,IAAV,KACf,gEAGDiP,GAAclP,IAAOQ,OAAV,KACV,yFCMD2O,IDFYnP,IAAOC,IAAV,KACR,4CAEUD,IAAOoB,EAAV,KACP,yF,kNCDJgO,eAAiB,SAAArM,GACd,EAAK3C,MAAMgP,eAAerM,EAAMC,OAAOtC,Q,EAG1C2O,eAAiB,SAACzE,EAAa0E,GAC5B,GAAIA,EAAa,EAEd,OADmBC,MAAMC,KAAK,CAAEhB,OAAQc,IAAc,SAACG,EAAGC,GAAJ,OAAUA,EAAI,KAChDhD,KAAI,SAAAiD,GAAI,OACzB,kBAACT,GAAD,CACGvC,IAAKC,KAAKC,SACVhN,UACG8P,IAAS/E,EACJ,8BACA,oBAER/J,QAAS,EAAKuO,eACd1O,MAAOiP,GAENA,MAGH,GAAI/E,EAAc0E,EAAa,EAAG,CACtC,IAAIM,EAAqD,GAoDzD,OAnDAA,EAAa3H,KAEV,kBAACiH,GAAD,CACGrP,UAAW,8BACX8M,IAAKC,KAAKC,SACVhM,QAAS,EAAKuO,eACd1O,MAAOkK,GAENA,IAGPgF,EAAa3H,KACV,kBAACiH,GAAD,CACGrP,UAAW,oBACX8M,IAAKC,KAAKC,SACVhM,QAAS,EAAKuO,eACd1O,MAAOkK,EAAc,GAEpBA,EAAc,IAGrBgF,EAAa3H,KACV,kBAACiH,GAAD,CACGrP,UAAW,oBACX8M,IAAKC,KAAKC,SACVhM,QAAS,EAAKuO,eACd1O,OAAQ4O,EAAa1E,GAAe,GAJvC,QASHgF,EAAa3H,KACV,kBAACiH,GAAD,CACGrP,UAAW,oBACX8M,IAAKC,KAAKC,SACVhM,QAAS,EAAKuO,eACd1O,MAAO4O,EAAa,GAEnBA,EAAa,IAGpBM,EAAa3H,KACV,kBAACiH,GAAD,CACGrP,UAAW,oBACX8M,IAAKC,KAAKC,SACVhM,QAAS,EAAKuO,eACd1O,MAAO4O,GAENA,IAGAM,EAMP,OAJmBL,MAAMC,KACtB,CAAEhB,OAtFA,IAuFF,SAACiB,EAAGC,GAAJ,OAAUJ,EAvFR,EAuF6BI,EAAI,KAElBhD,KAAI,SAAAiD,GAAI,OACzB,kBAACT,GAAD,CACGrP,UACG8P,IAAS/E,EACJ,8BACA,oBAER+B,IAAKC,KAAKC,SACVhM,QAAS,EAAKuO,eACd1O,MAAOiP,GAENA,O,wEAOV3K,QAAQC,IAAIiK,IADN,MASF/O,KAAKC,MALNwK,EAJG,EAIHA,YACA0E,EALG,EAKHA,WACAO,EANG,EAMHA,iBACAC,EAPG,EAOHA,aAGGC,GAVA,EAQHX,eAEcjP,KAAKkP,eAAezE,EAAa0E,IAClD,OACG,kBAACL,GAAD,KACG,kBAAC,GAAD,CACGH,YAAWlE,EAAc,GACzBiE,WAAYgB,EACZjB,IACG,mGAGLmB,EAASrD,KAAI,SAAAlM,GAAM,OAAIA,KACxB,kBAAC,GAAD,CACGsO,YAAWlE,EAAc0E,GACzBT,WAAYiB,EACZlB,IACG,wG,GA3HOtO,c,8QCXHN,IAAOgQ,OAAV,KACZ,aAMchQ,IAAOiQ,OAAV,KACX,I,OARP,I,aCkBMC,G,2MACHC,cAAgB,SAAAC,GAEb,OADgB,aAAOA,GACH1D,KAAI,SAAAuD,GACrB,MAAO,CAAEvP,MAAOuP,EAAQvO,MAAOuO,O,EAGrCI,YAAc,SAAA3P,GACX,MAAqB,kBAAVA,EACDA,EAEA,CAAEA,MAAOA,EAAOgB,MAAOhB,I,wEAG1B,IAAD,EASFP,KAAKC,MAPNkQ,EAFG,EAEHA,cACAF,EAHG,EAGHA,QACA1P,EAJG,EAIHA,MACA6P,EALG,EAKHA,WACAC,EANG,EAMHA,QACA3Q,EAPG,EAOHA,UACA0D,EARG,EAQHA,YAIH,OACG,kBAAC,KAAD,CACGgN,WAAYA,EACZ1Q,UAAWA,GAAwB,mBACnCuQ,QAASA,EAAQ5B,OAAS,EAAIrO,KAAKgQ,cAAcC,GAAW,GAC5D9M,SAAUgN,EACVG,aAActQ,KAAKkQ,YAAY3P,GAC/B8P,QAASA,EACTjN,YAAaA,Q,GAlCFjD,a,6BCpBVoQ,GACJ,OAoBIC,GARa,6BAkBbC,GAjBsB,IAiBtBA,GAhBkB,IAyBlBC,GACI,gBADJA,GAEI,gB,oBC1BV,SAASC,KACb,OAZuBnE,EAHE,eAIlBoE,KAAOC,IAAIrE,GADd,IAAmBA,EAcnB,SAASsE,GAAeC,GAV/B,IAAmBvE,EAAKjM,EAALiM,EAPS,eAOJjM,EAWGwQ,EAVxBH,KAAOI,IAAIxE,EAAKjM,EAAO,CACpB0Q,QAAS,GACT/I,KAAM,MCDL,IAAMgJ,GAAuB,uCAAG,WACpCC,EACAC,EACAC,GAHoC,+BAAArN,EAAA,6DAIpCpD,EAJoC,+BAI7B2P,GAEHe,EAAW,MACTP,EAAcJ,OAEjBQ,EAAII,UAAU,gBAAd,iBAAyCR,IAE5CI,EAAII,UAAU,eAAgB,mCAXM,kBAahBC,KAAQL,EAAKC,EAAKC,EAAezQ,GAbjB,OAajC0Q,EAbiC,qGAiB7BA,GAjB6B,0DAAH,0DAoBvBG,GAAiC,SAAAlK,GAE3C,OADuBmK,GAAkBnK,GACnBoK,aAWlB,IAAMD,GAAoB,SAAAvK,GAE9B,IACMyK,EACH,uEAICD,EAAc,GACdE,EAAgB,GAChBxE,EARmB,6BASnByE,EAAYrB,GAChB,GAAiB,OAAbtJ,QAAkCE,IAAbF,EACtB,IACG,IACI4K,EADEC,EAAgBC,KAAKC,MAAM/K,GAWjC,QAAoBE,KANjB0K,OAFwB1K,IAAvB2K,EAAcG,MAA6C,OAAvBH,EAAcG,KAErCH,EAGAA,EAAcG,OAGkB,OAAhBJ,EAAsB,CASpD,GAPGA,EAAYK,SACZL,EAAYK,UAAY5B,KAExBnD,EA5BW,6BA6BXsE,EAAcC,GAGbG,EAAYT,SAAU,CACvB,IACG,IAAMA,EAAWW,KAAKC,MAAMH,EAAYT,UAE9Be,EAENf,EAFDjE,MACaiF,EACZhB,EADDK,YAECU,IACDhF,EAAQgF,GAGRV,EADCW,GAGaP,EAAYT,SAE9B,MAAOiB,GACNZ,EAAcI,EAAYT,SAE7BO,EAAgBE,EAAYS,WAE3BT,EAAYU,mBACbX,EAAYC,EAAYU,iBACxBZ,EAAgBE,EAAYS,WAEzBT,EAAYU,mBACZhC,KAEApD,EAxDQ,kBAyDRsE,EAxDY,2CAdvB,SAAwBpK,GAC5B,IAAMJ,EAAW8K,KAAKC,MAAM3K,GACpBmL,EAA+BhC,GAAjBiC,EAAiBjC,GACvC,OAAOvJ,EAASyL,UAAYF,GAAgBvL,EAASyL,UAAYD,GAuEvDE,CAAeZ,KAAKa,UAAUf,MAC/B1E,EA9Dc,kBA+DdsE,EA9DkB,yCAgEtB,MAAOY,IAeZ,OAVoB,OAAhBZ,GAAwC,KAAhBA,IACzBtE,EA1EoB,6BA2EpBsE,EAAcC,GAEQ,CACtBE,YACAzE,QACAsE,cACAE,kB,SC1GS1N,G,iLAdF,IAAD,EAKFnE,KAAKC,MAHW8S,EAFd,EAEHC,gBACAtT,EAHG,EAGHA,UACGuT,EAJA,gDAMN,OACG,0BAAMvT,UAAWA,GACd,kBAACqT,EAAoBE,Q,GATN9S,aCErB+S,G,iLAOO,IAAD,EAC0BlT,KAAKC,MAA7Ba,EADF,EACEA,MAAOD,EADT,EACSA,OAAQuD,EADjB,EACiBA,KACvB,OACG,yBACGtD,MAAOA,EACPD,OAAQA,EACRwD,QAAQ,aACR8O,MAAM,6BACN/O,KAAMA,EACNgP,aAAW,iBAEX,4BAAQC,GAAI,GAAIC,GAAI,GAAIC,EAAE,WACvB,6BACGC,cAAc,IACdnE,KAAM,GACNoE,GAAI,GACJC,MAAM,KACNC,IAAI,OACJC,OAAO,UACPC,SAAS,SACTC,YAAY,eAEf,6BACGN,cAAc,cACdnE,KAAM,EACNoE,GAAI,EACJC,MAAM,KACNC,IAAI,OACJC,OAAO,SACPC,SAAS,SACTC,YAAY,gBAGlB,4BACGT,GAAI,GACJC,GAAI,GACJC,EAAE,UACFC,cAAc,cACdnE,KAAM,EACNoE,GAAG,OAEH,6BACGD,cAAc,IACdnE,KAAM,EACNoE,GAAI,EACJC,MAAM,KACNC,IAAI,OACJC,OAAO,SACPC,SAAS,SACTC,YAAY,eAEf,6BACGN,cAAc,cACdnE,KAAK,MACLoE,GAAG,MACHC,MAAM,KACNC,IAAI,OACJC,OAAO,UACPC,SAAS,SACTC,YAAY,gBAGlB,4BAAQT,GAAI,IAAKC,GAAI,GAAIC,EAAE,WACxB,6BACGC,cAAc,IACdnE,KAAM,GACNoE,GAAI,GACJC,MAAM,KACNC,IAAI,OACJC,OAAO,UACPC,SAAS,SACTC,YAAY,eAEf,6BACGN,cAAc,cACdnE,KAAM,EACNoE,GAAI,EACJC,MAAM,KACNC,IAAI,OACJC,OAAO,SACPC,SAAS,SACTC,YAAY,qB,GAxFT3T,aAAf+S,GACI5P,aAAe,CACnBxC,MAAO,IACPD,OAAQ,IACRuD,KAAM,WA4FG8O,UC9FAA,G,iLAJT,OAAO,kBAAC,GAAD,eAAcF,gBAAiBe,IAAa/T,KAAKC,Y,GAFzCE,a,kWCDd,I,MAAM6T,GAAuBnU,IAAOC,IAAV,KAC1B,uGAIMmU,GAAuBpU,IAAOC,IAAV,KAC1B,iIAGMoU,GAAqBrU,IAAOoB,EAAV,KACxB,wDAGMkT,GAActU,IAAOQ,OAAV,KACjB,qKCDQ+T,G,iLART,OACG,kBAACJ,GAAD,KACG,kBAAC,GAAD,W,GAJclR,IAAM3C,WCsBjBkU,GAdd5R,Y,oLAEY,IAAD,EACiCzC,KAAKC,MAApCqU,EADF,EACEA,aAAcC,EADhB,EACgBA,aAEtB,OACG,kBAACN,GAAD,KACG,kBAACC,GAAD,KAAqBK,GACrB,kBAACJ,GAAD,CAAazT,QAAS4T,GAAtB,c,GAPcxR,IAAM3C,a,GCkCjBqU,GA7Bd/R,Y,oLAEY,IAAD,EAMFzC,KAAKC,MAJNQ,EAFG,EAEHA,UACiBgU,EAHd,EAGHC,gBACAJ,EAJG,EAIHA,aACAnN,EALG,EAKHA,SAEGoN,EAAe9C,GAA+BtK,GAEpD,OAAQ1G,GACL,KAAKkU,gBACF,OAAO,kBAAC,GAAD,MACV,KAAKC,eACF,OAAO,kBAACH,EAAD,MACV,KAAKI,cACF,OACG,kBAAC,GAAD,CACGP,aAAcA,EACdC,aAAcA,IAGvB,QACG,OAAO,U,GAvBqBzR,IAAM3C,a,qKClBvC,I,MAAM2U,GAAsBjV,IAAOC,IAAV,KACzB,oCAGMiV,GAAiBlV,IAAOoB,EAAV,KACpB,sBCMQ+T,G,iLART,OACG,kBAACF,GAAD,KACG,kBAACC,GAAD,4B,GAJajS,IAAM3C,WCuCzB8U,GADLxS,Y,8MAEEyS,gBAAkB,WAAO,IAAD,EAejB,EAAKjV,MAbNO,EAFkB,EAElBA,YACA2U,EAHkB,EAGlBA,gBACAzH,EAJkB,EAIlBA,mBACAyB,EALkB,EAKlBA,WACA1E,EANkB,EAMlBA,YACAkF,EAPkB,EAOlBA,aACAD,EARkB,EAQlBA,iBACAT,EATkB,EASlBA,eACA9C,EAVkB,EAUlBA,eACAC,EAXkB,EAWlBA,cACAgJ,EAZkB,EAYlBA,sBACAC,EAbkB,EAalBA,WACAzN,EAdkB,EAclBA,SAdkB,EAiCjBpC,EAAQuG,aAfTsB,EAlBkB,EAkBlBA,MACArB,EAnBkB,EAmBlBA,WACA6B,EApBkB,EAoBlBA,WACAP,EArBkB,EAqBlBA,QACAE,EAtBkB,EAsBlBA,OACAvB,EAvBkB,EAuBlBA,QACAwB,EAxBkB,EAwBlBA,SACA6H,EAzBkB,EAyBlBA,OACAC,EA1BkB,EA0BlBA,mBACAC,EA3BkB,EA2BlBA,IACAC,EA5BkB,EA4BlBA,iBACAC,EA7BkB,EA6BlBA,SACAC,EA9BkB,EA8BlBA,OACAC,EA/BkB,EA+BlBA,SACAC,EAhCkB,EAgClBA,iBAEH,OACG,kBAAC,IAAMC,SAAP,KACG,kBAAC7K,GAAD,KACG,kBAACC,GAAD,KACG,kBAACF,GAAD,KAAcuK,GACd,kBAAC,GAAD,CACG7V,UAAW,2BACXa,MAAO+U,EACP9U,YAAaA,EACbwI,IACG,oGAIT,kBAAC,GAAD,CACGmH,cAAeiF,EACf1V,UAAW,+BACXuQ,QAAS,CACNuF,EACAC,EACAC,EACAC,EACAC,EACAC,GAEHtV,MAAO8U,EACPzN,SAAUA,KAGfuN,EAAgB9G,OAAS,EACvB,kBAAC,IAAMyH,SAAP,KACG,kBAAC3K,GAAD,KACG,kBAACE,GAAD,KACG,kBAAC,GAAD,CACGc,eAAgBA,EAChBC,cAAeA,EACfE,SAAU,CACPe,EACArB,EACA6B,EACAP,EACAE,EACAvB,EACAwB,MAIT,kBAAClC,GAAD,KACI4J,EAAgB9G,OAAS,GACvB8G,EAAgB5I,KAAI,SAAAwJ,GACjB,OACG,kBAAC,GAAD,CACGvJ,IAAKC,KAAKC,SACVgB,mBAAoBA,EACpBL,MAAO0I,EAAY1I,MACnBrB,WAAY+J,EAAY/J,WACxBsB,QAASyI,EAAYzI,QACrBE,OAAQuI,EAAYvI,OACpBvB,QAAS8J,EAAY9J,QACrB0B,YAAaoI,EAAYpI,YACzBJ,aAAcwI,EAAYlI,WAC1BJ,SAAUsI,EAAYtI,SACtB7F,SAAUA,EAEViG,WAAYkI,EAAYlI,WACxBD,cAAemI,EAAYnI,cAC3B5E,IACG,2GAOrB,kBAAC,GAAD,CACGmG,WAAYA,EACZ1E,YAAaA,EACbkF,aAAcA,EACdV,eAAgBA,EAChBS,iBAAkBA,KAIxB,kBAAC,GAAD,Q,wEAKF,IAAD,EAKF1P,KAAKC,MAHN+V,EAFG,EAEHA,4BACAC,EAHG,EAGHA,2BACA3B,EAJG,EAIHA,aAEH,OACG,kBAAC,GAAD,CACG3O,SAAU,cACViF,WACG,qGAGH,kBAAC,GAAD,CACGnK,UAAWuV,EACX7O,SAAU8O,EACVvB,gBAAiB1U,KAAKkV,gBACtBZ,aAAcA,S,GA5IQnU,e,GCtB/B+V,GAFLtP,YAAO,YAAa,Y,IACpBnE,Y,eAEE,WAAYxC,GAAQ,IAAD,8BAChB,4CAAMA,KAGTyE,kBAAoB,WACjB,EAAKyR,kBALW,EAQnBC,aAAe,WACZ,OAAO,EAAKnW,MAAMoW,WATF,EAYnBF,eAAiB,WACd,EAAKC,eAAeE,sBAbJ,EAenBC,cAAgB,WACO,EAAKtW,MAAjB4H,QACAC,KCtCuB,sBDqBf,EAmBnBH,UAAY,WACT6O,MAAM,kBApBU,EAsBnBtP,UAAY,WACTsP,MAAM,kBAvBU,EAyBnB9I,mBAAqB,SAAAE,GAClB,EAAK3N,MAAM4H,QAAQC,KAAK,CACrB2O,SAAS,GAAD,OC/C2B,uBD+C3B,OAAoC7I,GAC5C8I,MAAO,CAAE9O,SAAU,OAAQ6C,YAAa,OA5B3B,EA+BnB2K,sBAAwB,SAAA7U,GACrB,EAAKN,MAAMoW,UAAUjB,sBAAsBuB,YAAKpW,GAAOA,QAhCvC,E,sEAkCT,IAAD,EAcFP,KAAKoW,eAZNjB,EAFG,EAEHA,gBACAzF,EAHG,EAGHA,iBACAC,EAJG,EAIHA,aACAlF,EALG,EAKHA,YACA0E,EANG,EAMHA,WACAF,EAPG,EAOHA,eACA9C,EARG,EAQHA,eACAC,EATG,EASHA,cACAiJ,EAVG,EAUHA,WACAzN,EAXG,EAWHA,SACAoO,EAZG,EAYHA,4BACAC,EAbG,EAaHA,2BAIH,OACG,kBAAC,GAAD,CACGzV,YAAaR,KAAKuW,cAClBpB,gBAAiBA,EACjBzH,mBAAoB1N,KAAK0N,mBACzBgC,iBAAkBA,EAClBC,aAAcA,EACdlF,YAAaA,EACb0E,WAAYA,EACZF,eAAgBA,EAChB7C,cAAeA,EACfD,eAAgBA,EAChBkJ,WAAYA,EACZD,sBAAuBpV,KAAKoV,sBAC5BxN,SAAUA,EACVoO,4BAA6BA,EAC7BC,2BAA4BA,EAC5B3B,aAActU,KAAKmW,qB,GArEOhW,e,yFA0EtC6H,YAAWkO,IE5FX,IAAMU,GAAkB/W,IAAOgX,SAAV,KACd,wBCODC,G,2MACHnU,eAAiB,SAAAC,GACd,EAAK3C,MAAM0C,eAAeC,EAAMC,OAAOtC,Q,wEAGhC,IAAD,EAQFP,KAAKC,MANNM,EAFG,EAEHA,MACAb,EAHG,EAGHA,UAEAuD,EALG,EAKHA,YACAmN,EANG,EAMHA,WACApN,EAPG,EAOHA,OAGH,OACG,kBAAC4T,GAAD,CACGrW,MAAOA,EACP4C,SAAUnD,KAAK2C,eACfS,YAAaH,EACbvD,UAAWA,EACXiB,SAAUyP,EACV/M,cAAaL,Q,GAtBF7C,a,+7BCJvB,I,4DAAM4W,GAAyBlX,YAAOoC,GAAPpC,CAAH,KACrB,kBAKDmX,GAAYnX,YAAOqC,GAAPrC,CAAH,MAKToX,GAAkBpX,IAAOC,IAAV,KACd,yCAMDoX,GAAcrX,IAAOC,IAAV,KACV,8DAODqX,GAAiBtX,IAAOC,IAAV,KACb,sCAIDsX,GAAWvX,IAAO+L,KAAV,MAKRyL,GAAqBxX,IAAOC,IAAV,KACjB,yCCGDwX,I,OADL7U,Y,oLAEY,IAAD,EAsBFzC,KAAKC,MApBNsX,EAFG,EAEHA,cACAlK,EAHG,EAGHA,MACAmK,EAJG,EAIHA,uBACAC,EALG,EAKHA,0BACAC,EANG,EAMHA,sBACAC,EAPG,EAOHA,yBAEAC,GATG,EAQHC,yBARG,EASHD,+BACAE,EAVG,EAUHA,kBACAC,EAXG,EAWHA,qBACAC,EAZG,EAYHA,iBACAC,EAbG,EAaHA,oBACAC,EAdG,EAcHA,OACAC,EAfG,EAeHA,kBACAC,EAhBG,EAgBHA,YACAC,EAjBG,EAiBHA,cACAC,EAlBG,EAkBHA,iBACAC,EAnBG,EAmBHA,oBACA9X,EApBG,EAoBHA,UACA+X,EArBG,EAqBHA,gBArBG,EAkCFhT,EAAQiT,YATTC,EAzBG,EAyBHA,sBACAC,EA1BG,EA0BHA,mBACAC,EA3BG,EA2BHA,mBACAC,EA5BG,EA4BHA,UACAC,EA7BG,EA6BHA,SACAnH,EA9BG,EA8BHA,YACAoH,EA/BG,EA+BHA,YACAC,EAhCG,EAgCHA,aACAC,EAjCG,EAiCHA,OAEH,OACG,kBAAC,GAAD,KACG,kBAAChC,GAAD,KACG,kBAACF,GAAD,CAAwBrW,QAASwX,GAC9B,kBAAC,GAAD,CACGlP,IACG,mGAGL4P,GAGJ,kBAACzB,GAAD,KACG,kBAACH,GAAD,KACI0B,EACD,kBAACtB,GAAD,WAEH,kBAACC,GAAD,KACG,kBAAC,GAAD,CACG3X,UAAW,QACXkB,KAAM,OACNL,MAAO8M,EACPrK,OAAQ,QACRL,eAAgBiV,EAChB3U,YAAa0V,IAEG,KAAlBN,GACE,kBAACjB,GAAD,KAAWiB,KAKpB,kBAAClB,GAAD,KACG,kBAACH,GAAD,KAAY6B,GACZ,kBAAC,GAAD,CACG1I,cAAe2H,EACfvX,MAAOiX,EACPvH,QAASmI,EAAY/J,OAAS,EAAImK,EAAkB,KAEvD,kBAACxB,GAAD,KAAYgC,GACZ,kBAAC,GAAD,CACG7I,cAAe4H,EACfxX,MAAOkX,EACPxH,QAASmI,EAAY/J,OAAS,EAAI8J,EAAoB,MAI5D,kBAAChB,GAAD,KACG,kBAACH,GAAD,KACI8B,EACD,kBAAC1B,GAAD,WAEH,kBAACC,GAAD,KACI,IACD,kBAAC,GAAD,CACGjU,YAAa,WACb+M,cAAe6H,EACfzX,MAAOmX,EACPzH,QAAS,CAAC,OAAQ,MAAO,YAEN,KAArBqI,GACE,kBAAClB,GAAD,KAAWkB,KAKpB,kBAACnB,GAAD,KACG,kBAACH,GAAD,KACIrF,EACD,kBAACyF,GAAD,WAEH,kBAACC,GAAD,KACG,kBAAC,GAAD,CACGrU,OAAQ,cACRtD,UAAW,+BACXa,MAAOoX,EACPhV,eAAgBsV,EAChBhV,YAAa,gBAES,KAAxBsV,GACE,kBAACnB,GAAD,KAAWmB,KAKpB,kBAACpB,GAAD,KACG,kBAACH,GAAD,KAAY+B,GACZ,kBAAC7B,GAAD,CAAagC,OAAQ,aAAUC,WAAY,cACxC,kBAAC,GAAD,CAAa5Y,MAAO,GAAIK,KAAM,WAIpC,kBAAC,EAAD,CACGH,UAAWA,EACXF,MAAO0Y,EACPzY,YAAa+W,EACb7X,UAAW,qB,GApIKS,e,IChC5BiZ,I,GAFLxS,YAAO,a,GAkCJC,IAAOC,M,GAOPD,IAAOC,M,GAMPD,IAAOC,M,GAIPD,IAAOC,M,GAMPD,IAAOC,M,GAOPD,IAAOC,M,GA0CPD,IAAOC,M,MAzGVrE,a,eAYE,WAAYxC,GAAQ,IAAD,6BAChB,4CAAMA,IADU,8bAKnBoZ,KAAO,WACJ,EAAKX,sBAAwB,GAC7B,EAAKG,UAAY,GACjB,EAAKG,aAAe,GACpB,EAAKF,SAAW,GAChB,EAAKnH,YAAc,GACnB,EAAKoH,YAAc,IAXH,EAanBrU,kBAAoB,WACjB,EAAKzE,MAAMoW,UAAUiD,eAClB,IACA,eACA,gBAjBa,EAoEnBC,4BAA8B,WAAO,IAC1BnB,EAAgB,EAAKnY,MAAMoW,UAA3B+B,YACJoB,EAAc,EACdC,EAAkB,EACtB,GAAIrB,EAAY/J,OAAS,EAAG,CACzB,IAAIqL,EAAOtB,EAAYuB,MACpB,SAAAd,GAAS,OAAIA,EAAUe,OAAS,EAAKf,aAExC,OAAIa,GAAMF,EAAcE,EAAKF,YAG7BpB,EAAYyB,SAAQ,SAAAhB,GACjB,GAAIA,EAAUe,OAAS,EAAKf,UAAW,CACpC,IAAIiB,EAAQjB,EAAUkB,eAAeJ,MAClC,SAAAX,GAAY,OAAIA,EAAaY,OAAS,EAAKZ,gBAE9C,IAAIc,EACC,MAAO,CAAC,EAAG,GADLL,EAAkBK,EAAML,oBAIlC,CAACD,EAAaC,IAXT,CAAC,EAAG,GAanB,MAAO,CAAC,EAAG,IA1FK,EAsHnBvB,OAAS,WACN,EAAKjY,MAAM4H,QAAQqQ,UArHnB,EAAKmB,OAFW,E,2FAqByB9Y,GACzCP,KAAK0Y,sBAAwBnY,EACM,KAA/BP,KAAK0Y,sBACN1Y,KAAKqY,cAAgB,qBACnBrY,KAAKqY,cAAgB,K,wCAGG9X,GAC7BP,KAAK6Y,UAAYlC,YAAKpW,GAAOA,MAE7BP,KAAKC,MAAMoW,UAAUwC,UAAYlC,YAAKpW,GAAOA,Q,2CAGbA,GAChCP,KAAKgZ,aAAerC,YAAKpW,GAAOA,Q,uCAGJA,GAC5BP,KAAK8Y,SAAWnC,YAAKpW,GAAOA,MACN,KAAlBP,KAAK8Y,SAAiB9Y,KAAKsY,iBAAmB,wBAC7CtY,KAAKsY,iBAAmB,K,0CAGE/X,GAC/BP,KAAK2R,YAAcpR,EACM,KAArBP,KAAK2R,YACN3R,KAAKuY,oBAAsB,2BACzBvY,KAAKuY,oBAAsB,K,yCAYhC,GARAvY,KAAKqY,cAAgB,GACrBrY,KAAKsY,iBAAmB,GACxBtY,KAAKuY,oBAAsB,GACQ,KAA/BvY,KAAK0Y,wBACN1Y,KAAKqY,cAAgB,sBACF,KAAlBrY,KAAK8Y,WAAiB9Y,KAAKsY,iBAAmB,yBACzB,KAArBtY,KAAK2R,cACN3R,KAAKuY,oBAAsB,4BAEI,KAA/BvY,KAAK0Y,uBACa,KAAlB1Y,KAAK8Y,UACgB,KAArB9Y,KAAK2R,YAEL,OAAO,I,sCA6BV,GAAI3R,KAAKga,mBAAoB,CAC1B,IAAIC,EAAgBja,KAAKuZ,8BAEnBxD,EAAc,CACjB1I,MAAOrN,KAAK0Y,sBACZc,YAAaS,EAAc,GAC3BR,gBAAiBQ,EAAc,GAC/BnB,SAAU9Y,KAAK8Y,SACfnH,YAAa3R,KAAK2R,YAClBoH,YAAa,IAGhB/Y,KAAKC,MAAMoW,UAAU6D,kBAClBnE,EACA/V,KAAK2H,UACL3H,KAAKkH,WAERrC,QAAQC,IAAI,SAAU9E,KAAKC,MAAMoW,UAAU8D,6BAE3Cna,KAAKqZ,OACLrZ,KAAKC,MAAMoW,UAAU8D,4BAA8B,IACnDna,KAAKC,MAAM4H,QAAQqQ,Y,kCAOtB1B,MAAM,2C,kCAGNA,MAAM,2C,+BAGC,IAAD,EAMFxW,KAAKC,MAAMoW,UAJZ8D,EAFG,EAEHA,4BACA/B,EAHG,EAGHA,YACAD,EAJG,EAIHA,kBACAK,EALG,EAKHA,gBAEH,OACG,kBAAC,GAAD,CACGnL,MAAOrN,KAAK0Y,sBACZlB,uBAAwBxX,KAAK6Y,UAC7BpB,0BAA2BzX,KAAKgZ,aAChCtB,sBAAuB1X,KAAK8Y,SAC5BnB,yBAA0B3X,KAAK2R,YAC/BkG,yBAA0B7X,KAAK+Y,YAC/BxB,cAAevX,KAAKuX,cACpBK,8BAA+B5X,KAAK4X,8BACpCE,kBAAmB9X,KAAK8X,kBACxBC,qBAAsB/X,KAAK+X,qBAC3BC,iBAAkBhY,KAAKgY,iBACvBC,oBAAqBjY,KAAKiY,oBAC1BC,OAAQlY,KAAKkY,OACbG,cAAerY,KAAKqY,cACpBC,iBAAkBtY,KAAKsY,iBACvBC,oBAAqBvY,KAAKuY,oBAC1B9X,UAAW0Z,EACX/B,YAAaA,EACbI,gBAAiBA,EACjBL,kBAAmBA,Q,GAvKIhY,a,qDAC/B4H,K,wEAAyC,M,yCACzCA,K,wEAA8B,M,4CAC9BA,K,wEAAiC,M,wCACjCA,K,wEAA6B,M,2CAC7BA,K,wEAAgC,M,2CAChCA,K,wEAAsC,M,6CACtCA,K,wEAAkC,M,gDAClCA,K,wEAAqC,M,mDACrCA,K,wEAAwC,M,s7BAmK5CC,YAAWsP,I,srDClLX,IAAMP,GAAyBlX,YAAOoC,GAAPpC,CAAH,KACrB,kBAGDmX,GAAYnX,YAAOqC,GAAPrC,CAAH,MAITua,GAAiBva,YAAOqC,GAAPrC,CAAH,KACb,0CAKDwa,GAAcxa,YAAOuB,GAAPvB,CAAH,MAIXyI,GAAQzI,YAAO2B,GAAP3B,CAAH,MAGLoX,GAAkBpX,IAAOC,IAAV,KACd,yCAMDoX,GAAcrX,IAAOC,IAAV,KACV,IAODqX,GAAiBtX,IAAOC,IAAV,KACb,sCAIDwa,GAAUza,IAAOC,IAAV,MAKPya,IAJW1a,IAAO+L,KAAV,MAIK/L,IAAOC,IAAV,KACT,+DAED0a,GAAkB3a,IAAOC,IAAV,KACd,kBAID2a,GAAY5a,IAAOC,IAAV,KACR,kBAKD4a,GAAa7a,IAAO0B,MAAV,M,6ICnEhB,IAAMoZ,GAAoB9a,IAAO0C,MAAV,KAChB,ICODqY,G,2MACHC,aAAe,SAAAjY,GACZ,EAAK3C,MAAM4a,aAAajY,EAAMC,OAAOtC,Q,wEAE9B,IAAD,EACiDP,KAAKC,MAApDM,EADF,EACEA,MAAqBb,GADvB,EACSmb,aADT,EACuBnb,WAAW0Q,EADlC,EACkCA,WACxC,OACG,kBAACuK,GAAD,CACG/Z,KAAK,iBACLL,MAAOA,EACPua,IAAI,aACJC,IAAI,aACJ5X,SAAUnD,KAAK6a,aACfla,SAAUyP,EACV1Q,UAAWA,Q,GAdES,a,yLCRzB,IAAMC,GAAgBP,IAAOQ,OAAV,KACZ,ICKD2a,G,iLACO,IAAD,EACoChb,KAAKC,MAAvCM,EADF,EACEA,MAAOC,EADT,EACSA,YAAad,EADtB,EACsBA,UAC5B,OACG,kBAAC,GAAD,CACGA,UAAWA,EACXa,MAAOA,EACPG,QAASF,GAERD,O,GATiBJ,a,oHCN9B,I,2EAAM8a,GAAqBpb,IAAO0C,MAAV,KACjB,ICSD2Y,G,2MACHC,cAAgB,SAAAvY,GACb,EAAK3C,MAAMkb,cAAcvY,EAAMC,OAAOtC,Q,wEAE/B,IAAD,EACuCP,KAAKC,MAAzCM,EADH,EACGA,MAAOqZ,EADV,EACUA,KAAMwB,EADhB,EACgBA,QAAS1b,EADzB,EACyBA,UAC/B,OACG,kBAACub,GAAD,CACGra,KAAK,QACLuC,SAAUnD,KAAKmb,cACfvB,KAAMA,EACNla,UAAWA,EACXa,MAAOA,EACP8a,QAAS9a,IAAU6a,Q,GAbLjb,aC0EpBmb,GADL7Y,Y,8MAEEyS,gBAAkBzS,aAAS,WAAO,IAAD,EA6B1B,EAAKxC,MA3BNoN,EAF2B,EAE3BA,MACAmK,EAH2B,EAG3BA,uBACAC,EAJ2B,EAI3BA,0BACAC,EAL2B,EAK3BA,sBACAC,EAN2B,EAM3BA,yBAEA4D,GAR2B,EAO3B1D,yBAP2B,EAQ3B0D,yBACAC,EAT2B,EAS3BA,oBACAC,EAV2B,EAU3BA,qBACAC,EAX2B,EAW3BA,qBACAC,EAZ2B,EAY3BA,gBACAC,EAb2B,EAa3BA,mBACAC,EAd2B,EAc3BA,gBACAC,EAf2B,EAe3BA,eACAC,EAhB2B,EAgB3BA,SACA9D,EAjB2B,EAiB3BA,oBACA+D,EAlB2B,EAkB3BA,wBACA9D,EAnB2B,EAmB3BA,OACA+D,EApB2B,EAoB3BA,QACArU,EArB2B,EAqB3BA,SACAnH,EAtB2B,EAsB3BA,UACA2X,EAvB2B,EAuB3BA,YACAD,EAxB2B,EAwB3BA,kBACAK,EAzB2B,EAyB3BA,gBACA0D,EA1B2B,EA0B3BA,oBACAC,EA3B2B,EA2B3BA,iBACAC,EA5B2B,EA4B3BA,OA5B2B,EAgD1B5W,EAAQiT,YAhBTI,EAhC2B,EAgC3BA,UACAC,EAjC2B,EAiC3BA,SACAC,EAlC2B,EAkC3BA,YACAC,EAnC2B,EAmC3BA,aAEAxL,GArC2B,EAoC3ByL,OApC2B,EAqC3BzL,QACAxB,EAtC2B,EAsC3BA,WACA6B,EAvC2B,EAuC3BA,WACA5B,EAxC2B,EAwC3BA,QACAoQ,EAzC2B,EAyC3BA,MACAzb,EA1C2B,EA0C3BA,KACA0b,EA3C2B,EA2C3BA,UACAC,EA5C2B,EA4C3BA,WACAxG,EA7C2B,EA6C3BA,YACAyG,EA9C2B,EA8C3BA,KACAC,EA/C2B,EA+C3BA,OAECC,EAAeV,EAAuB,UAClCA,EAAwB9N,MACxB,EACA,IAHkC,YAIhC8N,EAAwB9N,MAAM,KACnC,GACDyO,EAAmBlB,EAAoB,UACnCA,EAAqBvN,MAAM,EAAG,IADK,YACEuN,EAAqBvN,MAC1D,KAEH,GACL,OACG,kBAAC,IAAM4H,SAAP,KACG,kBAAC2E,GAAD,KACG,kBAACL,GAAD,KAAiBrE,GACjB,kBAACsE,GAAD,KAAcmC,IAEjB,kBAAC,GAAD,KACG,kBAAC,GAAD,KACG,kBAAC,GAAD,CACG9c,UAAW,SACXuJ,cAAeiP,EACflP,IACG,mGAGN,kBAAC,GAAD,KAAQqE,IAGX,kBAAC,GAAD,KACG,kBAAC,GAAD,CACG3N,UAAW,0BACXa,MAAOoX,EACPhV,eAAgBsV,EAChB7H,YAAY,KAIlB,kBAAC,GAAD,KACG,kBAAC,GAAD,KAAYyI,GACZ,kBAAC,GAAD,CACG1I,cAAegM,EACf5b,MACGiX,GAEK,GAERvH,QAASmI,EAAY/J,OAAS,EAAImK,EAAkB,GACpDpI,WACGxI,IAAapB,IAAQoB,IAAanB,KAGxC,kBAAC,GAAD,KAAYuS,GAEZ,kBAAC,GAAD,CACGpR,SAAUA,EACVuI,cAAe+L,EACf1P,IACGgL,GAEK,GAERjX,MACGkX,GAEK,GAERxH,QAASmI,EAAY/J,OAAS,EAAI8J,EAAoB,GACtD/H,WACGxI,IAAapB,IAAQoB,IAAanB,MAK3C,kBAAC,GAAD,KACG,kBAAC,GAAD,KAAY+G,GACZ,kBAAC,GAAD,CACG5F,SAAUA,EACVuI,cAAe2L,EACfvb,MAAOib,EACPvL,QAAS,CACN,WACA,qBACA,WACA,SACA,sBAEHG,WACGxI,IAAapB,IAAQoB,IAAalB,MAK3C,kBAAC,GAAD,KACG,kBAAC,GAAD,KAAYoS,GACZ,kBAAC,GAAD,CACGlR,SAAUA,EACVuI,cAAe,aACf5P,MAAOmX,EACPzH,QAAS,CAAC,OAAQ,MAAO,UACzBG,YAAY,KAIlB,kBAAC,GAAD,KACG,kBAAC,GAAD,KAAY2I,GACZ,kBAAC,GAAD,CACGG,OAAQ,aACRC,WAAY,gBAGlB,kBAAC,GAAD,KACG,kBAAC,GAAD,KAAYtL,GAEZ,kBAAC,GAAD,CACGjG,SAAUA,EACVuI,cAAeyL,EACfrb,MACGgb,GAEK,GAERtL,QAASmM,EACThM,WACGxI,IAAapB,IAAQoB,IAAalB,MAK3C,kBAAC,GAAD,KACG,kBAAC,GAAD,KAAYsF,GACZ,kBAAC,GAAD,CACGoE,YAAY,EACZ1Q,UAAW,mBACXa,MAAOmc,EACP7B,aAAc,gBAIpB,kBAAC,GAAD,KACG,kBAAC,GAAD,KAAY5O,GACX0Q,GAAoB/U,GAAYnB,GAC9B,kBAAC,GAAD,CACG2J,WACGxI,IAAapB,IAAQoB,IAAalB,GAIrChH,UACGkI,IAAapB,IAAQoB,IAAalB,GAC7B,mBACA,GAERnG,MAAOoc,EACP9B,aAAcgB,IAGjB,gDAGQ,SAAbjU,GACE,kBAAC0S,GAAD,KACI1S,IAAanB,IACX,kBAAC+T,GAAD,KACG,kBAAC,GAAD,CACGnX,cAAY,SACZ3D,UAAW,YACX0b,QAASM,EACT9B,KAAMhZ,EACNL,MAAO,SACP4a,cAAeQ,IAElB,kBAACjB,GAAD,KAAa4B,GACb,kBAAC,GAAD,CACGjZ,cAAY,UACZ3D,UAAW,YACX0b,QAASM,EACT9B,KAAMhZ,EACNL,MAAO,UACP4a,cAAeQ,IAElB,kBAACjB,GAAD,KAAa6B,IAInB,kBAAChC,GAAD,KACG,kBAAC,GAAD,CACGlX,cAAY,QACZ9C,MAAO8b,EACP7b,YAAayb,EACbvc,UAAW,cAEd,kBAAC,EAAD,CACG2D,cAAY,SACZ5C,UAAWA,EACXF,MAAOkc,EACPjc,YAAaub,EACbrc,UAAW,sB,wEAUzB,IAAD,EAQFM,KAAKC,MANNQ,EAFG,EAEHA,UACA0G,EAHG,EAGHA,SACAmN,EAJG,EAIHA,aACA7J,EALG,EAKHA,YACAC,EANG,EAMHA,eACA9C,EAPG,EAOHA,SAGH,OACG,kBAAC,GAAD,CACGjC,SAAU,SACV8E,YAAaA,EACbC,eAAgBA,EAChB9C,SAAUA,EACVgD,WACG,qGAGH,kBAAC,GAAD,CACGnK,UAAWA,EACX0G,SAAUA,EACVuN,gBAAiB1U,KAAKkV,gBACtBZ,aAAcA,S,GAzRGnU,e,YCpD1Byc,I,GAFLhW,YAAO,a,GA0CJC,IAAOC,M,GAIPD,IAAOC,M,GAIPD,IAAOC,M,GAIPD,IAAOC,M,GAIPD,IAAOC,M,GAKPD,IAAOC,M,GAIPD,IAAOC,M,GAKPD,IAAOC,M,GA2DPD,IAAOC,M,MAlIVrE,a,eAaE,WAAYxC,GAAQ,IAAD,6BAChB,4CAAMA,IADU,8fAKnBoZ,KAAO,WACJ,EAAKwD,WAAa,GAClB,EAAKrP,OAAS,GACd,EAAKvB,QAAU,GACf,EAAKmP,QAAU,GACf,EAAKvC,UAAY,GACjB,EAAKG,aAAe,IAXJ,EAanBtU,kBAAoB,WACjB,EAAKoY,kBAdW,EAgBnBA,eAAiB,WAAO,IACb/O,EAAO,EAAK9N,MAAM8c,MAAMC,OAAxBjP,GAGR,EAAK9N,MAAMoW,UAAU4G,eAAelP,EAAI,EAAKpG,UAAW,EAAKT,WAC7D,EAAKjH,MAAMoW,UAAUiD,eAClB,IACA,eACA,gBAxBa,EAsEnBpB,OAAS,WACN,EAAKjY,MAAM4H,QAAQqQ,UAvEH,EAyEnBvQ,UAAY,WAAO,IAAD,EAQX,EAAK1H,MAAMoW,UAAU6G,mBANtBC,EAFY,EAEZA,YACA3P,EAHY,EAGZA,OACA4P,EAJY,EAIZA,cACAC,EALY,EAKZA,SACAC,EANY,EAMZA,SACAC,EAPY,EAOZA,aAECJ,IAAa,EAAKN,WAAaM,EAAYnP,YAE/C,EAAKR,OAASA,EACV6P,IAAU,EAAKpR,QAAUoR,GAEzBC,IACD,EAAKzE,UAAYyE,EAAS1D,KAC1B,EAAKZ,aAAeuE,EAAa3D,MAEpC,EAAKwB,QAAUgC,GA3FC,EA6FnBlW,UAAY,aA7FO,EA8FnBwD,eAAiB,SAAA8E,GAAS,IAAD,EAMlBhK,EAAQ2E,WAJTI,EAFmB,EAEnBA,kBAEAD,GAJmB,EAGnBE,WAHmB,EAInBF,gBACAD,EALmB,EAKnBA,aAEH,OAAQmF,GACL,KAAKjF,EACF,EAAKtK,MAAM4H,QAAQC,KAAnB,UdhJ6B,yBciJ7B,MACH,KAAKwC,EACF,EAAKrK,MAAM4H,QAAQC,KAAnB,UdrJ4B,yBcsJ5B,MACH,KAAKuC,EACF,EAAKpK,MAAM4H,QAAQC,KAAnB,UdvJ+B,+Bc0CrB,EAmHnB0V,aAAe,aAnHI,8CAwJnBC,gBAAkB,WACf,GAAuB,IAAnB,EAAKZ,WACN,OAAO,EAAK5c,MAAMoW,UAAU+F,OAAOzC,MAChC,SAAA+D,GAAE,OAAIA,EAAG1P,aAAe,EAAK6O,cAC9Bc,SA5JW,EA+JnBpE,4BAA8B,WAC3B,GAAsB,MAAlB,EAAKV,UAAmB,MAAO,CAAC,EAAG,GADN,IAEzBT,EAAgB,EAAKnY,MAAMoW,UAA3B+B,YACJoB,EAAc,EACdC,EAAkB,EAClB6D,EAAWlF,EAAYuB,MACxB,SAAAd,GAAS,OAAIA,EAAUe,OAAS,EAAKf,aAWxC,OATIyE,IAAU9D,EAAc8D,EAAS9D,aACrCpB,EAAYyB,SAAQ,SAAAhB,GACbA,EAAUe,OAAS,EAAKf,WACzBA,EAAUkB,eAAeF,SAAQ,SAAAb,GAC1BA,EAAaY,OAAS,EAAKZ,eAC5BS,EAAkBT,EAAaS,uBAIpC,CAACD,EAAaC,IAhLL,EAmLnBmE,kBAAoB,WACjB,IAAIxB,EAAuB,GAI3B,OAHA,EAAKnc,MAAMoW,UAAU+F,OAAOvC,SAAQ,SAAA6D,GACjCtB,EAAOtU,KAAK4V,EAAG1P,eAEXoO,GAtLP,EAAK/C,OAFW,E,6EA4BW9Y,GAC3BP,KAAKob,QAAU7a,I,yCAGeA,GAC9BP,KAAK6c,WAAalG,YAAKpW,GAAOA,Q,sCAGHA,GAC3BP,KAAKiM,QAAU1L,I,qCAGWA,GAC1BP,KAAKwN,OAASmJ,YAAKpW,GAAOA,Q,uCAGEA,GAC5BP,KAAK6Y,UAAYlC,YAAKpW,GAAOA,MAC7BP,KAAKgZ,aAAe,KACpBhZ,KAAKC,MAAMoW,UAAUwC,UAAYlC,YAAKpW,GAAOA,Q,0CAEdA,GAC/BP,KAAKgZ,aAAerC,YAAKpW,GAAOA,Q,0CAGDA,GAC/BP,KAAK2R,YAAcpR,EACnBsE,QAAQC,IAAIvE,K,gCArFJ,SAyFaP,KAAKC,MAAMoW,UAAxBzO,UAEL5H,KAAK6Y,UAAY,GACjB7Y,KAAKgZ,aAAe,OAEpBhZ,KAAK6c,WAAa,GAClB7c,KAAKwN,OAAQ,GACbxN,KAAKiM,QAAU,GACfjM,KAAKob,QAAU,M,+BAwHX,IAAD,EAOFpb,KAAKC,MAAMoW,UAAU6G,mBALtB7P,EAFG,EAEHA,MACAyL,EAHG,EAGHA,SACAnH,EAJG,EAIHA,YACAkM,EALG,EAKHA,YACA9E,EANG,EAMHA,YANG,EAiBF/Y,KAAKC,MAAMoW,UARZyH,EATG,EASHA,wBACAC,EAVG,EAUHA,wBACAC,EAXG,EAWHA,uBAEA5F,GAbG,EAYH6F,uBAZG,EAaH7F,aACAD,EAdG,EAcHA,kBAEAK,GAhBG,EAeH4D,OAfG,EAgBH5D,iBAhBG,EAkB4BxY,KAAKC,MAAMie,SAASxH,MAA9C9O,EAlBF,EAkBEA,SAAU6C,EAlBZ,EAkBYA,YAEZhK,EAAY0d,4BACfJ,EACAD,GAEH,OACG,kBAAC,GAAD,CACGlW,SAAUA,EACV6C,YAAaA,EACb4C,MAAOA,EACP+O,OAAQpc,KAAK4d,oBACbpG,uBAAwBxX,KAAK6Y,UAC7BpB,0BAA2BzX,KAAKgZ,aAChCtB,sBAAuBoB,EACvBkD,wBAAyB6B,EACzBlG,yBAA0BhG,EAC1BkG,yBAA0BkB,EAC1B4C,gBAAiB3b,KAAK2b,gBACtBC,mBAAoB5b,KAAK4b,mBACzBC,gBAAiB7b,KAAK6b,gBACtBC,eAAgB9b,KAAK8b,eACrBC,SAAU/b,KAAK+b,SACf9D,oBAAqBjY,KAAKiY,oBAC1BkE,iBAAkBnc,KAAKmc,iBACvBD,oBAAqBlc,KAAKkc,oBAC1BhE,OAAQlY,KAAKkY,OACb+D,QAASjc,KAAKic,QACdV,wBAAyBvb,KAAK6c,WAC9BrB,oBAAqBxb,KAAKwN,OAC1BiO,qBAAsBzb,KAAKiM,QAC3ByP,qBAAsB1b,KAAKob,QAC3B3a,UAAWA,EACX0G,SAAU6W,EACV1J,aAActU,KAAK8c,eACnBpS,eAAgB1K,KAAK0K,eACrB0N,YAAaA,EACbD,kBAAmBA,EACnBK,gBAAiBA,Q,GA/PYrY,a,qDACrC4H,K,wEAA0C,M,2CAC1CA,K,wEAAgC,M,yCAChCA,K,0GACAA,K,oGACAA,K,sGACAA,K,wEAA+B,M,2CAC/BA,K,wEAAqC,M,0CACrCA,K,wEAAiC,M,0CACjCA,K,wEAAiC,M,uCACjCA,K,wEAA8B,M,uCAC9BA,K,wEAA6B,M,4oCAsHL,kCAAA/D,EAAA,6DACd+J,EAAO,EAAK9N,MAAM8c,MAAMC,OAAxBjP,GApJA,WAqJJqQ,EAAa,EAAKne,MAAMie,SAASxH,MAAM9O,UAGxCmO,EAAc,CACXsI,eAAgBtQ,EAChByL,YAAa,EAAKD,8BAA8B,GAChDE,gBAAiB,EAAKF,8BAA8B,KAGnD8D,EAAuB,KACvB,EAAKpR,UACNoR,EAAQ,UAAM,EAAKpR,QAAQiC,MAAM,EAAG,IAA5B,YAAmC,EAAKjC,QAAQiC,MAAM,MACjE6H,EAAc,CACXsI,eAAgBtQ,EAChBP,OAAQ,EAAKA,OACb6P,SAAUA,EACViB,eAAgB,EAAKb,kBACrBL,cAAe,EAAKhC,UAnBJ,SAuBhB,EAAKnb,MAAMoW,UAAUkI,0BACxB,EAAKf,aACLY,EACArI,GA1BmB,OA6BlB,EAAK9V,MAAMoW,UAAUmI,0BAEzB,EAAKnF,OACL,EAAKpZ,MAAM4H,QAAQqQ,SAhCG,+C,kBAmI5BlQ,YAAW4U,I,IC5RL6B,G,YACH,WAAYxe,GAAQ,qEACXA,I,sEAGC,IAAD,EACiCD,KAAKC,MAApCiI,EADF,EACEA,KAAiB/H,EADnB,EACQgI,UACd,OAAIwI,KACM,kBAAC,IAAD,CAAOzI,KAAMA,EAAMC,UAAWhI,IAGrC,kBAAC,IAAD,CACGsT,GAAI,CACDgD,SAAU,iB,GAbI3T,IAAM3C,WCG7Bue,GAAa,CAChB,kBAAC,GAAD,CACGxW,KhBfoC,yBgBgBpCyW,OAAK,EACLxW,UAAW+N,KAEd,kBAAC,GAAD,CACGyI,OAAK,EACLzW,KhBpB+B,oBgBqB/BC,UAAWiR,KAEd,kBAAC,GAAD,CACGuF,OAAK,EACLzW,KAAI,UhBxBkC,sBgBwBlC,OACJC,UAAWyU,M,sfCxBjB,I,MAAM5R,GAAcnL,YAAO4B,GAAP5B,CAAH,MAEXoL,GAAsBpL,IAAOC,IAAV,KAClB,yCAIDoL,GAA4BrL,IAAOC,IAAV,KACxB,qEAEDqL,GAAyBtL,IAAOuL,MAAV,KACrB,IAEDC,GAAcxL,IAAOyL,MAAV,MACXC,GAAY1L,IAAO2L,MAAV,MCcToT,GADLnc,Y,8MAEEyS,gBAAkB,WAAO,IAAD,EAejB,EAAKjV,MAbNkV,EAFkB,EAElBA,gBACAzH,EAHkB,EAGlBA,mBACAyB,EAJkB,EAIlBA,WACA1E,EALkB,EAKlBA,YACAjK,EANkB,EAMlBA,YACAoH,EAPkB,EAOlBA,SACA8H,EARkB,EAQlBA,iBACAC,EATkB,EASlBA,aACAyF,EAVkB,EAUlBA,sBACAnG,EAXkB,EAWlBA,eACAoG,EAZkB,EAYlBA,WACAlJ,EAbkB,EAalBA,eACAC,EAdkB,EAclBA,cAdkB,EAkCjB5G,EAAQ2E,WAjBTkD,EAjBkB,EAiBlBA,MACArB,EAlBkB,EAkBlBA,WACA6B,EAnBkB,EAmBlBA,WACAP,EApBkB,EAoBlBA,QACAE,EArBkB,EAqBlBA,OACAvB,EAtBkB,EAsBlBA,QACAwB,EAvBkB,EAuBlBA,SACA8H,EAxBkB,EAwBlBA,mBACAD,EAzBkB,EAyBlBA,OACAK,EA1BkB,EA0BlBA,OACAH,EA3BkB,EA2BlBA,IACAC,EA5BkB,EA4BlBA,iBAGAC,GA/BkB,EA6BlBrL,aA7BkB,EA8BlBC,eA9BkB,EA+BlBoL,UACAE,EAhCkB,EAgClBA,SACAC,EAjCkB,EAiClBA,iBAGH,OACG,kBAAC,IAAMC,SAAP,KACG,kBAAC,GAAD,KACG,kBAAC,GAAD,KACG,kBAAC,GAAD,KAAcP,GAEd,kBAAC,GAAD,CACG7V,UAAW,2BACXa,MAAO+U,EACP9U,YAAaA,EACbwI,IACG,oGAIT,kBAAC,GAAD,CACGmH,cAAeiF,EACf1V,UAAW,kBACXuQ,QAAS,CACNuF,EACAC,EACAC,EACAC,EACAC,EACAC,GAEHtV,MAAO8U,EACPzN,SAAUA,KAGfuN,EAAgB9G,OAAS,EACvB,kBAAC,IAAMyH,SAAP,KACG,kBAAC,GAAD,KACG,kBAAC,GAAD,KACG,kBAAC,GAAD,CACG1J,cAAeA,EACfD,eAAgBA,EAChBG,SAAU,CACPe,EACArB,EACA6B,EACAP,EACAE,EACAvB,EACAwB,MAIT,kBAAC,GAAD,KACI0H,EAAgB9G,OAAS,GACvB8G,EAAgB5I,KAAI,SAAAwJ,GACjB,OACG,kBAAC,GAAD,CACGvJ,IAAKC,KAAKC,SACVgB,mBAAoBA,EACpBL,MAAO0I,EAAY1I,MACnBrB,WAAY+J,EAAY/J,WACxBsB,QAASyI,EAAYzI,QACrBE,OAAQuI,EAAYvI,OACpBvB,QAAS8J,EAAY9J,QACrB0B,YAAaoI,EAAYpI,YACzBJ,aAAcwI,EAAYlI,WAC1BJ,SAAUsI,EAAYtI,SACtBG,cAAemI,EAAYnI,cAC3BhG,SAAUA,EACViG,WAAYkI,EAAYlI,WAExB7E,IACG,2GAQrB,kBAAC,GAAD,CACGmG,WAAYA,EACZ1E,YAAaA,EACbkF,aAAcA,EACdV,eAAgBA,EAChBS,iBAAkBA,KAIxB,kBAAC,GAAD,Q,wEAMF,IAAD,EAMF1P,KAAKC,MAJNyK,EAFG,EAEHA,eACAsL,EAHG,EAGHA,4BACAC,EAJG,EAIHA,2BACA3B,EALG,EAKHA,aALG,EAOmC9O,EAAQ2E,WAA3BG,GAPhB,EAOED,aAPF,EAOgBC,gBAEtB,OACG,kBAAC,GAAD,CACG3E,SAAU,UACViC,SAAUpB,GACVkE,eAAgBA,EAChBD,YAAaH,EACbM,WACG,qGAGH,kBAAC,GAAD,CACGnK,UAAWuV,EACX7O,SAAU8O,EACVvB,gBAAiB1U,KAAKkV,gBACtBZ,aAAcA,S,GAvJMnU,e,GCX7B0e,GAFLjY,YAAO,U,IACPnE,Y,eAEE,WAAYxC,GAAQ,IAAD,8BAChB,4CAAMA,KAGTyE,kBAAoB,WACjB,EAAKyR,kBALW,EAQnB2I,WAAa,WACV,OAAO,EAAK7e,MAAM8e,SATF,EAYnB5I,eAAiB,WACd,EAAK2I,aAAaxI,sBAbF,EAenBC,cAAgB,WACO,EAAKtW,MAAjB4H,QACAC,KCrCqB,oBDoBb,EAmBnBH,UAAY,aAnBO,EAsBnBT,UAAY,aAtBO,EAyBnBwD,eAAiB,SAAA8E,GAAS,IACflF,EAAmB9E,EAAQ2E,WAA3BG,eACAzC,EAAY,EAAK5H,MAAjB4H,QACJ2H,IAASlF,EAAgBzC,EAAQC,KCjDH,wBDkD7BD,EAAQC,KC/CwB,6BDkBrB,EA+BnB4F,mBAAqB,SAAAE,GAClB,EAAK3N,MAAM4H,QAAQC,KAAK,CACrB2O,SAAS,GAAD,OClDsB,uBDkDtB,OAA+B7I,GACvC8I,MAAO,CACJ9O,SAAU,OACV6C,YAAajF,EAAQ2E,WAAWG,mBApCtB,EAwCnB8K,sBAAwB,SAAA7U,GACrB,EAAKN,MAAM8e,QAAQ3J,sBAAsBuB,YAAKpW,GAAOA,QAzCrC,E,sEA4CT,IAAD,EAcFP,KAAK8e,aAZN3J,EAFG,EAEHA,gBACAzF,EAHG,EAGHA,iBACAC,EAJG,EAIHA,aACAV,EALG,EAKHA,eACAE,EANG,EAMHA,WACA1E,EAPG,EAOHA,YACA0B,EARG,EAQHA,eACAC,EATG,EASHA,cACAxE,EAVG,EAUHA,SACAyN,EAXG,EAWHA,WACAW,EAZG,EAYHA,4BACAC,EAbG,EAaHA,2BAEH,OACG,kBAAC,GAAD,CACGzV,YAAaR,KAAKuW,cAClBpB,gBAAiBA,EACjBzH,mBAAoB1N,KAAK0N,mBACzBgC,iBAAkBA,EAClBC,aAAcA,EACdV,eAAgBA,EAChBE,WAAYA,EACZ1E,YAAaA,EACb2K,sBAAuBpV,KAAKoV,sBAC5BxN,SAAUA,EACV8C,eAAgB1K,KAAK0K,eACrB2K,WAAYA,EACZW,4BAA6BA,EAC7BC,2BAA4BA,EAC5B3B,aAActU,KAAKmW,eACnBhK,eAAgBA,EAChBC,cAAeA,Q,GA9ESjM,e,u8BAmFpC6H,YAAW6W,IEhGX,I,4DAAM9H,GAAyBlX,YAAOoC,GAAPpC,CAAH,KACrB,kBAKDmX,GAAYnX,YAAOqC,GAAPrC,CAAH,MAKToX,GAAkBpX,IAAOC,IAAV,KACd,yCAMDoX,GAAcrX,IAAOC,IAAV,KACV,8DAODqX,GAAiBtX,IAAOC,IAAV,KACb,sCAIDsX,GAAWvX,IAAO+L,KAAV,MAKRyL,GAAqBxX,IAAOC,IAAV,KACjB,yCCfDkf,I,OADLvc,Y,oLAEY,IAAD,EAsBFzC,KAAKC,MApBNsX,EAFG,EAEHA,cACAlK,EAHG,EAGHA,MACAmK,EAJG,EAIHA,uBACAC,EALG,EAKHA,0BACAC,EANG,EAMHA,sBACAC,EAPG,EAOHA,yBAEAC,GATG,EAQHC,yBARG,EASHD,+BACAE,EAVG,EAUHA,kBACAC,EAXG,EAWHA,qBACAC,EAZG,EAYHA,iBACAC,EAbG,EAaHA,oBACAC,EAdG,EAcHA,OACAE,EAfG,EAeHA,YACAD,EAhBG,EAgBHA,kBACAK,EAjBG,EAiBHA,gBACAH,EAlBG,EAkBHA,cACAC,EAnBG,EAmBHA,iBACAC,EApBG,EAoBHA,oBACA9X,EArBG,EAqBHA,UArBG,EAkCF+E,EAAQiT,YATTC,EAzBG,EAyBHA,sBACAC,EA1BG,EA0BHA,mBACAC,EA3BG,EA2BHA,mBACAC,EA5BG,EA4BHA,UACAC,EA7BG,EA6BHA,SACAnH,EA9BG,EA8BHA,YACAoH,EA/BG,EA+BHA,YACAC,EAhCG,EAgCHA,aACAC,EAjCG,EAiCHA,OAEH,OACG,kBAAC,GAAD,KACG,kBAAC,GAAD,KACG,kBAAC,GAAD,CAAwBvY,QAASwX,GAC9B,kBAAC,GAAD,CACGlP,IACG,mGAGL4P,GAGJ,kBAAC,GAAD,KACG,kBAAC,GAAD,KACIF,EACD,kBAAC,GAAD,WAEH,kBAAC,GAAD,KACG,kBAAC,GAAD,CACG1V,OAAQ,QACRtD,UAAW,QACXkB,KAAM,OACNL,MAAO8M,EACP1K,eAAgBiV,EAChB3U,YAAa0V,IAEG,KAAlBN,GACE,kBAAC,GAAD,KAAWA,KAKpB,kBAAC,GAAD,KACG,kBAAC,GAAD,KAAYQ,GACZ,kBAAC,GAAD,CACG1I,cAAe2H,EACfvX,MAAOiX,EACPvH,QAASmI,EAAY/J,OAAS,EAAImK,EAAkB,KAEvD,kBAAC,GAAD,KAAYQ,GACZ,kBAAC,GAAD,CACG7I,cAAe4H,EACfxX,MAAOkX,EACPxH,QAASmI,EAAY/J,OAAS,EAAI8J,EAAoB,MAI5D,kBAAC,GAAD,KACG,kBAAC,GAAD,KACIW,EACD,kBAAC,GAAD,WAEH,kBAAC,GAAD,KACG,kBAAC,GAAD,CACG3I,cAAe6H,EACfzX,MAAOmX,EACPzH,QAAS,CAAC,OAAQ,MAAO,YAEN,KAArBqI,GACE,kBAAC,GAAD,KAAWA,KAKpB,kBAAC,GAAD,KACG,kBAAC,GAAD,KACI3G,EACD,kBAAC,GAAD,WAEH,kBAAC,GAAD,KACG,kBAAC,GAAD,CACG3O,OAAQ,cACRtD,UAAW,+BACXa,MAAOoX,EACPhV,eAAgBsV,EAChBhV,YAAa,gBAES,KAAxBsV,GACE,kBAAC,GAAD,KAAWA,KAKpB,kBAAC,GAAD,KACG,kBAAC,GAAD,KAAYQ,GACZ,kBAAC,GAAD,CAAaG,OAAQ,aAAUC,WAAY,cACxC,kBAAC,GAAD,CAAY5Y,MAAM,GAAGK,KAAM,WAIjC,kBAAC,EAAD,CACGH,UAAWA,EACXF,MAAO0Y,EACPzY,YAAa+W,EACb7X,UAAW,qB,GAlIGS,e,ICtB1B8e,I,GAFLrY,YAAO,W,GAkCJC,IAAOC,M,GAOPD,IAAOC,M,GAMPD,IAAOC,M,GAIPD,IAAOC,M,GAMPD,IAAOC,M,GAOPD,IAAOC,M,GAwCPD,IAAOC,M,MAvGVrE,a,eAYE,WAAYxC,GAAQ,IAAD,6BAChB,4CAAMA,IADU,8bAKnBoZ,KAAO,WACJ,EAAKX,sBAAwB,GAC7B,EAAKG,UAAY,GACjB,EAAKG,aAAe,GACpB,EAAKF,SAAW,GAChB,EAAKnH,YAAc,GACnB,EAAKoH,YAAc,IAXH,EAanBrU,kBAAoB,WACjB,EAAKzE,MAAM8e,QAAQzF,eAChB,IACA,eACA,gBAjBa,EAoEnBC,4BAA8B,WAAO,IAE9BC,EACAC,EAFIrB,EAAgB,EAAKnY,MAAM8e,QAA3B3G,YAGR,GAAIA,EAAY/J,OAAS,EAAG,CACzB,IAAIqL,EAAOtB,EAAYuB,MACpB,SAAAd,GAAS,OAAIA,EAAUe,OAAS,EAAKf,aAExC,OAAIa,GAAMF,EAAcE,EAAKF,YAG7BpB,EAAYyB,SAAQ,SAAAhB,GACbA,EAAUe,OAAS,EAAKf,YACzBY,EAAkBZ,EAAUkB,eAAeJ,MACxC,SAAAX,GAAY,OAAIA,EAAaY,OAAS,EAAKZ,gBAC5CS,oBAGD,CAACD,EAAaC,IATT,CAAC,EAAG,GAWnB,MAAO,CAAC,EAAG,IAxFK,EA+GnBvB,OAAS,WACN,EAAKjY,MAAM4H,QAAQqQ,UA9GnB,EAAKmB,OAFW,E,2FAqByB9Y,GACzCP,KAAK0Y,sBAAwBnY,EACM,KAA/BP,KAAK0Y,sBACN1Y,KAAKqY,cAAgB,qBACnBrY,KAAKqY,cAAgB,K,wCAGG9X,GAC7BP,KAAK6Y,UAAYlC,YAAKpW,GAAOA,MAE7BP,KAAKC,MAAM8e,QAAQlG,UAAYlC,YAAKpW,GAAOA,Q,2CAGXA,GAChCP,KAAKgZ,aAAerC,YAAKpW,GAAOA,Q,uCAGJA,GAC5BP,KAAK8Y,SAAWnC,YAAKpW,GAAOA,MACN,KAAlBP,KAAK8Y,SAAiB9Y,KAAKsY,iBAAmB,wBAC7CtY,KAAKsY,iBAAmB,K,0CAGE/X,GAC/BP,KAAK2R,YAAcpR,EACM,KAArBP,KAAK2R,YACN3R,KAAKuY,oBAAsB,2BACzBvY,KAAKuY,oBAAsB,K,yCAYhC,GARAvY,KAAKqY,cAAgB,GACrBrY,KAAKsY,iBAAmB,GACxBtY,KAAKuY,oBAAsB,GACQ,KAA/BvY,KAAK0Y,wBACN1Y,KAAKqY,cAAgB,sBACF,KAAlBrY,KAAK8Y,WAAiB9Y,KAAKsY,iBAAmB,yBACzB,KAArBtY,KAAK2R,cACN3R,KAAKuY,oBAAsB,4BAEI,KAA/BvY,KAAK0Y,uBACa,KAAlB1Y,KAAK8Y,UACgB,KAArB9Y,KAAK2R,YAEL,OAAO,I,sCA2BV,GAAI3R,KAAKkf,mBAAoB,CAC1B,IAAIjF,EAAgBja,KAAKuZ,8BACnBxD,EAAc,CACjB1I,MAAOrN,KAAK0Y,sBACZc,YAAaS,EAAc,GAC3BR,gBAAiBQ,EAAc,GAC/BnB,SAAU9Y,KAAK8Y,SACfnH,YAAa3R,KAAK2R,YAClBoH,YAAa,IAEhB/Y,KAAKC,MAAM8e,QAAQ7E,kBAChBnE,EACA/V,KAAK2H,UACL3H,KAAKkH,WAERlH,KAAKqZ,OACLrZ,KAAKC,MAAM4H,QAAQqQ,Y,yGAaf,IAAD,EAMFlY,KAAKC,MAAM8e,QAJZ5E,EAFG,EAEHA,4BACA/B,EAHG,EAGHA,YACAD,EAJG,EAIHA,kBACAK,EALG,EAKHA,gBAEH,OACG,kBAAC,GAAD,CACGnL,MAAOrN,KAAK0Y,sBACZlB,uBAAwBxX,KAAK6Y,UAC7BpB,0BAA2BzX,KAAKgZ,aAChCtB,sBAAuB1X,KAAK8Y,SAC5BnB,yBAA0B3X,KAAK2R,YAC/BkG,yBAA0B7X,KAAK+Y,YAC/BxB,cAAevX,KAAKuX,cACpBK,8BAA+B5X,KAAK4X,8BACpCE,kBAAmB9X,KAAK8X,kBACxBC,qBAAsB/X,KAAK+X,qBAC3BC,iBAAkBhY,KAAKgY,iBACvBC,oBAAqBjY,KAAKiY,oBAC1BC,OAAQlY,KAAKkY,OACbG,cAAerY,KAAKqY,cACpBC,iBAAkBtY,KAAKsY,iBACvBC,oBAAqBvY,KAAKuY,oBAC1B9X,UAAW0Z,EACX/B,YAAaA,EACbD,kBAAmBA,EACnBK,gBAAiBA,Q,GAhKIrY,a,qDAC7B4H,K,wEAAyC,M,yCACzCA,K,wEAA8B,M,4CAC9BA,K,wEAAiC,M,wCACjCA,K,wEAA6B,M,2CAC7BA,K,wEAAgC,M,2CAChCA,K,wEAAsC,M,6CACtCA,K,wEAAkC,M,gDAClCA,K,wEAAqC,M,mDACrCA,K,wEAAwC,M,s7BA4J5CC,YAAWiX,I,saCzKX,I,MAAMjU,GAAcnL,YAAO4B,GAAP5B,CAAH,MAEXoL,GAAsBpL,IAAOC,IAAV,KAClB,yCAIDqL,GAAyBtL,IAAOuL,MAAV,KACrB,IAEDC,GAAcxL,IAAOyL,MAAV,MACXC,GAAY1L,IAAO2L,MAAV,MCgCT2T,GADL1c,Y,8MAEEyS,gBAAkBzS,aAAS,WAAO,IAAD,EAiB1B,EAAKxC,MAfNkV,EAF2B,EAE3BA,gBACAzH,EAH2B,EAG3BA,mBACAyB,EAJ2B,EAI3BA,WACA1E,EAL2B,EAK3BA,YACA2U,EAN2B,EAM3BA,iCACAC,EAP2B,EAO3BA,qCACAC,EAR2B,EAQ3BA,mCAEA1X,GAV2B,EAS3B8C,eAT2B,EAU3B9C,UACA2X,EAX2B,EAW3BA,8BACAC,EAZ2B,EAY3BA,gCACAC,EAb2B,EAa3BA,kCACAC,EAd2B,EAc3BA,mCAd2B,KAe3BC,6BAf2B,EAgB3BC,4BAmBCpa,EAAQ2E,YAhBTkD,EAnB2B,EAmB3BA,MACArB,EApB2B,EAoB3BA,WACA8B,EArB2B,EAqB3BA,WACAR,EAtB2B,EAsB3BA,QACAE,EAvB2B,EAuB3BA,OACAvB,EAxB2B,EAwB3BA,QACAwB,EAzB2B,EAyB3BA,SACAoS,EA1B2B,EA0B3BA,yBACAlK,EA3B2B,EA2B3BA,OACAH,EA5B2B,EA4B3BA,IACAC,EA7B2B,EA6B3BA,iBAGAC,GAhC2B,EA8B3BrL,aA9B2B,EA+B3BC,eA/B2B,EAgC3BoL,UACAE,EAjC2B,EAiC3BA,SACAC,EAlC2B,EAkC3BA,iBAEH,OACG,kBAAC,IAAMC,SAAP,KACG,kBAAC,GAAD,KACG,kBAAC,GAAD,KAAc+J,GAEd,kBAAC,GAAD,CACG1P,cAAeoP,EACf7f,UAAW,kBACXuQ,QAAS,CACNuF,EACAC,EACAC,EACAC,EACAC,EACAC,GAEHtV,MAAOif,EACP5X,SAAUA,KAGfuN,EAAgB9G,OAAS,EACvB,kBAAC,IAAMyH,SAAP,KACG,kBAAC,GAAD,KACG,kBAAC,GAAD,KACG,kBAAC,GAAD,CACG3J,eAAgBuT,EAChBtT,cAAeqT,EACfnT,SAAU,CACPe,EACArB,EACA8B,EACAR,EACAE,EACAvB,EACAwB,MAIT,kBAAC,GAAD,KACI0H,EAAgB9G,OAAS,GACvB8G,EAAgB5I,KAAI,SAAAwJ,GACjB,OACG,kBAAC,GAAD,CACGvJ,IAAKC,KAAKC,SACVgB,mBAAoBA,EACpBL,MAAO0I,EAAY1I,MACnBrB,WAAY+J,EAAY/J,WACxBsB,QAASyI,EAAYzI,QACrBE,OAAQuI,EAAYvI,OACpBvB,QAAS8J,EAAY9J,QACrB0B,YAAaoI,EAAYpI,YACzBJ,aAAcwI,EAAYjI,WAC1BL,SAAUsI,EAAYtI,SACtBG,cAAemI,EAAYnI,cAC3BE,WAAYiI,EAAYjI,WACxBlG,SAAUA,EACVoB,IACG,2GAQrB,kBAAC,GAAD,CACGmG,WAAYA,EACZ1E,YAAaA,EACbkF,aAAcyP,EACdnQ,eAAgBqQ,EAChB5P,iBAAkB2P,KAIxB,kBAAC,GAAD,U,wEAMF,IAAD,EACmC7Z,EAAQ2E,WAAzCE,EADF,EACEA,aADF,KACgBC,eAMlBtK,KAAKC,OAJN0f,EAHG,EAGHA,6BACAC,EAJG,EAIHA,4BACAtL,EALG,EAKHA,aACA5J,EANG,EAMHA,eAEH,OACG,kBAAC,GAAD,CACG/E,SAAU,UACViC,SAAUnB,GACViE,eAAgBA,EAChBD,YAAaJ,EACbO,WACG,qGAGH,kBAAC,GAAD,CACGnK,UAAWkf,EACXxY,SAAUyY,EACVlL,gBAAiB1U,KAAKkV,gBACtBZ,aAAcA,S,GA3IUnU,e,GCvBjC2f,GAFLlZ,YAAO,U,IACPnE,Y,eAEE,WAAYxC,GAAQ,IAAD,8BAChB,4CAAMA,KAGTyE,kBAAoB,WACjB,EAAKyR,kBALW,EAQnBnP,iBAAiB,kBACd,EAAK/G,OATW,EAWnB6e,WAAa,WACV,OAAO,EAAK9X,mBAAmB+X,SAZf,EAenB5I,eAAiB,WACd,EAAK2I,aAAaiB,8BAhBF,EA4BnBrV,eAAiB,SAAA8E,GAAS,IACflF,EAAmB9E,EAAQ2E,WAA3BG,eACAzC,EAAY,EAAK5H,MAAjB4H,QACJ2H,IAASlF,EAAgBzC,EAAQC,KNvDH,wBMwD7BD,EAAQC,KNrDwB,6BMqBrB,EAkCnB4F,mBAAqB,SAAAE,GAClB,EAAK3N,MAAM4H,QAAQC,KAAK,CACrB2O,SAAS,GAAD,ONxDsB,uBMwDtB,OAA+B7I,GACvC8I,MAAO,CAAE9O,SAAU,KAAM6C,YAAa,qBArCzB,EAwCnB8U,8BAAgC,SAAAhf,GAC7B,EAAKN,MAAM8e,QAAQQ,8BAA8B5I,YAAKpW,GAAOA,QAzC7C,E,sEA4CT,IAAD,EAcFP,KAAK8e,aAZNkB,EAFG,EAEHA,6BACAX,EAHG,EAGHA,qCACAD,EAJG,EAIHA,iCACAa,EALG,EAKHA,gCACAT,EANG,EAMHA,gCACAU,EAPG,EAOHA,+BACAZ,EARG,EAQHA,mCACAI,EATG,EASHA,mCACAD,EAVG,EAUHA,kCACAE,EAXG,EAWHA,6BACAC,EAZG,EAYHA,4BACAhY,EAbG,EAaHA,SAEH,OACG,kBAAC,GAAD,CACG2X,8BAA+Bvf,KAAKuf,8BACpCC,gCAAiCA,EAEjCrK,gBAAiB6K,EACjBtS,mBAAoB1N,KAAK0N,mBACzB2R,qCACGA,EAEHD,iCAAkCA,EAClC3U,YAAawV,EACb9Q,WAAY+Q,EACZZ,mCACGA,EAEH1X,SAAUA,EACV8C,eAAgB1K,KAAK0K,eACrBgV,mCACGA,EAEHD,kCACGA,EAEHnL,aAActU,KAAKmW,eACnBwJ,6BAA8BA,EAC9BC,4BAA6BA,Q,GAtFGzf,e,QA2F5C6H,YAAW8X,ICnGX,IAAMK,GAAW,CACd,kBAAC,GAAD,CACGxB,OAAK,EACLzW,KPlBkC,uBOmBlCC,UAAW0W,KAEd,kBAAC,GAAD,CACGF,OAAK,EACLzW,KPtB6B,kBOuB7BC,UAAW8W,KAEd,kBAAC,GAAD,CACGN,OAAK,EACLzW,KPzBqC,2BO0BrCC,UAAW2X,M,+tBC1BjB,I,MAAM9U,GAAcnL,YAAO4B,GAAP5B,CAAH,MAEXoL,GAAsBpL,IAAOC,IAAV,KAClB,yCAIDoL,GAA4BrL,IAAOC,IAAV,KACxB,qEAEDqL,GAAyBtL,IAAOuL,MAAV,KACrB,IAGDgV,IADYvgB,IAAOC,IAAV,MACGD,IAAOC,IAAV,KACR,kDAEDuL,GAAcxL,IAAOyL,MAAV,MACXC,GAAY1L,IAAO2L,MAAV,MACT6U,GAAqBxgB,IAAOC,IAAV,KACjB,kBCgCDwgB,GADL7d,Y,8MAEEyS,gBAAkB,WAAO,IAAD,EAoBjB,EAAKjV,MAlBNkV,EAFkB,EAElBA,gBACAzH,EAHkB,EAGlBA,mBACAyB,EAJkB,EAIlBA,WACA1E,EALkB,EAKlBA,YACA7C,EANkB,EAMlBA,SACA8H,EAPkB,EAOlBA,iBACAC,EARkB,EAQlBA,aACA4Q,EATkB,EASlBA,eACAC,EAVkB,EAUlBA,kBACAC,EAXkB,EAWlBA,0BACAC,EAZkB,EAYlBA,mBACAC,EAbkB,EAalBA,sBACA1R,EAdkB,EAclBA,eACA2R,EAfkB,EAelBA,mBACAC,EAhBkB,EAgBlBA,sBACAzI,EAjBkB,EAiBlBA,YACAhM,EAlBkB,EAkBlBA,cACAoM,EAnBkB,EAmBlBA,gBAnBkB,EAoCjBhT,EAAQ2E,WAdTkD,EAtBkB,EAsBlBA,MACAQ,EAvBkB,EAuBlBA,WACAP,EAxBkB,EAwBlBA,QACAE,EAzBkB,EAyBlBA,OACAvB,EA1BkB,EA0BlBA,QACAwB,EA3BkB,EA2BlBA,SACAkI,EA5BkB,EA4BlBA,OACAH,EA7BkB,EA6BlBA,IACAC,EA9BkB,EA8BlBA,iBACAC,EA/BkB,EA+BlBA,SACAE,EAhCkB,EAgClBA,SACA9H,EAjCkB,EAiClBA,WACAvD,EAlCkB,EAkClBA,kBACAsL,EAnCkB,EAmClBA,iBAEH,OACG,kBAAC,IAAMC,SAAP,KACG,kBAAC,GAAD,KACG,kBAAC,GAAD,KACG,kBAAC,GAAD,KAAcvL,IAEjB,kBAAC6V,GAAD,KACG,kBAACC,GAAD,KACG,kBAAC,GAAD,CACGlQ,cAAeoQ,EACflQ,SAAS,EACT3Q,UAAW,UACXuQ,QAASmI,EAAY/J,OAAS,EAAImK,EAAkB,GACpDjY,MAAOqgB,EACPhZ,SAAUA,IAEb,kBAAC,GAAD,CACGuI,cAAeqQ,EACfnQ,SAAS,EACT3Q,UAAW,UACXuQ,QAASwQ,EACTlgB,MAAOsgB,EACPjZ,SAAUA,KAGhB,kBAAC,GAAD,CACGuI,cAAewQ,EACfjhB,UAAW,UACXuQ,QAAS,CACNuF,EACAK,EACAJ,EACAC,EACAC,EACAC,GAEHrV,MAAOmgB,EACP9Y,SAAUA,MAIlBuN,EAAgB9G,OAAS,EACvB,kBAAC,IAAMyH,SAAP,KACG,kBAAC,GAAD,KACG,kBAAC,GAAD,KACG,kBAAC,GAAD,CACG1J,cAAeA,EACfE,SAAU,CACPe,EACAS,EACAR,EACAE,EACAK,EACA5B,EACAwB,MAIT,kBAAC,GAAD,KACI0H,EAAgB9G,OAAS,GACvB8G,EAAgB5I,KAAI,SAAAwJ,GACjB,OACG,kBAAC,GAAD,CACGvJ,IAAKC,KAAKC,SACVgB,mBAAoBA,EACpBL,MAAO0I,EAAY1I,MACnBS,WAAYiI,EAAYjI,WACxBR,QAASyI,EAAYzI,QACrBE,OAAQuI,EAAYvI,OACpBK,WAAYkI,EAAYlI,WACxB5B,QAAS8J,EAAY9J,QACrB0B,YAAaoI,EAAYpI,YACzBJ,aAAcwI,EAAYlI,WAC1BJ,SAAUsI,EAAYtI,SACtBG,cAAemI,EAAYnI,cAC3B5B,WAAY,GACZpE,SAAU,QACVoB,IACG,2GAQrB,kBAAC,GAAD,CACGmG,WAAYA,EACZ1E,YAAaA,EACbkF,aAAcA,EACdV,eAAgBA,EAChBS,iBAAkBA,KAIxB,kBAAC,GAAD,Q,wEAKF,IAAD,EAKF1P,KAAKC,MAHN6gB,EAFG,EAEHA,+BACAC,EAHG,EAGHA,8BACAzM,EAJG,EAIHA,aAEK/J,EAAsB/E,EAAQ2E,WAA9BI,kBACR,OACG,kBAAC,GAAD,CACG5E,SAAU,SACViC,SAAUlB,GACV+D,YAAaF,EACbK,WACG,qGAGH,kBAAC,GAAD,CACGnK,UAAWqgB,EACX3Z,SAAU4Z,EACVrM,gBAAiB1U,KAAKkV,gBACtBZ,aAAcA,S,GA9JInU,e,GC/C3B6gB,GAFLpa,YAAO,a,IACPnE,Y,eAEE,WAAYxC,GAAQ,IAAD,8BAChB,4CAAMA,KAGTyE,kBAAoB,WACjB,EAAKyR,kBALW,EAQnB8K,cAAgB,WACb,OAAO,EAAKhhB,MAAMihB,YATF,EAYnB/K,eAAiB,WACd,EAAK8K,gBAAgB3H,eAClB,IACA,eACA,eAGH,EAAK2H,gBAAgBE,2BAnBL,EAsBnBxZ,UAAY,aAtBO,EAuBnBT,UAAY,aAvBO,EAwBnBwG,mBAAqB,SAAAE,GAClB,EAAK3N,MAAM4H,QAAQC,KAAK,CACrB2O,SAAS,GAAD,OCjCsB,uBDiCtB,OAA+B7I,GACvC8I,MAAO,CAAE9O,SAAU,QAAS6C,YAAa,yBA3B5B,EA8BnB8V,eAAiB,SAAAhgB,GACd,EAAK0gB,gBAAgBV,eAAehgB,IA/BpB,EAiCnBigB,kBAAoB,SAAAjgB,GACjB,EAAK0gB,gBAAgBT,kBAAkBjgB,IAlCvB,EAoCnBogB,sBAAwB,SAAApgB,GACrB,EAAK0gB,gBAAgBN,sBAAsBpgB,IArC3B,EAuCnB6gB,kBAAoB,WACjB,EAAKnhB,MAAMihB,WAAW9U,gBACtB,EAAK6U,gBAAgBE,2BAzCL,E,sEA2CT,IAAD,EAkBFnhB,KAAKihB,gBAhBNI,EAFG,EAEHA,sBACAC,EAHG,EAGHA,yBACAC,EAJG,EAIHA,qBACAC,EALG,EAKHA,uBACAC,EANG,EAMHA,6BACAC,EAPG,EAOHA,8BACA9Z,EARG,EAQHA,SACAgZ,EATG,EASHA,mBACAC,EAVG,EAUHA,sBACAC,EAXG,EAWHA,+BACAC,EAZG,EAYHA,8BACA3I,EAbG,EAaHA,YACAD,EAdG,EAcHA,kBACAK,EAfG,EAeHA,gBACAiI,EAhBG,EAgBHA,0BACAC,EAjBG,EAiBHA,mBAGH,OACG,kBAAC,GAAD,CACGvL,gBAAiBkM,EACjB3T,mBAAoB1N,KAAK0N,mBACzBgC,iBAAkB4R,EAClB3R,aAAc4R,EACdtS,eAAgBuS,EAChBrS,WAAYsS,EACZhX,YAAaiX,EACbnB,eAAgBvgB,KAAKugB,eACrBC,kBAAmBxgB,KAAKwgB,kBACxB5Y,SAAUA,EACVgZ,mBAAoBA,EACpBC,sBAAuBA,EACvBE,8BAA+BA,EAC/BD,+BAAgCA,EAChCxM,aAActU,KAAKmW,eACnBiC,YAAaA,EACbD,kBAAmBA,EACnBK,gBAAiBA,EACjBiI,0BAA2BA,EAC3BC,mBAAoBA,EACpBC,sBAAuB3gB,KAAK2gB,sBAC5BvU,cAAepM,KAAKohB,wB,GAvFMjhB,e,QEAhCwhB,GAAc,CACjB,kBAAC,IAAD,CACGhD,OAAK,EACLzW,KDXmC,uBCYnCC,UAAW6Y,M,SCDJY,GAAyC,uCAAG,WACtDzQ,EACAC,EACAC,GAHsD,6BAAArN,EAAA,6DAItDpD,EAJsD,+BAI/C2P,GAEHe,EAAW,KAKfH,EAAII,UAAU,eAAgB,mCAXwB,kBAalCC,KAAQL,EAAKC,EAAKC,EAAezQ,GAbC,OAanD0Q,EAbmD,mGAiB/CA,GAjB+C,yDAAH,0DAiC/C,IC5CMf,GACJ,OADIA,GAEL,MAEKsR,GACF,sDCLEC,GACF,iBADEA,GAGD,cCHNC,GAAYC,yMACZC,GAAO,GACb9T,OAAOC,KAAK2T,IAAalI,SAAQ,SAAAqI,GAC7B,GAAGA,EAASC,SAAS,aAAa,CAC9B,IAAMC,EAAOF,EAASG,QAAQ,aAAa,IAC3CJ,GAAOG,GAAQL,GAAYG,OAKnBD,UCEVK,G,WAIH,aAAe,yBAHfnR,SAGc,EACXnR,KAAKmR,IAAMoR,kBAAO,CACfC,QAASX,KAEZhd,QAAQC,IAAI0d,I,sDAELnR,GACP,OAAOuQ,GACJ5hB,KAAKmR,IACL2Q,GACAzQ,EACAd,M,mCAIH,OAAOW,GACJlR,KAAKmR,IACL2Q,GACA,GACAvR,Q,KCnCF,SAASkS,GAAsBnR,GACpC,IAAMoR,EAAUV,yMAAYW,QAAU,EAAI,IAC1C,OAAO,IAAIC,SAAQ,SAAAC,GACjBC,YAAW,kBAAMD,EAAQvR,KAAWoR,M,4WCMlCK,G,kGACO1R,GACP,OAAOoR,GAAmBO,M,mCAG1B,OAAOP,GAAmBQ,Q,cCI1BC,I,GAaFrc,IAAOC,M,GAOPD,IAAOC,M,GAgBPD,IAAOC,M,GAMPD,IAAOC,M,GAKPD,IAAOC,M,GAKPD,IAAOC,M,GAePD,IAAOC,M,GAKPD,IAAOC,M,GAKPD,IAAOC,M,cArER,WAAYqc,GAAoC,0QAFhDA,oBAE+C,EAC5CnjB,KAAKmjB,eAAiBA,EACtBnjB,KAAKqZ,O,mDAKLrZ,KAAKsF,qBAAuB8d,eAC5BpjB,KAAKqjB,wBAA0BD,eAC/BpjB,KAAKoH,oBAAsB,KAC3BpH,KAAKsjB,uBAAyB,O,iCAGtBC,EAAS5b,EAAWT,GAAY,IAAD,OACjCsc,EAAgBxjB,KAAKmjB,eAAeM,UAAUF,GACpD,OAAOG,oCAAyBF,GAC5B/P,GAAGzT,KAAK2jB,yBAAyB,SAACrS,GAChC,EAAKsS,uBAAuBtS,GACzBA,EACH3J,EAAU2J,EAASuS,WAEnBrN,MAAM,8BAERsN,OAAM,SAAAvc,GACJ,EAAKwc,uBAAuBxc,GAC5BL,S,6CAIc8c,GACpBhkB,KAAKikB,aAAeD,EAAkBE,aACtCpT,GAAe9Q,KAAKikB,gB,8CAICxjB,GACrBT,KAAKsF,qBAAuB7E,I,6CAIR8G,GACpBvH,KAAKoH,oBAAsBqK,GAA+BlK,K,kCAIjDgc,EAAS5b,EAAWT,GAAY,IAAD,OrD/C3C0J,KAAOuT,OAtBkB,eAsBG,CAAEjc,KAAM,MqDiDjC,IAAMkc,EAAiBpkB,KAAKmjB,eAAekB,aAC3C,OAAOX,oCAAyBU,GAC5B3Q,GAAGzT,KAAKskB,gCAAgC,SAAAhT,GACtC,EAAKiT,0BAA0BjT,GAC/B3J,OAEFmc,OAAM,SAAAvc,GACJ,EAAKid,0BAA0Bjd,GAC/BL,S,qDAKsBzG,GAC5BT,KAAKqjB,wBAA0B5iB,I,gDAIR8G,GACvBvH,KAAKsjB,uBAAyB/b,I,gDAIPkd,Q,yDA7EzB1c,K,iHACAA,K,qHACAA,K,oHACAA,K,0GACAA,K,0vCCjBW,IAHC,IAAIua,GAGL,CAAErb,UADC,IAAIic,GADF,IAAIH,MCJlB2B,GAUH,WAAY3O,GAAc,yBAT1B1I,WASyB,OARzBrB,gBAQyB,OAPzB6B,gBAOyB,OANzBP,aAMyB,OALzBE,YAKyB,OAJzBvB,aAIyB,OAHzBwB,cAGyB,OAFzBG,mBAEyB,OADzBD,iBACyB,MAEnBN,EASC0I,EATD1I,MACAwQ,EAQC9H,EARD8H,YACAvQ,EAOCyI,EAPDzI,QACAE,EAMCuI,EANDvI,OACA6P,EAKCtH,EALDsH,SACAsH,EAIC5O,EAJD4O,eACAvH,EAGCrH,EAHDqH,cACAD,EAECpH,EAFDoH,YACAkB,EACCtI,EADDsI,eAEHre,KAAKqN,MAAQA,EACbrN,KAAKgM,WAAa6R,EAClB7d,KAAK6N,WAAasP,EAClBnd,KAAKwN,OAASA,EACdxN,KAAKsN,QAAUA,EACftN,KAAKiM,QAAUoR,EACfrd,KAAK2N,YAAcyP,EACnBpd,KAAKyN,SAAWkX,EAChB3kB,KAAK4N,cAAgByQ,GCpBrBuG,GAAe,CAAC,MAAO,OACvBC,GAAY,CAAC,WAAY,eAiBzBC,I,GAwCFje,IAAOC,M,GAmCPD,IAAOC,M,GAmBPD,IAAOC,M,GAIPD,IAAOC,M,GAGPD,IAAOC,M,GAKPD,IAAOC,M,GAgBPD,IAAOC,M,GAKPD,IAAOC,M,GAKPD,IAAOC,M,GA4BPD,IAAOC,M,GAuBPD,IAAOC,M,GAKPD,IAAOC,M,GAKPD,IAAOC,M,GAYPD,IAAOC,M,GAgBPD,IAAOC,M,GAKPD,IAAOC,M,GAKPD,IAAOC,M,GAOPD,IAAOC,M,GAgBPD,IAAOC,M,GAKPD,IAAOC,M,GAKPD,IAAOC,M,GAKPD,IAAOC,M,GAOPD,IAAOC,M,GAMPD,IAAOC,M,GAMPD,IAAOC,M,GAePD,IAAOC,M,GAUPD,IAAOC,M,cArRR,WAAYie,GAA4B,kzCACrC/kB,KAAKqZ,OACLrZ,KAAK+kB,0BAA4BA,E,mDAIjC/kB,KAAKgW,4BAA8BoN,eACnCpjB,KAAKiW,2BAA6B,KAElCjW,KAAK8d,wBAA0BsF,eAC/BpjB,KAAKge,uBAAyB,KAE9Bhe,KAAKma,4BAA8BiJ,eACnCpjB,KAAKglB,2BAA6B,KAElChlB,KAAK+d,wBAA0BqF,eAC/BpjB,KAAKie,uBAAyB,KAE9Bje,KAAKilB,2BAA6B7B,eAClCpjB,KAAKwe,0BAA4B,KAEjCxe,KAAKkd,mBAAqB,GAC1Bld,KAAKmV,gBAAkB,GACvBnV,KAAK+V,YAAc,GACnB/V,KAAKyK,YAAc,EACnBzK,KAAKmP,WAAa,KAClBnP,KAAK4H,SAAW,GAChB5H,KAAKqV,WAAa,MAClBrV,KAAKklB,uBAAyBN,GAAa,GAC3C5kB,KAAKmlB,mBAAqBP,GAAa,GACvC5kB,KAAKolB,gBAAkBR,GAAa,GACpC5kB,KAAKqlB,qBAnFM,cAoFXrlB,KAAKoY,YAAc,GACnBpY,KAAKslB,eAAiB,GACtBtlB,KAAKulB,qBArFS,MAsFdvlB,KAAK6Y,UAAY,KACjB7Y,KAAKoc,OAAS,K,gDAISoB,EAAc5V,EAAU4d,GAAU,IAAD,OAClDC,EAA8BzlB,KAAK+kB,0BAA0BW,qBAChE9d,EACA4d,GAGH,OAAQ9B,oCAAyB+B,GAE7BhS,GACEzT,KAAK2lB,iCACL3lB,KAAK4lB,iCAEP9B,OAAM,SAAAvc,GACJ,EAAKse,gCAAgCte,GACrCiW,S,uDAKwB/c,GAC9BT,KAAKilB,2BAA6BxkB,I,sDAGL6Q,M,sDAGA/J,GAC7BvH,KAAKwe,0BAA4B/M,GAA+BlK,K,qCAIpD8J,EAAe1J,EAAWT,GAAY,IAAD,OAC3C4e,EAAoB9lB,KAAK+kB,0BAA0BgB,oBAEzD,OAAOrC,oCAAyBoC,GAC5BrS,GAAGzT,KAAKgmB,+BAA+B,SAAA1U,GACrC,EAAK2U,6BAA6B3U,GAClC3J,OAEFmc,OAAM,SAAAvc,GACJ,EAAK2e,6BAA6B3e,GAClCL,S,oDAMqBzG,GAC3BT,KAAK+d,wBAA0Btd,I,mDAIL8G,GAC1BvH,KAAKie,uBAAyB1W,I,mDAIJ+J,GAC1BtR,KAAKoY,YAAc9G,EAAS9G,WAC5BxK,KAAKslB,eAAiB,K,2CA2BtB,IAAIa,EAAS1Z,KAAK2Z,KArLV,GAqLwBpmB,KAAKyK,YAAc,IAC/C+a,EAAU,CACX3B,UAlLQ,OAmLRwC,QAASrmB,KAAKqlB,qBACdiB,QAAStmB,KAAKklB,uBACdqB,UAAWvmB,KAAKqV,YAGbmR,EAAyBxmB,KAAK+kB,0BAA0B0B,sBA7LtD,EA+LLN,EACAX,GAEH,OAAO9B,oCAAyB8C,GAC5B/S,GACEzT,KAAK0mB,kCACL1mB,KAAK2mB,kCAEP7C,MAAM9jB,KAAK4mB,oC,wDAIgBnmB,GAC/BT,KAAKgW,4BAA8BvV,I,uDAIL8G,GAC9BvH,KAAKiW,2BAA6B1O,I,uDAIJsf,GAC9B7mB,KAAKmP,WAAa1C,KAAK2Z,KACpBS,EAAwBC,wBAvNnB,GAyNJ9mB,KAAKmP,WAAa,IAAGnP,KAAKyK,YAAc,GAC5CzK,KAAKmV,gBAAkB0R,EAAwBE,kBAAkBxa,KAC9D,SAAAwJ,GAAW,OAAI,IAAI2O,GAAY3O,MAElC/V,KAAK4H,SAAWif,EAAwBhD,Y,qCAI5BxF,EAAgB1W,EAAWT,GAAY,IAAD,OAC5C8f,EAAqBhnB,KAAK+kB,0BAA0BkC,kBACvD5I,GAEH,OAAOqF,oCAAyBsD,GAC5BvT,GAAGzT,KAAKknB,+BAA+B,SAAA5V,GACrC,EAAK6V,6BAA6B7V,GAClC3J,OAEFmc,OAAM,SAAAvc,GACJ,EAAK6f,6BAA6B7f,GAClCL,S,oDAKqBzG,GAC3BT,KAAK8d,wBAA0Brd,I,mDAIL8G,GAC1BvH,KAAKge,uBAAyBzW,I,mDAIJ8f,GAC1BrnB,KAAKkd,mBAAqBmK,EAC1BrnB,KAAK4H,SAAWyf,EAAoBxD,UACpC7jB,KAAKoc,OAASiL,EAAoBC,U,wCAInBjW,EAAe1J,EAAWT,GAAY,IAAD,OAC9CqgB,EAAyBvnB,KAAK+kB,0BAA0ByC,mBAC3DnW,GAEH,OAAOqS,oCAAyB6D,GAC5B9T,GAAGzT,KAAKynB,gCAAgC,SAAAnW,GACtC,EAAKoW,8BAA8BpW,GACnC3J,OAEFmc,OAAM,SAAAvc,GACJ,EAAKogB,8BAA8BpgB,GACnCL,S,qDAKsBzG,GAC5BT,KAAKma,4BAA8B1Z,I,oDAIR8G,GAC3BvH,KAAKglB,2BAA6Bzd,I,oDAIPqgB,GAC3B5nB,KAAK+V,YAAc6R,I,4CAIArnB,GACnBP,KAAKqV,WAAa9U,EAClBP,KAAKyK,YAAc,EACnBzK,KAAKsW,uB,yCAKLtW,KAAKyK,cACLzK,KAAKsW,uB,qCAKLtW,KAAKyK,cACLzK,KAAKsW,uB,qCAIO/V,GACZP,KAAKyK,YAAcod,SAAStnB,EAAO,IACnCP,KAAKsW,uB,uCAcDtW,KAAKmlB,qBAAuBP,GAAa,GAC1C5kB,KAAKmlB,mBAAqBP,GAAa,GACrC5kB,KAAKmlB,mBAAqBP,GAAa,GAC5C5kB,KAAKqlB,qBAAuBR,GAAU,GACtC7kB,KAAKklB,uBAAyBllB,KAAKmlB,mBACnCnlB,KAAKyK,YAAc,EACnBzK,KAAKsW,uB,sCAIDtW,KAAKolB,kBAAoBR,GAAa,GACvC5kB,KAAKolB,gBAAkBR,GAAa,GAClC5kB,KAAKolB,gBAAkBR,GAAa,GACzC5kB,KAAKqlB,qBAAuBR,GAAU,GACtC7kB,KAAKklB,uBAAyBllB,KAAKolB,gBACnCplB,KAAKyK,YAAc,EACnBzK,KAAKsW,uB,sCAvLL,IAAIoD,EAAsB,GAI1B,OAHA1Z,KAAKoY,YAAYyB,SAAQ,SAAChB,GACvBa,EAAK5R,KAAK+Q,EAAUyE,aAEhB5D,I,wCAEyB,IAAD,OAC3B4L,EAAiB,GAElBA,EADCtlB,KAAKoY,YAAY/J,OAAS,GAAuB,MAAlBrO,KAAK6Y,UACpB7Y,KAAKoY,YAAYuB,MAC/B,SAAAd,GAAS,OAAIA,EAAUe,OAAS,EAAKf,aACtCkB,eACmB,GAExB,IAAIL,EAAqB,GAKzB,OAJI4L,GACDA,EAAezL,SAAQ,SAACb,GACrBU,EAAK5R,KAAKkR,EAAaY,SAEtBF,M,6CA5JT3R,K,6GACAA,K,yGACAA,K,gHACAA,K,yHACAA,K,wHACAA,K,uHACAA,K,qHAEAA,K,oHACAA,K,yHAEAA,K,wHACAA,K,wHAEAA,K,uHACAA,K,kHAEAA,K,oHACAA,K,gHACAA,K,6GACAA,K,kHACAA,K,yGAEAA,K,wGACAA,K,wGACAA,K,sGACAA,K,uGACAA,K,yGACAA,K,4GACAA,K,oGACAA,K,qHAEAA,K,oHACAA,K,s4CAuGA+f,K,4HAOAA,K,skFC5KSvX,GACJ,OADIA,GAEL,MAEKsR,GAEI,sDCNJC,GACO,uBADPA,GAGO,wBAHPA,GAIE,sBAJFA,GAKa,6BALbA,GAMgB,gCCDvBiG,G,WAEH,aAAe,yBADf5W,SACc,EACXnR,KAAKmR,IAAMoR,kBAAO,CACfC,QAASX,K,8DAGGxD,GACf,IAAI2J,EAAQ,eAAW3J,EAAX,oBACZ,OAAOnN,GAAwBlR,KAAKmR,IAAK6W,EAAU,GAAIzX,M,yCAEvC0X,GAChB,OAAO/W,GACJlR,KAAKmR,IACL2Q,GACAmG,EACA1X,M,4CAGgB2X,EAAOC,EAAS3C,GACnC,IAAIwC,EAAQ,UAAMlG,GAAN,kBAAyCoG,EAAzC,mBAAyDC,GAErE,OAAOjX,GACJlR,KAAKmR,IACL6W,EACAxC,EACAjV,M,0CAIH,OAAOW,GACJlR,KAAKmR,IACL2Q,GACA,GACAvR,M,2CAGe3I,EAAUwgB,GAC5B,OACUlX,GACJlR,KAAKmR,IAFM,OAAbvJ,EAGEka,GAOAA,GANAsG,EACA7X,Q,kDCxCN8X,G,0GAEehX,GACf,OAAOoR,GAAmBxF,M,yCAEVgL,GAChB,OAAO,IAAIrF,SAAQ,SAAAC,GAAO,OAAIA,EAAQyF,S,4CAGnBJ,EAAOC,EAASpX,GASnC,OAAO0R,GALS,CACbsE,kBAJYwB,GAAoBxB,kBAAkB7Y,QACjCsa,OAAOL,EAASD,GAIjCpB,wBAAyByB,GAAoBzB,wBAC7CjD,UAAW0E,GAAoB1E,c,0CAMlC,OAAOpB,GAAmBnJ,M,2CAGRvL,EAAIqa,GAEtB,OAAO,IAAIxF,SAAQ,SAAAC,GAAO,OACvBC,YAAW,kBAAMD,EAAQ4F,MAA+B,Y,KC5BlD,IAHe,IAAIV,GAGnB,CAAE1R,UADC,IAAIyO,GADY,IAAIuD,M,SCLhCK,G,6GACkBR,EAAOC,EAASpX,GAClC,IAEI4X,EAAY,CACbC,iBAHYC,GAAwBD,iBAAiB1a,QACpCsa,OAAOL,EAASD,GAGjCY,yBACGD,GAAwBC,yBAC3BjF,UAAWgF,GAAwBhF,WAEtC,OAAO,IAAIjB,SAAQ,SAAAC,GAAO,OAAIA,EAAQ8F,U,KCXtCI,GAYH,WAAYhT,GAAc,yBAX1B1I,WAWyB,OAVzBrB,gBAUyB,OATzB8B,gBASyB,OARzBD,gBAQyB,OAPzBP,aAOyB,OANzBE,YAMyB,OALzBvB,aAKyB,OAJzBwB,cAIyB,OAHzBG,mBAGyB,OAFzBD,iBAEyB,MAEnBN,EAUC0I,EAVD1I,MACAwQ,EASC9H,EATD8H,YACA/E,EAQC/C,EARD+C,SACAtL,EAOCuI,EAPDvI,OACA6P,EAMCtH,EANDsH,SACA5P,EAKCsI,EALDtI,SACAub,EAICjT,EAJDiT,YACA5L,EAGCrH,EAHDqH,cACAD,EAECpH,EAFDoH,YACAkB,EACCtI,EADDsI,eAEHre,KAAKqN,MAAQA,EACbrN,KAAKgM,WAAa6R,EAClB7d,KAAK6N,WAAasP,EAClBnd,KAAKwN,OAASA,EACdxN,KAAKsN,QAAUwL,EACf9Y,KAAKiM,QAAUoR,EACfrd,KAAK2N,YAAcyP,EACnBpd,KAAKyN,SAAWA,EAChBzN,KAAK4N,cAAgByQ,EACrBre,KAAK8N,WAAakb,GClClBC,GAWH,WAAYlT,GAAc,yBAV1B1I,WAUyB,OATzBrB,gBASyB,OARzB8B,gBAQyB,OAPzBR,aAOyB,OANzBE,YAMyB,OALzBvB,aAKyB,OAJzBwB,cAIyB,OAHzBG,mBAGyB,OADzBD,iBACyB,MAEnBN,EASC0I,EATD1I,MACAwQ,EAQC9H,EARD8H,YACA/E,EAOC/C,EAPD+C,SACAtL,EAMCuI,EANDvI,OACA6P,EAKCtH,EALDsH,SACAsH,EAIC5O,EAJD4O,eACAvH,EAGCrH,EAHDqH,cACA4L,EAECjT,EAFDiT,YACA3K,EACCtI,EADDsI,eAEHre,KAAKqN,MAAQA,EACbrN,KAAKgM,WAAa6R,EAClB7d,KAAK8N,WAAakb,EAClBhpB,KAAKwN,OAASA,EACdxN,KAAKsN,QAAUwL,EACf9Y,KAAKiM,QAAUoR,EACfrd,KAAK2N,YAAcyP,EACnBpd,KAAKyN,SAAWkX,EAChB3kB,KAAK4N,cAAgByQ,GCvBrBuG,GAAe,CAAC,MAAO,OACvBC,GAAY,CAAC,WAAY,eAKzBqE,I,GA+BFriB,IAAOC,M,GAsBPD,IAAOC,M,GAKPD,IAAOC,M,GAKPD,IAAOC,M,GAmBPD,IAAOC,M,GASPD,IAAOC,M,GAUPD,IAAOC,M,GAKPD,IAAOC,M,GAKPD,IAAOC,M,GAKPD,IAAOC,M,eAvGR,WAAYqiB,EAA6BC,GAA4B,IAAD,6BACjE,4CAAMA,IAD2D,qtBAMpEC,YAAc,WACX,EAAK1J,6BAA+ByD,eACpC,EAAKxD,4BAA8B,KACnC,EAAKI,6BAA+B,GACpC,EAAKsJ,6BA3BM,cA4BX,EAAKrJ,gCAAkC,EACvC,EAAKT,gCA5BS,MA6Bd,EAAK+J,+BAAiC3E,GAAa,GACnD,EAAK4E,sCAAwC5E,GAAa,GAC1D,EAAK6E,mCAAqC7E,GAAa,IAbvD,EAAKyE,cACL,EAAKK,wBAA0BP,EAHkC,E,0FAoBjE,IAAIhD,EAAS1Z,KAAK2Z,KAlCV,GAkCwBpmB,KAAKigB,gCAAkC,IACnEuF,EAAU,CACX3B,UArCQ,KAsCRwC,QAASrmB,KAAKspB,6BACdhD,QAAStmB,KAAKupB,+BACdhD,UAAWvmB,KAAKwf,iCAEbgH,EAAyBxmB,KAAK0pB,wBAAwBC,8BAzCpD,EA2CLxD,EACAX,GAEH,OAAO9B,oCAAyB8C,GAC5B/S,GACEzT,KAAK4pB,uCACL5pB,KAAK6pB,uCAEP/F,MAAM9jB,KAAK8pB,yC,6DAIqBrpB,GACpCT,KAAK2f,6BAA+Blf,I,4DAID8G,GACnCvH,KAAK4f,4BAA8BrY,I,4DAIAwiB,GACnC/pB,KAAKkgB,+BAAiCzT,KAAK2Z,KACxC2D,EAAgCjB,yBAnE3B,GAuEL9oB,KAAKkgB,+BACLlgB,KAAKigB,kCAELjgB,KAAKigB,gCAAkC,GAG1CjgB,KAAKggB,6BAA+B+J,EAAgCC,4BAA4Bzd,KAC7F,SAAAwJ,GAAW,OAAI,IAAIkT,GAAQlT,MAG9B/V,KAAK4H,SAAWmiB,EAAgClG,Y,2DAI5C7jB,KAAKwpB,wCAA0C5E,GAAa,GAC7D5kB,KAAKwpB,sCAAwC5E,GAAa,GACxD5kB,KAAKwpB,sCAAwC5E,GAAa,GAC/D5kB,KAAKspB,6BAA+BzE,GAAU,GAC9C7kB,KAAKupB,+BAAiCvpB,KAAKwpB,sCAC3CxpB,KAAK+f,+B,0DAID/f,KAAKypB,qCAAuC7E,GAAa,GAC1D5kB,KAAKypB,mCAAqC7E,GAAa,GACrD5kB,KAAKypB,mCAAqC7E,GAAa,GAC5D5kB,KAAKspB,6BAA+BzE,GAAU,GAC9C7kB,KAAKupB,+BAAiCvpB,KAAKypB,mCAC3CzpB,KAAK+f,+B,6DAKL/f,KAAKigB,kCACLjgB,KAAK+f,+B,yDAIL/f,KAAKigB,kCACLjgB,KAAK+f,+B,yDAG2Bxf,GAChCP,KAAKigB,gCAAkC4H,SAAStnB,EAAO,IACvDP,KAAK+f,+B,oDAGsBxf,GAC3BP,KAAKwf,gCAAkCjf,EACvCP,KAAKigB,gCAAkC,EACvCjgB,KAAK+f,iC,GAxHW+E,I,4DAClB/c,K,4HACAA,K,mIACAA,K,gIACAA,K,0HACAA,K,yHACAA,K,qHACAA,K,0HACAA,K,6HACAA,K,4HACAA,K,6HACAA,K,kqDCXEkiB,I,GAgCFpjB,IAAOC,M,GAuBPD,IAAOC,M,GAKPD,IAAOC,M,GAKPD,IAAOC,M,GAcPD,IAAOC,M,GAOPD,IAAOC,M,GAOPD,IAAOC,M,GAmDPD,IAAOC,M,GAMPD,IAAOC,M,GAMPD,IAAOC,M,eAjJR,WACGojB,EACAf,EACAC,GACA,IAAD,6BACC,4CAAMD,EAA6BC,IADpC,kiBAMFe,UAAY,WACT,EAAKrJ,+BAAiCsC,eACtC,EAAKrC,8BAAgC,KACrC,EAAKnZ,SAAW,KAChB,EAAKyZ,sBAAwB,GAC7B,EAAKT,mBAAqB,GAC1B,EAAKC,sBAAwB,GAC7B,EAAKa,8BAAgC,EACrC,EAAKhB,mBApCC,OAsBP,2DAwGFnH,4BAA8B,WAC3B,IAAI6Q,EAA+B,GACnC,IAAI,EAAKxJ,mBAOF,MAAO,CAAC,GAAI,IACnB,GAPG,EAAKA,mBAAmB/G,SAAQ,SAAAhB,GAC7B,EAAKT,YAAYyB,SAAQ,SAAAwQ,GAClBxR,EAAUtY,OAAS8pB,EAAWzQ,MAC/BwQ,EAAetiB,KAAKuiB,EAAW7Q,mBAIvC,EAAKqH,sBAAuB,CAC7B,IAAIyJ,EAAiC,GAUrC,OATA,EAAKzJ,sBAAsBhH,SAAQ,SAAA0Q,GAChC,EAAKnS,YAAYyB,SAAQ,SAAAhB,GACtBA,EAAUkB,eAAeF,SAAQ,SAAA2Q,GAC1BA,EAAa5Q,OAAS2Q,EAAYhqB,OACnC+pB,EAAiBxiB,KAAK0iB,EAAa/Q,0BAKxC,CAAC2Q,EAAgBE,GACpB,MAAO,CAAC,GAAI,KA5HnB,EAAKJ,2BAA6BA,EAClC,EAAKC,YAHN,E,uFAmBC,IAAI3E,EAAU,CACXa,QAASrmB,KAAKqlB,qBACdiB,QAAStmB,KAAKklB,uBACdqB,UAAWvmB,KAAK0gB,mBAChBlW,WAAYxK,KAAKuZ,8BAA8B,GAC/CQ,eAAgB/Z,KAAKuZ,8BAA8B,IAElD4M,EAAS1Z,KAAK2Z,KA9CV,GA8CwBpmB,KAAK0hB,8BAAgC,IAC/D+I,EAA0BzqB,KAAKkqB,2BAA2BQ,qBA/CxD,EAiDLvE,EACAX,GAEH,OAAO9B,oCAAyB+G,GAC5BhX,GACEzT,KAAK2qB,oCACL3qB,KAAK4qB,oCAEP9G,MAAM9jB,KAAK6qB,sC,0DAIkBpqB,GACjCT,KAAK8gB,+BAAiCrgB,I,yDAIN8G,GAChCvH,KAAK+gB,8BAAgCxZ,I,yDAILujB,GAChC9qB,KAAKyhB,6BAA+BhV,KAAK2Z,KACtC0E,EAA6BhC,yBAzExB,GA4EL9oB,KAAKyhB,6BAA+BzhB,KAAK0hB,gCAEzC1hB,KAAK0hB,8BAAgC,GACxC1hB,KAAKqhB,sBAAwByJ,EAA6BlC,iBAAiBrc,KACxE,SAAAwJ,GAAW,OAAI,IAAIgT,GAAqBhT,MAE3C/V,KAAK4H,SAjFE,U,qCAoFKrH,GACZP,KAAK4gB,mBAAqBrgB,EAC1BP,KAAK0hB,8BAAgC,EACrC1hB,KAAKuZ,8BACLvZ,KAAKmhB,4B,wCAGU5gB,GACfP,KAAK6gB,sBAAwBtgB,EAC7BP,KAAK0hB,8BAAgC,EACrC1hB,KAAKuZ,8BACLvZ,KAAKmhB,4B,iDAuDLnhB,KAAK0hB,gCACL1hB,KAAKmhB,4B,6CAKLnhB,KAAK0hB,gCACL1hB,KAAKmhB,4B,6CAIe5gB,GACpBP,KAAK0hB,8BAAgCmG,SAAStnB,EAAO,IACrDP,KAAKmhB,4B,gDA1DL,IAAI3W,EAA2B,GAC/B,GAAIxK,KAAK4gB,mBAAoB,CAC1B5gB,KAAK4gB,mBAAmB/G,SAAQ,SAAAyD,GAAQ,OACrC9S,EAAW1C,KAAKwV,EAAS/c,UAE5B,IAAIwqB,EAAyC,GAC7C/qB,KAAKoY,YAAYyB,SAAQ,SAAAyD,GAClB9S,EAAW2X,SAAS7E,EAAS1D,OAC9BmR,EAAcjjB,KAAd,MAAAijB,EAAa,aAASzN,EAASvD,oBAGrC,IAAIL,EAAqB,GAEzB,OADA/C,YAAKoU,GAAelR,SAAQ,SAAAyD,GAAQ,OAAI5D,EAAK5R,KAAKwV,EAAS1D,SACpDF,EAEV,MAAO,O,GApHYwP,I,kDACrBnhB,K,mHACAA,K,4HACAA,K,2HACAA,K,mHACAA,K,wHACAA,K,2HACAA,K,0HACAA,K,gHACAA,K,qkCAqFuB,SAAAxH,GACrB,EAAKmgB,mBAAqBngB,EAAMA,MAChC,EAAKmhB,8BAAgC,EACrC,EAAKP,8B,sDAGP2G,K,ggBClHSvX,GACJ,OAGIsR,GAEI,sDCNJC,GACO,uBCGdkJ,G,WAEH,aAAe,yBADf7Z,SACc,EACXnR,KAAKmR,IAAMoR,kBAAO,CACfC,QAASX,K,0EAqCeqG,EAAOC,EAAS3C,GAC3C,IAAIwC,EAAQ,UAAMlG,GAAN,kBAAyCoG,EAAzC,mBAAyDC,GACrE,OAAOjX,GACJlR,KAAKmR,IACL6W,EACAxC,EACAjV,Q,cClDH0a,G,sHAK2B/C,EAAOC,EAASpX,GAC3C,IAEI4X,EAAY,CACbqB,4BAHYkB,GAAgClB,4BAA4B9b,QACvDsa,OAAOL,EAASD,GAGjCY,yBACGoC,GAAgCpC,yBACnCjF,UAAWqH,GAAgCrH,WAE9C,OAAO,IAAIjB,SAAQ,SAAAC,GAAO,OAAIC,YAAW,kBAAMD,EAAQ8F,KAAY,Y,KCf5DpY,GACJ,OAGIsR,GACH,sDCLGC,GACU,8BCGjBqJ,G,WAEH,aAAe,yBADfha,SACc,EACXnR,KAAKmR,IAAMoR,kBAAO,CACfC,QAASX,K,iEAIMqG,EAAOC,EAAS3C,GAClC,IAAIwC,EAAQ,UAAMlG,GAAN,kBAA4CoG,EAA5C,mBAA4DC,GACxE,OAAOjX,GACJlR,KAAKmR,IACL6W,EACAxC,EACAjV,Q,KCPH6Y,IAJ0B,IAAI4B,GACN,IAAIjD,GACC,IAAIoD,GAEL,IAAI9C,IAChCc,GAA8B,IAAI8B,GAQzB,IAAE/J,WALE,IAAI+I,GAFgB,IAAIvB,GAIxCS,GACAC,KCTGA,IAF0B,IAAI4B,GACN,IAAIjD,GACA,IAAIM,IAUvB,IAAEtJ,QAJD,IAAImK,GALgB,IAAI+B,GAOrC7B,KCmBY3pB,G,iLAjBT,OACG,kBAAC,IAAD,iBAAcwH,GAAeoP,GAAe0I,GAAamC,IACtD,kBAAC,IAAD,CAAQkK,SAAUpJ,qBACf,kBAAC,IAAD,KACI/Z,GACAyW,GACAyB,GACAwB,GACD,kBAAC,IAAD,CAAOzZ,KAAK,KACT,kBAACmjB,EAAD,c,GAXHlrB,aCLEmrB,QACY,cAA7BC,OAAOrN,SAASsN,UAEgB,UAA7BD,OAAOrN,SAASsN,UAEhBD,OAAOrN,SAASsN,SAASzO,MACtB,2DCZT0O,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD6H1C,kBAAmBC,WACpBA,UAAUC,cAAcC,MACpBC,MAAK,SAAAC,GACHA,EAAaC,gBAEfpI,OAAM,SAAAvc,GACJ1C,QAAQ0C,MAAMA,EAAM6K,a","file":"static/js/main.949014b0.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction App() {\n   return (\n      <div className='App'>\n         <header className='App-header'>\n            <p>Hi...</p>\n         </header>\n      </div>\n   )\n}\n\nexport default App\n","export const colors = {\n   iceBlue: '#f1f7ff',\n   white: '#ffffff',\n   steel: '#7e858e',\n   'bright-blue': '#0b69ff',\n   'neon-red': '#ff0b37',\n   'neon-red-5': 'rgba(255, 11, 55, 0.05)',\n   'dark-blue': '#171f46',\n   'turquoise-blue': '#00b2ca',\n   'light-blue-grey': '#d7dfe9',\n   'greenish-teal': '#2dca73',\n   'yellow-orange': '#ffb800',\n   'white-two': '#fbfbfb',\n   'dark-blue-grey': '#171f46'\n}\n","import styled from '@emotion/styled'\nimport tw from 'tailwind.macro'\nimport { colors } from '../../themes/Colors'\nconst DesktopLayoutAuthDiv = styled.div`${tw`w-screen flex justify-center items-center`}\nbackground-color:${colors.iceBlue};\nheight:100vh;\n`\nexport { DesktopLayoutAuthDiv }\n","import React, { Component } from 'react'\nimport { DesktopLayoutAuthDiv } from './styledComponent'\nclass DesktopLayoutAuth extends Component {\n   render() {\n      return <DesktopLayoutAuthDiv>{this.props.children}</DesktopLayoutAuthDiv>\n   }\n}\nexport { DesktopLayoutAuth }\n","import styled from '@emotion/styled'\nimport tw from 'tailwind.macro'\nconst ButtonElement = styled.button`\n   ${tw`flex justify-center items-center`}\n   height: 40px;\n   border-radius: 4px;\n   background-color: #0b69ff;\n   color: white;\n   font-size: 14px;\n`\nexport { ButtonElement }\n","import React, { Component } from 'react'\nimport { ButtonElement } from './styledComponent'\nimport Loader from 'react-loader-spinner'\n\ninterface PrimaryButtonProps{\n   value:string,\n   handleClick:()=>void,\n   className:string,\n   apiStatus?:number\n}\nclass PrimaryButton extends Component<PrimaryButtonProps> {\n   render() {\n      const { value, handleClick, className, apiStatus } = this.props\n      return (\n         <ButtonElement\n            className={className}\n            value={value}\n            onClick={handleClick}\n            disabled={apiStatus === 100 ? true : false}\n         >\n            {apiStatus === 100 ? (\n               <Loader type='Oval' height={25} width={25} color='white' />\n            ) : (\n               value\n            )}\n         </ButtonElement>\n      )\n   }\n}\nexport { PrimaryButton }\n","import styled from '@emotion/styled'\nimport tw from 'tailwind.macro'\nimport { colors } from '../../themes/Colors'\nconst Typo32DarkBlueGreyRubikRegular = styled.p`\n   font-family: Rubik;\n   font-size: 32px;\n   font-weight: normal;\n   font-stretch: normal;\n   font-style: normal;\n   line-height: 1.25;\n   letter-spacing: normal;\n   color: #171f46;\n`\n\nconst Typo12SteelHKGrotesk = styled.p`\n   font-family: HKGrotesk;\n   font-size: 12px;\n   font-weight: 600;\n   font-stretch: normal;\n   font-style: normal;\n   line-height: 1.33;\n   letter-spacing: 0.12px;\n   color: ${colors.steel};\n`\n\nconst Typo14DarkBlueGreyHKGroteskRegular = styled.p`\n   font-family: HKGrotesk;\n   font-size: 14px;\n   font-weight: normal;\n   font-stretch: normal;\n   font-style: normal;\n   line-height: 1.71;\n   letter-spacing: normal;\n   color: #171f46;\n`\nconst Typo14WhiteRubikMedium = styled.p`\n   font-family: Rubik;\n   font-size: 14px;\n   font-weight: 500;\n   font-stretch: normal;\n   font-style: normal;\n   line-height: 1.71;\n   letter-spacing: normal;\n   color: ${colors.white};\n`\nconst Typo12NeonRedHKGrotesk = styled.p`\n   font-family: HKGrotesk;\n   font-size: 12px;\n   font-weight: normal;\n   font-stretch: normal;\n   font-style: normal;\n   line-height: 1.33;\n   letter-spacing: normal;\n   color: ${colors['neon-red']};\n`\nconst Typo12SteelHKGroteskSemiBold = styled.td`\n   font-family: HKGrotesk;\n   font-size: 12px;\n   font-weight: 600;\n   font-stretch: normal;\n   font-style: normal;\n   line-height: 1.33;\n   letter-spacing: 0.12px;\n   color: ${colors.steel};\n`\nconst Typo12SteelHKGroteskSemiBoldLable = styled.label`\n   font-family: HKGrotesk;\n   font-size: 12px;\n   font-weight: 600;\n   font-stretch: normal;\n   font-style: normal;\n   line-height: 1.33;\n   letter-spacing: 0.12px;\n   color: ${colors.steel};\n`\nconst Typo14DarkBlueGreyHKGroteskSemiBold = styled.p`\n   font-family: HKGrotesk;\n   font-size: 14px;\n   font-weight: 600;\n   font-stretch: normal;\n   font-style: normal;\n   line-height: 1.71;\n   letter-spacing: normal;\n   color: ${colors['dark-blue']};\n`\n\nconst Typo24DarkBlueGreyHKGroteskMedium = styled.p`\n   font-family: HKGrotesk;\n   font-size: 24px;\n   font-weight: 500;\n   font-stretch: normal;\n   font-style: normal;\n   line-height: 1.33;\n   letter-spacing: normal;\n   color: #171f46;\n`\nconst Typo18DarkBlueHKGroteskMedium = styled.p`\n   font-family: HKGrotesk;\n   font-size: 18px;\n   font-weight: 500;\n   font-stretch: normal;\n   font-style: normal;\n   line-height: 1.33;\n   letter-spacing: normal;\n   color: #171f46;\n`\nconst Typo32BrightBlueHKGroteskMedium = styled.p`\n   font-family: HKGrotesk;\n   font-size: 32px;\n   font-weight: 500;\n   font-stretch: normal;\n   font-style: normal;\n   line-height: 1.25;\n   letter-spacing: normal;\n   color: ${colors['bright-blue']};\n`\nconst Typo12DarkBlueGreyHKGroteskSemiBold = styled.th`\n   font-family: HKGrotesk;\n   font-size: 12px;\n   font-weight: 600;\n   font-stretch: normal;\n   font-style: normal;\n   line-height: 1.33;\n   letter-spacing: 0.12px;\n   color: ${colors['dark-blue-grey']};\n`\n\nconst Typo8DarkBlueGreyHKGroteskSemiBold = styled.p`\n   font-family: HKGrotesk;\n   font-size: 8px;\n   font-weight: 600;\n   font-stretch: normal;\n   font-style: normal;\n   line-height: 2;\n   letter-spacing: 0.32px;\n   color: ${colors['dark-blue-grey']};\n`\n\nconst Typo12WhiteHKGroteskBold = styled.p`\n   font-family: HKGrotesk;\n   font-size: 12px;\n   font-weight: bold;\n   font-stretch: normal;\n   font-style: normal;\n   line-height: 1.33;\n   letter-spacing: 0.12px;\n   color: ${colors.white};\n`\n\nconst Typo18DarkBlueGreyHKGroteskMedium = styled.p`\n   font-family: HKGrotesk;\n   font-size: 18px;\n   font-weight: 500;\n   font-stretch: normal;\n   font-style: normal;\n   line-height: 1.33;\n   letter-spacing: normal;\n   color: ${colors['dark-blue-grey']};\n`\nconst Typo18BrightBlueHKGroteskBold = styled.p`\n   font-family: HKGrotesk;\n   font-size: 18px;\n   font-weight: bold;\n   font-stretch: normal;\n   font-style: normal;\n   line-height: 1.33;\n   letter-spacing: normal;\n   color: ${colors['bright-blue']};\n`\n\nconst Typo18steelHKGroteskRegular = styled.p`\n   font-family: HKGrotesk;\n   font-size: 18px;\n   font-weight: normal;\n   font-stretch: normal;\n   font-style: normal;\n   line-height: 1.33;\n   letter-spacing: normal;\n   color: ${colors.steel};\n`\n\nconst Typo14SteelHKGroteskRegular = styled.p`\n   font-family: HKGrotesk;\n   font-size: 14px;\n   font-weight: normal;\n   font-stretch: normal;\n   font-style: normal;\n   line-height: 1.71;\n   letter-spacing: normal;\n   color: ${colors.steel};\n`\n\nconst Typo12DarkBlueGreyRubikMedium = styled.p`\n   font-family: Rubik;\n   font-size: 12px;\n   font-weight: 500;\n   font-stretch: normal;\n   font-style: normal;\n   line-height: 2;\n   letter-spacing: 0.12px;\n   color: ${colors['dark-blue-grey']};\n`\n\nexport {\n   Typo32DarkBlueGreyRubikRegular,\n   Typo12SteelHKGrotesk,\n   Typo14DarkBlueGreyHKGroteskRegular,\n   Typo14WhiteRubikMedium,\n   Typo12SteelHKGroteskSemiBold,\n   Typo12NeonRedHKGrotesk,\n   Typo14DarkBlueGreyHKGroteskSemiBold,\n   Typo24DarkBlueGreyHKGroteskMedium,\n   Typo18DarkBlueHKGroteskMedium,\n   Typo32BrightBlueHKGroteskMedium,\n   Typo12DarkBlueGreyHKGroteskSemiBold,\n   Typo8DarkBlueGreyHKGroteskSemiBold,\n   Typo12WhiteHKGroteskBold,\n   Typo18DarkBlueGreyHKGroteskMedium,\n   Typo18BrightBlueHKGroteskBold,\n   Typo18steelHKGroteskRegular,\n   Typo14SteelHKGroteskRegular,\n   Typo12DarkBlueGreyRubikMedium,\n   Typo12SteelHKGroteskSemiBoldLable\n}\n","import styled from '@emotion/styled'\nimport tw from 'tailwind.macro'\nimport { colors } from '../../themes/Colors'\nimport {\n   Typo12SteelHKGroteskSemiBoldLable,\n   Typo12NeonRedHKGrotesk\n} from '../../styleGuide/Typos'\nconst LableTag = styled(Typo12SteelHKGroteskSemiBoldLable)``\nconst ErrorMsgField = styled(Typo12NeonRedHKGrotesk)`\n   height: 16px;\n`\nconst InputWithLableDiv = styled.div`flex flex-col`\nexport { LableTag, InputWithLableDiv, ErrorMsgField }\n","import styled from '@emotion/styled'\nimport tw from 'tailwind.macro'\nimport { colors } from '../../themes/Colors'\nconst InputElement = styled.input`\n   ${tw`outline-none`}\n   padding-left:5px;\n`\nexport { InputElement }\n","import React, { Component } from 'react'\n\nimport { InputElement } from './styledComponent'\nimport { observer } from 'mobx-react'\ntype InputFieldProps = {\n   type: string\n   testid?: string\n   value: string\n   onHandleChange: (value: string) => void\n   placeHolder?: string\n   className?: string\n}\n\n@observer\nclass InputField extends Component<InputFieldProps> {\n   static defaultProps = {\n      onHandleChange: () => {}\n   }\n   inputRef: React.RefObject<HTMLInputElement>\n\n   constructor(props) {\n      super(props)\n      this.inputRef = React.createRef()\n   }\n   onHandleChange = event => {\n      this.props.onHandleChange(event.target.value)\n   }\n   render() {\n      const {\n         type,\n         testid,\n         value,\n         onHandleChange,\n         placeHolder,\n         className\n      } = this.props\n      return (\n         <InputElement\n            ref={this.inputRef}\n            type={type}\n            value={value}\n            onChange={this.onHandleChange}\n            placeholder={placeHolder}\n            className={className}\n            data-testid={testid}\n         ></InputElement>\n      )\n   }\n}\nexport { InputField }\n","import React, { Component } from 'react'\nimport { MdErrorOutline } from 'react-icons/md'\nimport './index.css'\ninterface ErrorIconProps{\n   className:string\n}\nclass ErrorIcon extends Component<ErrorIconProps> {\n   render() {\n      const { className } = this.props\n      return <MdErrorOutline className={className} />\n   }\n}\nexport { ErrorIcon }\n","import React, { Component } from 'react'\nimport { LableTag, InputWithLableDiv, ErrorMsgField } from './styledComponents'\nimport strings from '../../i18n/strings.json'\nimport { InputField } from '../InputField/InputField'\nimport { ErrorIcon } from '../ErrorIcon'\ninterface InputFieldWithLableProps {\n   lable: string\n   type: string\n   value: string\n   onHandleChange: (value: string) => void\n   errorMsg: string\n   className: string\n   placeHolder: string\n   errorIconClassName: string\n   inputClassName: string\n}\nclass InputFieldWithLable extends Component<InputFieldWithLableProps> {\n   inpuFieldRef: React.RefObject<InputField>\n\n   constructor(props) {\n      super(props)\n      this.inpuFieldRef = React.createRef()\n   }\n   render() {\n      const {\n         lable,\n         type,\n         value,\n         onHandleChange,\n         errorMsg,\n         className,\n         placeHolder,\n         errorIconClassName,\n         inputClassName\n      } = this.props\n      return (\n         <InputWithLableDiv className={className}>\n            <LableTag>{lable}</LableTag>\n            <InputField\n               ref={this.inpuFieldRef}\n               type={type}\n               value={value}\n               onHandleChange={onHandleChange}\n               placeHolder={placeHolder}\n               className={inputClassName}\n            ></InputField>\n            {errorMsg !== '' && <ErrorIcon className={errorIconClassName} />}\n            <ErrorMsgField>{errorMsg}</ErrorMsgField>\n         </InputWithLableDiv>\n      )\n   }\n}\nexport { InputFieldWithLable }\n","import styled from '@emotion/styled'\nimport tw from 'tailwind.macro'\nimport { colors } from '../../../common/themes/Colors'\nimport {\n   Typo32DarkBlueGreyRubikRegular,\n   Typo14DarkBlueGreyHKGroteskRegular\n} from '../../../common/styleGuide/Typos'\nconst SignInFornDiv = styled.div`\n   ${tw`flex flex-col items-center`}\n   width: 536px;\n   height: 687px;\n   background-color: ${colors.white};\n   height: 80%;\n`\nconst SignUpSpan = styled.a`\n   color: ${colors['bright-blue']};\n`\nconst GreetingMessage = styled(Typo32DarkBlueGreyRubikRegular)`\n   ${tw`flex justify-center text-center mb-8`}\n   width:214px;\n   height: 80px;\n`\nconst SignUpLink = styled(Typo14DarkBlueGreyHKGroteskRegular)``\n\nexport { SignInFornDiv, GreetingMessage, SignUpLink, SignUpSpan }\n","import * as React from \"react\"\n\nfunction SvgComponent(props) {\n  return (\n    <svg width={90} height={90} fill=\"none\" viewBox=\"0 0 90 90\" {...props}>\n      <path\n        fill=\"#1B3F70\"\n        d=\"M9.262 63.769a.593.593 0 01.16-.417.56.56 0 01.436-.169.558.558 0 01.432.162.578.578 0 01.17.43.563.563 0 01-.602.576.562.562 0 01-.596-.582zm1.024 10.122h-.872v-7.852h.872v7.852zm5.539 0v-10.57h3.123c1.133 0 1.993.234 2.58.703.586.468.88 1.157.878 2.066a2.342 2.342 0 01-.446 1.43c-.307.41-.735.714-1.224.868a2.566 2.566 0 012.051 2.543c0 .935-.302 1.665-.904 2.188-.603.524-1.442.787-2.517.79l-3.541-.018zm.894-5.833h2.44c.746-.014 1.322-.197 1.733-.527.41-.33.614-.829.614-1.472 0-.681-.213-1.185-.636-1.504-.422-.32-1.064-.484-1.922-.484h-2.229v3.987zm0 .756v4.323h2.679c.766 0 1.372-.197 1.82-.592a2.045 2.045 0 00.673-1.615 1.96 1.96 0 00-.15-.846 1.96 1.96 0 00-.494-.703c-.429-.38-1.02-.569-1.776-.569l-2.752.002zm25.627 5.077h-.9v-5.063h-6.044v5.063h-.894v-10.57h.894v4.751h6.044v-4.751h.9v10.57zM55.295 63.32v7.215a3.67 3.67 0 01-.474 1.86c-.307.526-.763.95-1.31 1.218a4.296 4.296 0 01-1.943.424c-1.113 0-2.005-.304-2.676-.912-.672-.608-1.017-1.447-1.037-2.519v-7.285h.887v7.155c0 .89.254 1.581.761 2.075.508.493 1.199.739 2.071.736.871 0 1.56-.247 2.067-.74.506-.494.759-1.181.758-2.063v-7.163h.896zm5.465 10.571v-10.57h3.123c1.136 0 1.996.234 2.58.703.585.468.877 1.157.879 2.066a2.343 2.343 0 01-.447 1.43c-.306.41-.734.714-1.223.868a2.566 2.566 0 012.047 2.542c0 .936-.302 1.665-.904 2.19-.603.523-1.442.786-2.517.789l-3.537-.018zm.895-5.833h2.44c.746-.014 1.322-.197 1.733-.527.41-.33.614-.829.614-1.472 0-.681-.214-1.185-.636-1.504-.422-.32-1.064-.484-1.923-.484h-2.228v3.987zm0 .756v4.323h2.68c.765 0 1.37-.197 1.818-.592a2.034 2.034 0 00.673-1.621 1.961 1.961 0 00-.643-1.549c-.428-.38-1.02-.569-1.777-.569l-2.751.008zm17.19 2.483a1.703 1.703 0 00-.617-1.391c-.411-.342-1.164-.667-2.259-.973-1.094-.307-1.894-.643-2.398-1.007a2.451 2.451 0 01-1.074-1.977 2.446 2.446 0 01.999-2.014c.666-.506 1.517-.758 2.552-.758a4.243 4.243 0 011.885.406c.529.248.976.641 1.29 1.133a2.96 2.96 0 01.457 1.621h-.9a2.208 2.208 0 00-.742-1.745c-.493-.44-1.157-.66-1.99-.66-.809 0-1.453.181-1.932.542a1.682 1.682 0 00-.719 1.415c-.005.255.051.507.164.736.112.23.277.428.482.58.431.34 1.122.64 2.07.899a9.775 9.775 0 012.158.807c.444.237.823.58 1.103.999.257.414.386.894.372 1.381a2.388 2.388 0 01-1 2.004c-.665.503-1.543.755-2.632.756a5.15 5.15 0 01-2.051-.395 3.112 3.112 0 01-1.418-1.117 2.888 2.888 0 01-.483-1.65h.894a2.117 2.117 0 00.835 1.766c.557.43 1.297.646 2.222.646.823 0 1.484-.182 1.984-.545a1.701 1.701 0 00.748-1.459z\"\n      />\n      <path\n        fill=\"#036DB0\"\n        d=\"M23.057 31.87L7.367 55.164a2.154 2.154 0 001.776 3.355h31.385a2.157 2.157 0 001.901-1.141 2.152 2.152 0 00-.114-2.214L26.63 31.87a2.15 2.15 0 00-3.573 0z\"\n      />\n      <path\n        fill=\"#4CC7F4\"\n        d=\"M51.323 16.056L25.05 54.744a2.401 2.401 0 00-.137 2.481 2.409 2.409 0 002.129 1.282h52.55a2.41 2.41 0 001.992-3.762L55.31 16.054a2.413 2.413 0 00-3.986.001z\"\n      />\n    </svg>\n  )\n}\n\nexport default SvgComponent\n","import React, { Component } from 'react'\n\nimport { DesktopLayoutAuth } from '../../../common/components/DesktopLayoutAuth'\nimport { Image } from '../../../common/components/Image'\nimport strings from '../../../common/i18n/strings.json'\nimport { PrimaryButton } from '../../../common/components/PrimaryButton'\nimport { InputFieldWithLable } from '../../../common/components/InputFieldWithLable'\nimport { ToastContainer } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport './index.css'\nimport {\n   SignInFornDiv,\n   GreetingMessage,\n   SignUpLink,\n   SignUpSpan\n} from './styledComponent'\nimport { Logo } from '../../../common/components/Icons/Logo'\n\ntype SignInFormProps = {\n   username: string\n   password: string\n   useNameErrorMessage: string\n   passwordErrorMessage: string\n   onChangePassword: (value: string) => void\n   onClickSignIn: () => void\n   onChangeUsername: (value: string) => void\n   getUserAuthAPIStatus: number\n}\nclass SignInForm extends Component<SignInFormProps> {\n   usernameRef: React.RefObject<InputFieldWithLable>\n   passwordRef: React.RefObject<InputFieldWithLable>\n   constructor(props) {\n      super(props)\n      this.usernameRef = React.createRef()\n      this.passwordRef = React.createRef()\n   }\n   componentDidMount = () => {\n      this.usernameRef.current?.inpuFieldRef.current?.inputRef.current?.focus()\n      console.log(\n         this.passwordRef.current?.inpuFieldRef.current?.inputRef.current\n            ?.placeholder\n      )\n   }\n\n   render() {\n      const {\n         username,\n         password,\n         useNameErrorMessage,\n         passwordErrorMessage,\n         onChangePassword,\n         onClickSignIn,\n         onChangeUsername,\n         getUserAuthAPIStatus\n      } = this.props\n      return (\n         <DesktopLayoutAuth>\n            <SignInFornDiv>\n               <Logo />\n               <GreetingMessage className={'greeting-message'}>\n                  {strings.logIn.hiTherePleaseSignIn}\n               </GreetingMessage>\n               <InputFieldWithLable\n                  ref={this.usernameRef}\n                  className={'sign-input-field'}\n                  type={'text'}\n                  lable={strings.logIn.userName}\n                  value={username}\n                  onHandleChange={onChangeUsername}\n                  errorMsg={useNameErrorMessage}\n                  placeHolder={'Username'}\n                  errorIconClassName={'error-icon'}\n                  inputClassName={\n                     useNameErrorMessage !== ''\n                        ? 'error-input-element'\n                        : 'input-element'\n                  }\n               />\n               <InputFieldWithLable\n                  ref={this.passwordRef}\n                  className={'sign-input-field'}\n                  type={'password'}\n                  value={password}\n                  lable={strings.logIn.password}\n                  onHandleChange={onChangePassword}\n                  errorMsg={passwordErrorMessage}\n                  placeHolder={'Password'}\n                  errorIconClassName={'error-icon'}\n                  inputClassName={\n                     passwordErrorMessage !== ''\n                        ? 'error-input-element'\n                        : 'input-element'\n                  }\n               />\n               <PrimaryButton\n                  className={'primary-button-large'}\n                  value={strings.logIn.logIn}\n                  handleClick={onClickSignIn}\n                  apiStatus={getUserAuthAPIStatus}\n               />\n               <SignUpLink>\n                  {strings.logIn.doNotHaveAnAccount}\n                  <SignUpSpan href={'/signin'}>\n                     {strings.logIn.signUp}\n                  </SignUpSpan>\n               </SignUpLink>\n            </SignInFornDiv>\n            <ToastContainer\n               position='bottom-center'\n               autoClose={3000}\n               hideProgressBar={false}\n               newestOnTop={false}\n               closeOnClick\n               rtl={false}\n               pauseOnFocusLoss\n               draggable\n               pauseOnHover\n            />\n         </DesktopLayoutAuth>\n      )\n   }\n}\n\nexport { SignInForm }\n","export const USER = 'user'\nexport const RP = 'Rp'\nexport const ADMIN = 'Admin'\n","import * as React from \"react\";\nimport { observable, action } from 'mobx'\nimport { observer, inject } from 'mobx-react'\n\nimport { SignInForm } from '../../components/SignInForm'\nimport { toast } from 'react-toastify'\nimport { USER, RP, ADMIN } from '../../../common/constants/NameConstants'\nimport { AuthStore } from \"../../stores/AuthStore\";\nimport {withRouter} from 'react-router-dom'\nimport {History} from 'history'\ninterface SignInRouteProp{\n   history:History,\n   getUserAuthAPIStatus:number\n}\ninterface InjectedProps extends SignInRouteProp{\n   authStore:AuthStore\n}\n\n@inject('authStore')\n@observer\nclass SignInRoute extends React.Component<SignInRouteProp> {\n   @observable username = ''\n   @observable password = ''\n   @observable useNameErrorMessage = ''\n   @observable passwordErrorMessage = ''\n   @observable errorMsg = ''\n\n   \n   getAuthStore=()=>{\n      return this.getInjectedProps().authStore\n   }\n   \n   getInjectedProps=():InjectedProps =>  this.props as InjectedProps\n   \n\n   @action.bound onChangeUsername(value) {\n      this.username = value\n      if (this.username === '')\n         this.useNameErrorMessage = 'Please enter username'\n      else this.useNameErrorMessage = ''\n   }\n\n   @action.bound onChangePassword(value) {\n      this.password = value\n      if (this.password === '')\n         this.passwordErrorMessage = 'Please enter password'\n      else this.passwordErrorMessage = ''\n   }\n\n   onFailure = () => {\n      const { getUserAuthAPIError: apiError } = this.getAuthStore()\n      if (apiError !== null && apiError !== undefined) {\n         toast.error(this.getAuthStore().getUserAuthAPIError, {\n            position: 'bottom-center',\n            autoClose: 3000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n         })\n      }\n   }\n\n   @action.bound handleOnclick() {\n      this.useNameErrorMessage = ''\n      this.passwordErrorMessage = ''\n      if (this.username === '')\n         this.useNameErrorMessage = 'Please enter username'\n      if (this.password === '')\n         this.passwordErrorMessage = 'Please enter password'\n      if (this.username !== '' && this.password !== '') {\n         return true\n      }\n   }\n\n   onClickSignIn = async () => {\n      if (this.handleOnclick())\n         await this.getAuthStore().userSignIn(\n            { username: this.username, password: this.password },\n            this.onSuccess,\n            this.onFailure\n         )\n   }\n\n   onSuccess = (userType:string) => {\n      switch (userType) {\n         case USER:\n            this.props.history.push('/userobservationslist')\n            break\n         case RP:\n            this.props.history.push('/rpobservationslist')\n            break\n         case ADMIN:\n            this.props.history.push('/listofobservations')\n            break\n      }\n   }\n\n   render() {\n      const { getUserAuthAPIStatus } = this.getAuthStore()\n      return (\n         <SignInForm\n            username={this.username}\n            password={this.password}\n            useNameErrorMessage={this.useNameErrorMessage}\n            passwordErrorMessage={this.passwordErrorMessage}\n            onChangePassword={this.onChangePassword}\n            onClickSignIn={this.onClickSignIn}\n            onChangeUsername={this.onChangeUsername}\n            getUserAuthAPIStatus={getUserAuthAPIStatus}\n         />\n      )\n   }\n}\nexport default withRouter(SignInRoute)  \n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { SIGN_IN_PATH } from '../constants/RouteConstants'\n\nimport { SignInRoute } from './SignInRoute'\nimport { ProtectedRoute } from '../../common/components/ProtectedRoute/ProtectedRoute'\n\nconst authRoutes = [<Route path={SIGN_IN_PATH} component={SignInRoute} />]\n\nexport { authRoutes }\n","export const SIGN_IN_PATH = '/signin/'\nexport const SIGN_UP_PATH = '/signup/'\n","import styled from '@emotion/styled'\nimport tw from 'tailwind.macro'\nconst DesktopLayoutMainPageDiv = styled.div`\n   ${tw`flex flex-col items-center `}\n   ${tw`w-screen `}\n   background-color:#fbfbfb;\n`\nexport { DesktopLayoutMainPageDiv }\n","import styled from '@emotion/styled'\nimport tw from 'tailwind.macro'\nimport {\n   Typo18DarkBlueGreyHKGroteskMedium,\n   Typo24DarkBlueGreyHKGroteskMedium,\n   Typo18BrightBlueHKGroteskBold,\n   Typo18steelHKGroteskRegular\n} from '../../styleGuide/Typos'\nconst PageHeaderDiv = styled.div`\n   ${tw`flex w-screen justify-between`}\n   height: 80px;\n   border: solid 1px #d7dfe9;\n   background-color: #ffffff;\n`\nconst Title = styled(Typo24DarkBlueGreyHKGroteskMedium)`\n   padding-left: 24px;\n`\nconst UserName = styled(Typo18DarkBlueGreyHKGroteskMedium)`\n   padding-right: 24px;\n`\nconst RpFeatureOne = styled(Typo18BrightBlueHKGroteskBold)`\n   padding-right: 12px;\n`\nconst RpFeatureTwo = styled(Typo18steelHKGroteskRegular)`\n   padding-right: 24px;\n`\nconst RpFeatures = styled.p`\n   font-family: HKGrotesk;\n   font-size: 18px;\n   font-weight: normal;\n   font-stretch: normal;\n   font-style: normal;\n   line-height: 1.33;\n   letter-spacing: normal;\n   padding-right: 12px;\n   cursor: pointer;\n`\nconst LeftPart = styled.div`\n   ${tw`flex items-center`}\n   padding - left: 32px;\n`\nconst RightPart = styled.div`\n   ${tw`flex items-center`}\n   padding - right: 32px;\n`\nconst RightSubPartOne = styled.div`\n   ${tw`flex items-center mx-16`}\n`\nconst RightSubPartTwo = styled.div`\n   ${tw`flex items-center`}\n   margin-right: 20px;\n`\nexport {\n   PageHeaderDiv,\n   LeftPart,\n   RightPart,\n   Title,\n   UserName,\n   RpFeatureOne,\n   RpFeatureTwo,\n   RightSubPartOne,\n   RightSubPartTwo,\n   RpFeatures\n}\n","import styled from '@emotion/styled'\nimport tw from 'tailwind.macro'\nimport { LazyLoadImage } from 'react-lazy-load-image-component'\n\nconst ImageElement = styled(LazyLoadImage)`\n   ${tw``}\n   object-fit: contain;\n`\nexport { ImageElement }\n","import React, { Component } from 'react'\nimport { ImageElement } from './styledComponent'\ninterface ImageProps {\n   src: string\n   className?: string\n   onHandleClick?: () => void\n}\nclass Image extends Component<ImageProps> {\n   render() {\n      const { src, className, onHandleClick } = this.props\n      return (\n         <ImageElement\n            onClick={onHandleClick}\n            className={className}\n            src={src}\n         ></ImageElement>\n      )\n   }\n}\n;``\nexport { Image }\n","import styled from '@emotion/styled'\nimport tw from 'tailwind.macro'\nimport { Typo18BrightBlueHKGroteskBold } from '../../styleGuide/Typos'\nconst PopUpDiv = styled.div`${tw`flex flex-col justify-around items-center`}\n   ${tw``}\n   width: 100%;\n   250px;\n`\nconst UserNmae = styled(Typo18BrightBlueHKGroteskBold)`\n   margin: 10px;\n`\nexport { PopUpDiv, UserNmae }\n","import React, { Component } from 'react'\nimport Modal from 'react-modal'\nimport { PopUpDiv, UserNmae } from './styledComponent'\nimport { Image } from '../Image'\nimport { PrimaryButton } from '../PrimaryButton'\nimport { inject } from 'mobx-react'\nimport { withRouter,RouterProps } from 'react-router-dom'\nimport { AuthStore } from \"../../../Authuntication/stores/AuthStore\"\ntype ReactModalPopUpProps={\n   src:string,\n   userName:string,\n   isOpen:boolean,\n   handleClick:()=>void,\n   profilePicStyle:string,\n   btnStyle:string,\n   BtnValue:string,\n   customStyles:any,\n   authStore:AuthStore\n}\n\n@inject('authStore')\nclass ReactModalPopUp extends Component <ReactModalPopUpProps &RouterProps >{\n   signOut = () => {\n      this.props.authStore.userSignOut(\n         {},\n         () => {},\n         () => {}\n      )\n      this.props.history.push('/signin')\n   }\n   render() {\n      const {\n         src,\n         userName,\n         isOpen,\n         handleClick,\n         profilePicStyle,\n         btnStyle,\n         BtnValue,\n         customStyles\n      } = this.props\n      return (\n         <Modal isOpen={isOpen} style={customStyles}>\n            <PopUpDiv onBlur={handleClick}>\n               <Image src={src} className={profilePicStyle} />\n               <UserNmae>{userName}</UserNmae>\n               <PrimaryButton\n                  handleClick={this.signOut}\n                  className={btnStyle}\n                  value={BtnValue}\n               />\n            </PopUpDiv>\n         </Modal>\n      )\n   }\n}\n\nexport default withRouter(ReactModalPopUp)\n","import React, { Component } from 'react'\nimport './index.css'\nimport {\n   PageHeaderDiv,\n   LeftPart,\n   RightPart,\n   Title,\n   UserName,\n   RpFeatureOne,\n   RpFeatureTwo,\n   RightSubPartOne,\n   RightSubPartTwo,\n   RpFeatures\n} from './styledComponent'\nimport strings from '../../i18n/strings.json'\nimport { Image } from '../Image'\nimport { ReactModalPopUp } from '../ReactModal'\nimport { observable } from 'mobx'\nimport { observer } from 'mobx-react'\n\nconst customStyles = {\n   content: {\n      top: '10%',\n      left: '85%',\n      position: 'absolute',\n      width: '200px',\n      height: '200px'\n   }\n}\n\ntype PageHeaderProps={\n   src:string,\n   userName:string,\n   rpFeatures:Array<string>,\n   currentPage:string,\n   userType:string,\n   navigateTOPage:(value:string)=>void\n}\n@observer\nclass PageHeader extends Component<PageHeaderProps> {\n   @observable isOpen = false\n\n   closeTab = () => {\n      this.isOpen = false\n   }\n   onHandleClick = () => {\n      this.isOpen = true\n   }\n\n   render() {\n      const {\n         reportingPortal,\n         assignedToMe,\n         myObservations,\n         totalObservations,\n         categories\n      } = strings.rpFeatures\n      const {\n         src,\n         userName,\n         rpFeatures,\n         currentPage,\n         userType,\n         navigateTOPage\n      } = this.props\n\n      return (\n         <PageHeaderDiv>\n            <LeftPart>\n               <Image\n                  className={'logo'}\n                  src='https://cdn.zeplin.io/5d0afc9102b7fa56760995cc/assets/9e43886f-8c57-4319-a0a9-e01d50479197.svg'\n               />\n               <Title>{reportingPortal}</Title>\n            </LeftPart>\n            <RightPart>\n               {userType === 'user' && currentPage !== '' && (\n                  <RightSubPartOne>\n                     <RpFeatures\n                        onClick={() => navigateTOPage(assignedToMe)}\n                        className={\n                           currentPage === assignedToMe ? 'active-head' : ''\n                        }\n                        data-testid={assignedToMe}\n                     >\n                        {assignedToMe}\n                     </RpFeatures>\n                     <RpFeatures\n                        onClick={() => navigateTOPage(myObservations)}\n                        className={\n                           currentPage === myObservations ? 'active-head' : ''\n                        }\n                        data-testid={myObservations}\n                     >\n                        {myObservations}\n                     </RpFeatures>\n                  </RightSubPartOne>\n               )}\n               {userType === 'Rp' && (\n                  <RightSubPartOne>\n                     <RpFeatures\n                        onClick={() => navigateTOPage(assignedToMe)}\n                        className='active-head'\n                        data-testid={assignedToMe}\n                     >\n                        {assignedToMe}\n                     </RpFeatures>\n                     <RpFeatures\n                        onClick={() => navigateTOPage(myObservations)}\n                        data-testid={myObservations}\n                     >\n                        {myObservations}\n                     </RpFeatures>\n                  </RightSubPartOne>\n               )}\n               {userType === 'Admin' && (\n                  <RightSubPartOne>\n                     <RpFeatures\n                        data-testid={'Total Observations'}\n                        onClick={() => navigateTOPage(totalObservations)}\n                        className='active-head'\n                     >\n                        {totalObservations}\n                     </RpFeatures>\n                     <RpFeatures\n                        data-testid={'Categories'}\n                        onClick={() => navigateTOPage(categories)}\n                     >\n                        {categories}\n                     </RpFeatures>\n                  </RightSubPartOne>\n               )}\n               <RightSubPartTwo>\n                  <UserName>{userName}</UserName>\n                  <Image\n                     className={'PersonM'}\n                     src={src}\n                     onHandleClick={this.onHandleClick}\n                  />\n                  <ReactModalPopUp\n                     customStyles={customStyles}\n                     btnStyle={'sign-out-btn'}\n                     BtnValue={'Sign Out'}\n                     userName={userName}\n                     handleClick={this.closeTab}\n                     isOpen={this.isOpen}\n                     src={src}\n                     profilePicStyle={'PersonM'}\n                  />\n               </RightSubPartTwo>\n            </RightPart>\n         </PageHeaderDiv>\n      )\n   }\n}\nexport { PageHeader }\n","import React, { Component } from 'react'\nimport { DesktopLayoutMainPageDiv } from './styledComponent'\nimport { PageHeader } from '../PageHeader'\nimport { observer } from 'mobx-react'\n\ntype DesktopLayoutMainPageProps={\n   userName:string,\n   profilePic:string,\n   rpFeatures:Array<string>,\n   currentPage:string,\n   userType:string,\n   navigateTOPage:(value:string)=>void\n}\n\n@observer\nclass DesktopLayoutMainPage extends Component<DesktopLayoutMainPageProps> {\n   static defaultProps={\n      userName:\"\",\n      profilePic:\"\",\n      rpFeatures:[],\n      currentPage:\"\",\n      userType:\"\",\n      navigateTOPage:()=>{}\n   }\n   render() {\n      const {\n         userName,\n         profilePic,\n         rpFeatures,\n         currentPage,\n         userType,\n         navigateTOPage\n      } = this.props\n      return (\n         <DesktopLayoutMainPageDiv>\n            <PageHeader\n               userName={userName}\n               navigateTOPage={navigateTOPage}\n               userType={userType}\n               currentPage={currentPage}\n               rpFeatures={rpFeatures}\n               src={profilePic}\n            />\n            {this.props.children}\n         </DesktopLayoutMainPageDiv>\n      )\n   }\n}\nexport { DesktopLayoutMainPage }\n","import styled from '@emotion/styled'\nimport tw from 'tailwind.macro'\nconst ButtonElement = styled.button`\n   ${tw`flex items-center`}\n   height: 40px;\n   border-radius: 4px;\n   background-color: #0b69ff;\n   color: white;\n`\nconst LeftIcon = styled.img`\n   ${tw``}\n`\nexport { ButtonElement, LeftIcon }\n","import React, { Component } from 'react'\nimport { ButtonElement, LeftIcon } from './styledComponent'\n\n\ninterface PrimaryLeftIconDefaultProps{\n   src:string\n   handleClick:()=>void\n   className:string,\n   value:string\n}\nclass PrimaryLeftIconDefault extends Component<PrimaryLeftIconDefaultProps> {\n   render() {\n      const { value, handleClick, src, className } = this.props\n      return (\n         <ButtonElement\n            className={className}\n            value={value}\n            onClick={handleClick}\n         >\n            <LeftIcon src={src} />\n            {value}\n         </ButtonElement>\n      )\n   }\n}\nexport { PrimaryLeftIconDefault }\n","import styled from '@emotion/styled'\nimport tw from 'tailwind.macro'\nimport { Typo32BrightBlueHKGroteskMedium } from '../../../common/styleGuide/Typos'\nconst PageHeading = styled(Typo32BrightBlueHKGroteskMedium)``\n\nconst ObseravationsHeader = styled.div`\n   ${tw`flex flex-col`}\n   padding:48px 64px;\n   width: 100%;\n`\nconst PageHeadingAndAddButonDiv = styled.div`\n   ${tw`flex items-center justify-between`}\n`\nconst ObseravationsListTable = styled.table`\n   ${tw``}\n`\nconst TableHeader = styled.thead``\nconst TableBody = styled.tbody``\nexport {\n   PageHeading,\n   ObseravationsHeader,\n   ObseravationsListTable,\n   TableHeader,\n   TableBody,\n   PageHeadingAndAddButonDiv\n}\n","import styled from '@emotion/styled'\nimport tw from 'tailwind.macro'\nimport { Typo12DarkBlueGreyHKGroteskSemiBold } from '../../styleGuide/Typos'\n\nconst TableRow = styled.tr`${tw`flex justify-around items-center`}\nwidth: 1240px;\nheight: 66px;\nborder: solid 1px  #d7dfe9;\nbackground-color: #ffffff;\n}`\nconst PersonTypeDiv = styled.span`\n   ${tw`flex justify-around items-center`}\n`\nconst TableHeading = styled(Typo12DarkBlueGreyHKGroteskSemiBold)`\n   ${tw`flex justify-center`}\n   width:14%;\n`\nexport { TableRow, TableHeading, PersonTypeDiv }\n","import React, { Component } from 'react'\nimport './index.css'\nimport { TableRow, TableHeading, PersonTypeDiv } from './styledComponent'\n\nimport strings from '../../i18n/strings.json'\nimport { Image } from '../Image'\n\ninterface ObservationListHeaderProps{\n   headings:Array<string>\n   dueDateOnSort?:() => void\n   reportedOnSort?:() => void\n\n}\n\nfunction TableHeadingDiv(props) {\n   const { reportedOn, dueDate } = strings.userFeatures\n   let onClick\n   if (props.heading === reportedOn) onClick = props.reportedOnSort\n   else if (props.heading === dueDate) onClick = props.dueDateOnSort\n\n   if (props.heading === reportedOn || props.heading === dueDate) {\n      return (\n         <TableHeading onClick={onClick}>\n            <PersonTypeDiv>\n               {props.heading}\n               <Image\n                  className={'Chevron-Down-2'}\n                  src='https://cdn.zeplin.io/5d0afc9102b7fa56760995cc/assets/4b787319-5164-4ca3-8687-cf9f1603e3d3.svg'\n               />\n            </PersonTypeDiv>\n         </TableHeading>\n      )\n   } else {\n      return <TableHeading>{props.heading}</TableHeading>\n   }\n}\n\nclass ObservationListHeader extends Component <ObservationListHeaderProps>{\n   render() {\n      const { headings, dueDateOnSort, reportedOnSort } = this.props\n      return (\n         <TableRow>\n            {headings.map(heading => (\n               <TableHeadingDiv\n                  key={Math.random()}\n                  reportedOnSort={reportedOnSort}\n                  dueDateOnSort={dueDateOnSort}\n                  heading={heading}\n               />\n            ))}\n         </TableRow>\n      )\n   }\n}\nexport { ObservationListHeader }\n","import styled from '@emotion/styled'\nimport tw from 'tailwind.macro'\nimport {\n   Typo12SteelHKGroteskSemiBold,\n   Typo8DarkBlueGreyHKGroteskSemiBold,\n   Typo12WhiteHKGroteskBold\n} from '../../styleGuide/Typos'\n\nconst TableRow = styled.tr`${tw`flex justify-around items-center`}\nwidth: 1240px;\nheight: 66px;\nborder: solid 1px  #d7dfe9;\n\n}`\n\ninterface RectangleSeverityProps{\n   bgColor:string\n}\nconst RectangleSeverity = styled.div<RectangleSeverityProps>`\n   ${tw` flex justify-center items-center`}\n   width: 72px;\n   height: 21px;\n   border-radius: 100px;\n   background-color: ${props => props.bgColor};\n`\n\nconst RectangleActionStatus = styled.div`\n   ${tw``}\n   height: 20px;\n   padding: 3px 10px;\n   border-radius: 100px;\n   border: solid 1px #171f46;\n   background-color: white;\n`\nconst PersonDetails = styled.div`\n   ${tw`flex justify-center`}\n   width:100%;\n`\nconst PersonData = styled.div`\n   ${tw`flex flex-col `}\n   margin-left:10px;\n`\nconst TableData = styled(Typo12SteelHKGroteskSemiBold)`\n   ${tw`flex justify-center items-center`}\n   width:14%;\n   height: 64px;\n   overflow: auto;\n`\n\nconst MsgCount = styled.span`\n   ${tw`flex justify-center items-center`}\n   background-color:#ff0b37;\n   width: 11px;\n   height: 11px;\n   color: white;\n   border-radius: 50%;\n   position: relative;\n   top: -10px;\n   left: -5px;\n`\nconst SevertyStatus = styled(Typo12WhiteHKGroteskBold)``\nconst ObservationStatus = styled(Typo8DarkBlueGreyHKGroteskSemiBold)``\nexport {\n   TableRow,\n   TableData,\n   RectangleSeverity,\n   RectangleActionStatus,\n   SevertyStatus,\n   ObservationStatus,\n   PersonDetails,\n   PersonData,\n   MsgCount\n}\n","import React, { Component } from 'react'\nimport './index.css'\nimport {\n   TableRow,\n   TableData,\n   RectangleSeverity,\n   RectangleActionStatus,\n   SevertyStatus,\n   ObservationStatus,\n   PersonData,\n   PersonDetails,\n   MsgCount\n} from './styledComponent'\nimport strings from '../../i18n/strings.json'\nimport { Image } from '../Image'\n\nconst PUBLIC = 'Public'\nconst PRIVATE = 'Private'\n\nimport { ADMIN, USER, RP } from '../../constants/NameConstants'\n\ninterface PersonData{\n   first_name:string,\n   profile_pic:string,\n   last_name:string,\n   phone_number:number\n   \n}\n\ninterface ObservationListItemProps{\n   title:string,\n   reportedOn:string,\n   pairedPerson,\n   severty:string,\n   status:string,\n   dueDate:string,\n   messages:string,\n   src:string,\n   onClickObservation:(value:number)=>void,\n   dueDateType:string,\n   observationId:number,\n   assignedTo?:PersonData,\n   reportedBy?:PersonData,\n   userType:string |null  \n}\n\nclass ObservationListItem extends Component <ObservationListItemProps>{\n   render() {\n      const {\n         title,\n         reportedOn,\n         pairedPerson,\n         severty,\n         status,\n         dueDate,\n         messages,\n         src,\n         onClickObservation,\n         dueDateType,\n         observationId,\n         assignedTo,\n         reportedBy,\n         userType\n      } = this.props\n\n      let bgColor =\n         severty === 'High'\n            ? '#ff0b37'\n            : severty === 'Low'\n            ? '#2dca73'\n            : '#ffb800'\n\n      return (\n         <TableRow\n            id={`${observationId}`}\n            data-testid='observation-list-item'\n            onClick={() => onClickObservation(observationId)}\n         >\n            <TableData>{title}</TableData>\n\n            {userType === ADMIN && reportedBy ? (\n               <TableData>\n                  <PersonDetails>\n                     <Image src={src} className={'persons-xs'}></Image>\n                     <PersonData>\n                        {reportedBy.first_name}\n                        <br />\n                        ph:{reportedBy.phone_number}\n                     </PersonData>\n                  </PersonDetails>\n               </TableData>\n            ) : (\n               <TableData>{`${reportedOn.slice(0, 10)} at ${reportedOn.slice(\n                  11\n               )}`}</TableData>\n            )}\n\n            {userType === ADMIN? (\n               <TableData>\n                  <RectangleSeverity bgColor={bgColor}>\n                     <SevertyStatus>{severty}</SevertyStatus>\n                  </RectangleSeverity>\n               </TableData>\n            ) : userType === RP  && reportedBy? (\n               <TableData>\n                  <PersonDetails>\n                     <Image src={src} className={'persons-xs'}></Image>\n                     <PersonData>\n                        {reportedBy.first_name}\n                        <br />\n                        ph:{reportedBy.phone_number}\n                     </PersonData>\n                  </PersonDetails>\n               </TableData>\n            ) : (\n               <TableData>\n                  {assignedTo != null &&\n                  Object.keys(assignedTo).length !== 0 ? (\n                     <PersonDetails>\n                        <Image\n                           src={\n                              assignedTo.profile_pic\n                                 ? assignedTo.profile_pic\n                                 : src\n                           }\n                           className={'persons-xs'}\n                        ></Image>\n                        <PersonData>\n                           {assignedTo.first_name}\n                           <br />\n                           ph:{assignedTo.phone_number}\n                        </PersonData>\n                     </PersonDetails>\n                  ) : (\n                     <PersonDetails>\n                        <PersonData>Rp not Assigned to</PersonData>\n                     </PersonDetails>\n                  )}\n               </TableData>\n            )}\n\n            {userType === ADMIN ? (\n               <TableData>\n                  <RectangleActionStatus>\n                     <ObservationStatus>{status}</ObservationStatus>\n                  </RectangleActionStatus>\n               </TableData>\n            ) : (\n               <TableData>\n                  <RectangleSeverity bgColor={bgColor}>\n                     <SevertyStatus>{severty}</SevertyStatus>\n                  </RectangleSeverity>\n               </TableData>\n            )}\n\n            {userType === ADMIN ? (\n               <TableData>\n                  {assignedTo != null &&\n                  Object.keys(assignedTo).length !== 0 ? (\n                     <PersonDetails>\n                        <Image src={src} className={'persons-xs'}></Image>\n                        <PersonData>\n                           {assignedTo.first_name}\n                           <br />\n                           ph:{assignedTo.phone_number}\n                        </PersonData>\n                     </PersonDetails>\n                  ) : (\n                     <PersonDetails>\n                        <PersonData>Rp not Assigned to</PersonData>\n                     </PersonDetails>\n                  )}\n               </TableData>\n            ) : (\n               <TableData>\n                  <RectangleActionStatus>\n                     <ObservationStatus>{status}</ObservationStatus>\n                  </RectangleActionStatus>\n               </TableData>\n            )}\n\n            <TableData>{dueDateType === PUBLIC ? dueDate : PRIVATE}</TableData>\n\n            <TableData>\n               <Image\n                  className={'message-icon'}\n                  src={\n                     'https://cdn.zeplin.io/5d0afc9102b7fa56760995cc/assets/4983aced-8454-4506-9eee-0ff83acf662f.svg'\n                  }\n               />\n               <MsgCount>{messages}</MsgCount>\n            </TableData>\n         </TableRow>\n      )\n   }\n}\nexport { ObservationListItem }\n","import styled from '@emotion/styled'\nimport tw from 'tailwind.macro'\nconst PaginationBtn = styled.button`${tw`flex border border-black items-center justify-center w-8 h-8 mr-2 `}\ncursor:${props => (props.disabled === true ? 'not-allowed' : '')};\nborder: solid 1px #d7dfe9;\n`\nexport { PaginationBtn }\n","import React, { Component } from 'react'\nimport { PaginationBtn } from './styledComponent'\n\ninterface PaginationButtonProps{\n   svg:string\n   changePage:()=>void\n   isDisable:boolean\n}\n\nclass PaginationButton extends Component<PaginationButtonProps> {\n   render() {\n      const { svg, changePage, isDisable } = this.props\n      const SvgImg = <img alt={'sidebutton'} src={svg} />\n      return (\n         <PaginationBtn disabled={isDisable} onClick={changePage}>\n            {SvgImg}\n         </PaginationBtn>\n      )\n   }\n}\n\nexport { PaginationButton }\n","import styled from '@emotion/styled'\nimport tw from 'tailwind.macro'\nconst PaginationBtnDiv = styled.div`\n   ${tw`flex justify-end items-center`}\n   margin-top:24px\n`\nconst CurrentPage = styled.button`\n   ${tw`w-8 h-8 flex justify-center items-center`}\n   margin:5px;\n   border-radius: 2px;\n`\nconst Seperator = styled.div`\n   ${tw`mx-2`}\n`\nconst NextPage = styled.p`\n   ${tw`w-8 h-8 flex justify-center items-center`}\n`\nexport { PaginationBtnDiv, CurrentPage, Seperator, NextPage }\n","import React, { Component, ReactElement } from 'react'\nimport { PaginationButton } from '../PaginationButton'\nimport { PaginationBtnDiv, CurrentPage } from './styledComponent'\n\nimport './index.css'\nconst COUNT = 5\ninterface PaginationProps{\n         currentPage:number,\n         totalPages:number,\n         goToPreviousPage:()=>void,\n         goToNextPage:()=>void,\n         goToRandomPage:(page:string)=>void\n}\nclass Pagination extends Component<PaginationProps> {\n   goToRandomPage = event => {\n      this.props.goToRandomPage(event.target.value)\n   }\n\n   getPageButtons = (currentPage, totalPages) => {\n      if (totalPages < 5) {\n         let arrayOfPages = Array.from({ length: totalPages }, (v, i) => i + 1)\n         return arrayOfPages.map(page => (\n            <CurrentPage\n               key={Math.random()}\n               className={\n                  page === currentPage\n                     ? 'pagination-button-highlight'\n                     : 'pagination-button'\n               }\n               onClick={this.goToRandomPage}\n               value={page}\n            >\n               {page}\n            </CurrentPage>\n         ))\n      } else if (currentPage < totalPages - 4) {\n         let arrayOfPages:Array<ReactElement<HTMLButtonElement>>= []\n         arrayOfPages.push(\n            \n            <CurrentPage\n               className={'pagination-button-highlight'}\n               key={Math.random()}\n               onClick={this.goToRandomPage}\n               value={currentPage}\n            >\n               {currentPage}\n            </CurrentPage>\n         )\n         arrayOfPages.push(\n            <CurrentPage\n               className={'pagination-button'}\n               key={Math.random()}\n               onClick={this.goToRandomPage}\n               value={currentPage + 1}\n            >\n               {currentPage + 1}\n            </CurrentPage>\n         )\n         arrayOfPages.push(\n            <CurrentPage\n               className={'pagination-button'}\n               key={Math.random()}\n               onClick={this.goToRandomPage}\n               value={(totalPages + currentPage) / 2}\n            >\n               ...\n            </CurrentPage>\n         )\n         arrayOfPages.push(\n            <CurrentPage\n               className={'pagination-button'}\n               key={Math.random()}\n               onClick={this.goToRandomPage}\n               value={totalPages - 1}\n            >\n               {totalPages - 1}\n            </CurrentPage>\n         )\n         arrayOfPages.push(\n            <CurrentPage\n               className={'pagination-button'}\n               key={Math.random()}\n               onClick={this.goToRandomPage}\n               value={totalPages}\n            >\n               {totalPages}\n            </CurrentPage>\n         )\n         return arrayOfPages\n      } else {\n         let arrayOfPages = Array.from(\n            { length: COUNT },\n            (v, i) => totalPages - COUNT + i + 1\n         )\n         return arrayOfPages.map(page => (\n            <CurrentPage\n               className={\n                  page === currentPage\n                     ? 'pagination-button-highlight'\n                     : 'pagination-button'\n               }\n               key={Math.random()}\n               onClick={this.goToRandomPage}\n               value={page}\n            >\n               {page}\n            </CurrentPage>\n         ))\n      }\n   }\n\n   render() {\n      console.log(CurrentPage);\n      \n      const {\n         currentPage,\n         totalPages,\n         goToPreviousPage,\n         goToNextPage,\n         goToRandomPage\n      } = this.props\n      const butttons = this.getPageButtons(currentPage, totalPages)\n      return (\n         <PaginationBtnDiv>\n            <PaginationButton\n               isDisable={currentPage > 1 ? false : true}\n               changePage={goToPreviousPage}\n               svg={\n                  'https://cdn.zeplin.io/5d0afc9102b7fa56760995cc/assets/24ef7d49-46b3-47e6-b835-579ee7a857d0.svg'\n               }\n            />\n            {butttons.map(button => button)}\n            <PaginationButton\n               isDisable={currentPage < totalPages ? false : true}\n               changePage={goToNextPage}\n               svg={\n                  'https://cdn.zeplin.io/5d0afc9102b7fa56760995cc/assets/8c3c6b47-f12f-4a74-9a04-5790a1970543.svg'\n               }\n            />\n         </PaginationBtnDiv>\n      )\n   }\n}\n\nexport { Pagination }\n","import styled from '@emotion/styled'\nimport tw from 'tailwind.macro'\nconst SelectElement = styled.select`\n   ${tw`outline-none`}\n   height: 40px;\n   border-radius: 2px;\n   border: solid 1px #d7dfe9;\n   padding-right: 30px;\n`\nconst SlectOptions = styled.option`\n   ${tw``};\n`\nexport { SelectElement, SlectOptions }\n","import React, { Component } from 'react'\nimport { SelectElement, SlectOptions } from './styledComponent'\nimport { USER, RP } from '../../constants/NameConstants'\nimport './index.css'\nimport Select from 'react-select'\n\ninterface DropDownProps{\n   onSlectOption:(value:string)=>void,\n   options:Array<string>,\n   value:string,\n   isDisabled?:boolean,\n   isMulti?:boolean,\n   className?:string,\n   placeholder?:string,\n   userType?:string|null\n}\n\nfunction Options(props) {\n   return <SlectOptions value={props.option}>{props.option}</SlectOptions>\n}\nclass DropDown extends Component<DropDownProps> {\n   renderOptions = options => {\n      let dummyOptions = [...options]\n      return dummyOptions.map(option => {\n         return { value: option, label: option }\n      })\n   }\n   renderValue = value => {\n      if (typeof value !== 'string') {\n         return value\n      } else {\n         return { value: value, label: value }\n      }\n   }\n   render() {\n      const {\n         onSlectOption,\n         options,\n         value,\n         isDisabled,\n         isMulti,\n         className,\n         placeholder\n      } = this.props\n\n\n      return (\n         <Select\n            isDisabled={isDisabled}\n            className={className ? className : 'drop-down-select'}\n            options={options.length > 0 ? this.renderOptions(options) : []}\n            onChange={onSlectOption}\n            defaultValue={this.renderValue(value)}\n            isMulti={isMulti}\n            placeholder={placeholder}\n         />\n      )\n   }\n}\nexport { DropDown }","export const apiMethods = {\n   post: 'POST',\n   get: 'GET',\n   delete: 'DELETE',\n   put: 'PUT'\n}\n\nconst INVALID_URL_TOKEN = 'INVALID_URL_TOKEN'\nconst INVALID_TOKEN = 'INVALID_TOKEN'\nconst INVALID_USER = 'INVALID_USER'\nconst NOT_AUTHORIZED_EXCEPTION = 'NotAuthorizedException'\nconst USER_NOT_FOUND_EXCEPTION = 'UserNotFoundException'\nconst INVALID_SESSION_TOKEN = 'INVALID_SESSION_TOKEN'\nconst REQUEST_TIMED_OUT = 'Endpoint request timed out'\nconst INTERNAL_SERVER_ERROR_CODE = 500\nconst NO_INTERNET_ERROR_CODE = 503\nconst BAD_REQUEST_ERROR_CODE = 400\nconst UNAUTHORIZED_ERROR_CODE = 401\nconst ACCESS_FORBIDDEN_ERROR_CODE = 403\nconst NOT_FOUND_ERROR_CODE = 404\n\nexport const resStatuses = {\n   invalidURLToken: INVALID_URL_TOKEN,\n   invalidToken: INVALID_TOKEN,\n   invalidUser: INVALID_USER,\n   notAuthorizedException: NOT_AUTHORIZED_EXCEPTION,\n   userNotFoundException: USER_NOT_FOUND_EXCEPTION,\n   invalidSessionToken: INVALID_SESSION_TOKEN,\n   requestTimedOut: REQUEST_TIMED_OUT\n}\n\nexport const statusCodes = {\n   internalServerErrorCode: INTERNAL_SERVER_ERROR_CODE,\n   noInternetErrorCode: NO_INTERNET_ERROR_CODE,\n   badRequestErrorCode: BAD_REQUEST_ERROR_CODE,\n   unAuthorizedErrorCode: UNAUTHORIZED_ERROR_CODE,\n   accessForbiddenErrorCode: ACCESS_FORBIDDEN_ERROR_CODE,\n   notFoundErrorCode: NOT_FOUND_ERROR_CODE\n}\n\nexport const apiErrorProblems = {\n   networkError: 'NETWORK_ERROR',\n   timeoutError: 'TIMEOUT_ERROR'\n}\n","import Cookie from 'js-cookie'\n\nexport const ACCESS_TOKEN = 'access_token'\nexport const USER_TYPE = 'user_type'\n\nexport function getCookie(key) {\n   return Cookie.get(key)\n}\n\nfunction setCookie(key, value) {\n   Cookie.set(key, value, {\n      expires: 30,\n      path: '/'\n   })\n}\n\nexport function getAccessToken() {\n   return getCookie(ACCESS_TOKEN)\n}\nexport function setAccessToken(accessToken) {\n   setCookie(ACCESS_TOKEN, accessToken)\n}\n\nexport function clearUserSession() {\n   Cookie.remove(ACCESS_TOKEN, { path: '/' })\n}\n","import getData from '@ib/api'\n\nimport {\n   apiMethods,\n   statusCodes,\n   resStatuses,\n   apiErrorProblems\n} from '../constants/APIConstants'\n\nimport { getAccessToken } from './StorageUtils'\n\nexport const networkCallWithApisauce = async (\n   api,\n   url,\n   requestObject,\n   type = apiMethods.post\n) => {\n   let response = null\n   const accessToken = getAccessToken()\n   if (accessToken) {\n      api.setHeader('Authorization', `Bearer ${accessToken}`)\n   }\n   api.setHeader('Content-Type', 'application/json; charset=UTF-8')\n   try {\n      response = await getData(api, url, requestObject, type)\n   } catch (error) {\n      throw error\n   }\n   return response\n}\n\nexport const getUserDisplayableErrorMessage = error => {\n   const formattedError = getFormattedError(error)\n   return formattedError.description\n}\n\nexport function isNetworkError(error) {\n   const apiError = JSON.parse(error)\n   const { networkError, timeoutError } = apiErrorProblems\n   return apiError.problem === networkError || apiError.problem === timeoutError\n      ? true\n      : false\n}\n\nexport const getFormattedError = apiError => {\n   //TODO: Need to use strings from i18n\n   const errorViewTitle = 'Oops! Something Went Wrong'\n   const errorViewDescription =\n      \"We're having some trouble completing your request. Please try again.\"\n   const connectionLost = 'Connection lost'\n   const internetConnection = 'Please check your internet connection'\n\n   let description = ''\n   let errorConstant = ''\n   let title = errorViewTitle\n   let errorCode = statusCodes.internalServerErrorCode\n   if (apiError !== null && apiError !== undefined) {\n      try {\n         const parsedMessage = JSON.parse(apiError)\n         let parsedError\n\n         if (parsedMessage.data === undefined || parsedMessage.data === null) {\n            // To handle case when we are directly returning backend error message\n            parsedError = parsedMessage\n         } else {\n            // To handle case when we are adding all the requests to backend error message\n            parsedError = parsedMessage.data\n         }\n\n         if (parsedError !== undefined && parsedError !== null) {\n            if (\n               parsedError.message &&\n               parsedError.message === resStatuses.requestTimedOut\n            ) {\n               title = errorViewTitle\n               description = errorViewDescription\n            }\n\n            if (parsedError.response) {\n               try {\n                  const response = JSON.parse(parsedError.response)\n                  const {\n                     title: errorTitle,\n                     description: errorDescription\n                  } = response\n                  if (errorTitle) {\n                     title = errorTitle\n                  }\n                  if (errorDescription) {\n                     description = errorDescription\n                  } else {\n                     description = parsedError.response\n                  }\n               } catch (e) {\n                  description = parsedError.response\n               }\n               errorConstant = parsedError.res_status\n            }\n            if (parsedError.http_status_code) {\n               errorCode = parsedError.http_status_code\n               errorConstant = parsedError.res_status\n               if (\n                  parsedError.http_status_code ===\n                  statusCodes.noInternetErrorCode\n               ) {\n                  title = connectionLost\n                  description = internetConnection\n               }\n            }\n         }\n         if (isNetworkError(JSON.stringify(parsedError))) {\n            title = connectionLost\n            description = internetConnection\n         }\n      } catch (e) {\n         // console.log('err >><<<', e)\n      }\n   }\n\n   if (description === null || description === '') {\n      title = errorViewTitle\n      description = errorViewDescription\n   }\n   const apiErrorResponse = {\n      errorCode,\n      title,\n      description,\n      errorConstant\n   }\n   return apiErrorResponse\n}\n","import React, { Component } from 'react'\n\ninterface SvgComponentProps{\n   renderComponent:Function\n   className?:string\n}\nclass SvgComponent extends Component<SvgComponentProps> {\n   render() {\n      const {\n         renderComponent: RenderComponent,\n         className,\n         ...other\n      } = this.props\n      return (\n         <span className={className}>\n            <RenderComponent {...other} />\n         </span>\n      )\n   }\n}\n\nexport default SvgComponent\n","import React, { Component } from 'react'\n\ninterface LoaderProps{\n   width:number,\n    height:number,\n     fill: string\n}\n\nclass Loader extends Component <LoaderProps>{\n   static defaultProps = {\n      width: 100,\n      height: 100,\n      fill: '#00BFFF'\n   }\n\n   render() {\n      const { width, height, fill } = this.props\n      return (\n         <svg\n            width={width}\n            height={height}\n            viewBox='0 0 120 30'\n            xmlns='http://www.w3.org/2000/svg'\n            fill={fill}\n            aria-label='audio-loading'\n         >\n            <circle cx={15} cy={15} r='12.2657'>\n               <animate\n                  attributeName='r'\n                  from={15}\n                  to={15}\n                  begin='0s'\n                  dur='0.8s'\n                  values='15;9;15'\n                  calcMode='linear'\n                  repeatCount='indefinite'\n               />\n               <animate\n                  attributeName='fillOpacity'\n                  from={1}\n                  to={1}\n                  begin='0s'\n                  dur='0.8s'\n                  values='1;.5;1'\n                  calcMode='linear'\n                  repeatCount='indefinite'\n               />\n            </circle>\n            <circle\n               cx={60}\n               cy={15}\n               r='11.7343'\n               attributeName='fillOpacity'\n               from={1}\n               to='0.3'\n            >\n               <animate\n                  attributeName='r'\n                  from={9}\n                  to={9}\n                  begin='0s'\n                  dur='0.8s'\n                  values='9;15;9'\n                  calcMode='linear'\n                  repeatCount='indefinite'\n               />\n               <animate\n                  attributeName='fillOpacity'\n                  from='0.5'\n                  to='0.5'\n                  begin='0s'\n                  dur='0.8s'\n                  values='.5;1;.5'\n                  calcMode='linear'\n                  repeatCount='indefinite'\n               />\n            </circle>\n            <circle cx={105} cy={15} r='12.2657'>\n               <animate\n                  attributeName='r'\n                  from={15}\n                  to={15}\n                  begin='0s'\n                  dur='0.8s'\n                  values='15;9;15'\n                  calcMode='linear'\n                  repeatCount='indefinite'\n               />\n               <animate\n                  attributeName='fillOpacity'\n                  from={1}\n                  to={1}\n                  begin='0s'\n                  dur='0.8s'\n                  values='1;.5;1'\n                  calcMode='linear'\n                  repeatCount='indefinite'\n               />\n            </circle>\n         </svg>\n      )\n   }\n}\n\nexport default Loader\n","import React, { Component } from 'react'\nimport SvgComponent from '../../SvgComponent'\nimport SvgFile from './SvgFile'\n\nclass Loader extends Component {\n   render() {\n      return <SvgComponent renderComponent={SvgFile} {...this.props} />\n   }\n}\n\nexport default Loader\n\n","import styled from '@emotion/styled'\nimport tw from 'tailwind.macro'\n\nexport const LoadingViewContainer = styled.div`\n   ${tw`flex flex-col justify-center items-center min-h-screen `}\n   background-color:#fbfbfb;\n`\n\nexport const FailureViewContainer = styled.div`\n   ${tw`flex flex-col justify-center items-center min-h-screen bg-gray-200`}\n`\n\nexport const FailureViewMessage = styled.p`\n   ${tw`m-6 text-2xl text-center`}\n`\n\nexport const RetryButton = styled.button`\n   ${tw`px-8 py-2 bg-blue-500 text-white text-2xl rounded`}\n`\n","import React from 'react'\n\nimport Loader from '../Icons/Loader'\n\nimport { LoadingViewContainer } from './styledComponents'\n\nclass LoadingView extends React.Component {\n   render() {\n      return (\n         <LoadingViewContainer>\n            <Loader />\n         </LoadingViewContainer>\n      )\n   }\n}\n\nexport default LoadingView\n","import React from 'react'\nimport { observer } from 'mobx-react'\n\nimport {\n   FailureViewContainer,\n   FailureViewMessage,\n   RetryButton\n} from './styledComponents'\n\n\ntype FailureViewProps={\n   onRetryClick:()=>void,\n   errorMessage:string\n}\n@observer\nclass FailureView extends React.Component<FailureViewProps> {\n   render() {\n      const { onRetryClick, errorMessage } = this.props\n\n      return (\n         <FailureViewContainer>\n            <FailureViewMessage>{errorMessage}</FailureViewMessage>\n            <RetryButton onClick={onRetryClick}>Retry</RetryButton>\n         </FailureViewContainer>\n      )\n   }\n}\n\nexport default FailureView\n","import React from 'react'\nimport { observer } from 'mobx-react'\n\nimport { API_FETCHING, API_SUCCESS, API_FAILED } from '@ib/api-constants'\n\nimport { getUserDisplayableErrorMessage } from '../../utils/APIUtils'\n\nimport LoadingView from './LoadingView'\nimport FailureView from './FailureView'\n\n\n\ntype LoadingWrapperWithFailureProps={\n      apiStatus:number,\n      //TODO\n      renderSuccessUI:Function\n      onRetryClick:()=>void,\n      apiError:string\n}\n\n@observer\nclass LoadingWrapperWithFailure extends React.Component<LoadingWrapperWithFailureProps> {\n   render() {\n      const {\n         apiStatus,\n         renderSuccessUI: RenderSuccessUI,\n         onRetryClick,\n         apiError\n      } = this.props\n      const errorMessage = getUserDisplayableErrorMessage(apiError)\n\n      switch (apiStatus) {\n         case API_FETCHING:\n            return <LoadingView />\n         case API_SUCCESS:\n            return <RenderSuccessUI />\n         case API_FAILED:\n            return (\n               <FailureView\n                  onRetryClick={onRetryClick}\n                  errorMessage={errorMessage}\n               />\n            )\n         default:\n            return null\n      }\n   }\n}\n\nexport default LoadingWrapperWithFailure\n","import styled from '@emotion/styled'\nimport tw from 'tailwind.macro'\n\nexport const NoDataViewContainer = styled.div`\n   ${tw`text-center m-4`}\n`\n\nexport const NoDataViewText = styled.p`\n   ${tw`text-xl`}\n`\n","import React from 'react'\n\nimport { NoDataViewContainer, NoDataViewText } from './styledComponents'\n\nclass NoDataView extends React.Component {\n   render() {\n      return (\n         <NoDataViewContainer>\n            <NoDataViewText>No data found!</NoDataViewText>\n         </NoDataViewContainer>\n      )\n   }\n}\n\nexport default NoDataView\n","import React, { Component } from 'react'\nimport './index.css'\nimport { DesktopLayoutMainPage } from '../../../common/components/DesktopLayoutMainPage'\nimport { PageHeader } from '../../../common/components/PageHeader'\nimport { PrimaryLeftIconDefault } from '../../../common/components/PrimaryLeftIconDefault'\nimport strings from '../../../common/i18n/strings.json'\nimport {\n   ObseravationsHeader,\n   PageHeading,\n   ObseravationsListTable,\n   TableHeader,\n   TableBody,\n   PageHeadingAndAddButonDiv\n} from './styledComponent'\nimport { ObservationListHeader } from '../../../common/components/ObservationListHeader'\nimport { ObservationListItem } from '../../../common/components/ObservationListItem'\nimport { observer } from 'mobx-react'\nimport { Pagination } from '../../../common/components/Pagination'\nimport { DropDown } from '../../../common/components/DropDown'\nimport LoadingWrapperWithFailure from '../../../common/components/LoadingWrapperWithFailure'\nimport NoDataView from '../../../common/components/NoDataView'\nimport { Observation } from \"../../stores/Models/Observation\"\n\nexport interface UserObservatonListPageProps{\n         handleClick:()=>void,\n         observationList:Array<Observation>,\n         onClickObservation:(id:number)=>void,\n         totalPages:number,\n         currentPage:number,\n         goToNextPage:()=>void,\n         goToPreviousPage:()=>void,\n         goToRandomPage:(value:string)=>void,\n         reportedOnSort:()=>void,\n         dueDateOnSort:()=>void,\n         filterObservationList:(value:string)=>void,\n         filterType:string,\n         userType:string,\n         getObservationListAPIStatus:number,\n         getObservationListAPIError:string,\n         onRetryClick:()=>void\n}\n\n@observer\nclass UserObservatonListPage extends Component<UserObservatonListPageProps> {\n   renderSuccessUi = () => {\n      const {\n         handleClick,\n         observationList,\n         onClickObservation,\n         totalPages,\n         currentPage,\n         goToNextPage,\n         goToPreviousPage,\n         goToRandomPage,\n         reportedOnSort,\n         dueDateOnSort,\n         filterObservationList,\n         filterType,\n         userType\n      } = this.props\n\n      const {\n         title,\n         reportedOn,\n         assignedTo,\n         severty,\n         status,\n         dueDate,\n         messages,\n         addNew,\n         listofObservations,\n         all,\n         acknowledgedbyRp,\n         resolved,\n         closed,\n         reported,\n         actioninProgress\n      } = strings.userFeatures\n      return (\n         <React.Fragment>\n            <ObseravationsHeader>\n               <PageHeadingAndAddButonDiv>\n                  <PageHeading>{listofObservations}</PageHeading>\n                  <PrimaryLeftIconDefault\n                     className={'Primary-Left-IconDefault'}\n                     value={addNew}\n                     handleClick={handleClick}\n                     src={\n                        'https://cdn.zeplin.io/5d0afc9102b7fa56760995cc/assets/7930d80d-a88c-485e-b54b-4239b82c39f0.svg'\n                     }\n                  />\n               </PageHeadingAndAddButonDiv>\n               <DropDown\n                  onSlectOption={filterObservationList}\n                  className={'filter-user-observation-list'}\n                  options={[\n                     all,\n                     acknowledgedbyRp,\n                     resolved,\n                     closed,\n                     reported,\n                     actioninProgress\n                  ]}\n                  value={filterType}\n                  userType={userType}\n               />\n            </ObseravationsHeader>\n            {observationList.length > 0 ? (\n               <React.Fragment>\n                  <ObseravationsListTable>\n                     <TableHeader>\n                        <ObservationListHeader\n                           reportedOnSort={reportedOnSort}\n                           dueDateOnSort={dueDateOnSort}\n                           headings={[\n                              title,\n                              reportedOn,\n                              assignedTo,\n                              severty,\n                              status,\n                              dueDate,\n                              messages\n                           ]}\n                        />\n                     </TableHeader>\n                     <TableBody>\n                        {observationList.length > 0 &&\n                           observationList.map(observation => {\n                              return (\n                                 <ObservationListItem\n                                    key={Math.random()}\n                                    onClickObservation={onClickObservation}\n                                    title={observation.title}\n                                    reportedOn={observation.reportedOn}\n                                    severty={observation.severty}\n                                    status={observation.status}\n                                    dueDate={observation.dueDate}\n                                    dueDateType={observation.dueDateType}\n                                    pairedPerson={observation.assignedTo}\n                                    messages={observation.messages}\n                                    userType={userType}\n                                    // reportedBy={observation.reportedBy}\n                                    assignedTo={observation.assignedTo}\n                                    observationId={observation.observationId}\n                                    src={\n                                       'https://cdn.zeplin.io/5d0afc9102b7fa56760995cc/assets/867a98d4-d61b-45cf-89cc-0a50a9dddb38@3x.png'\n                                    }\n                                 />\n                              )\n                           })}\n                     </TableBody>\n                  </ObseravationsListTable>\n                  <Pagination\n                     totalPages={totalPages}\n                     currentPage={currentPage}\n                     goToNextPage={goToNextPage}\n                     goToRandomPage={goToRandomPage}\n                     goToPreviousPage={goToPreviousPage}\n                  />\n               </React.Fragment>\n            ) : (\n               <NoDataView />\n            )}\n         </React.Fragment>\n      )\n   }\n   render() {\n      const {\n         getObservationListAPIStatus,\n         getObservationListAPIError,\n         onRetryClick\n      } = this.props\n      return (\n         <DesktopLayoutMainPage\n            userName={'ProfileName'}\n            profilePic={\n               'https://cdn.zeplin.io/5d0afc9102b7fa56760995cc/assets/5a060d96-2b5d-4c5d-8c81-cb89b5b8328a@3x.png'\n            }\n         >\n            <LoadingWrapperWithFailure\n               apiStatus={getObservationListAPIStatus}\n               apiError={getObservationListAPIError}\n               renderSuccessUI={this.renderSuccessUi}\n               onRetryClick={onRetryClick}\n            />\n         </DesktopLayoutMainPage>\n      )\n   }\n}\nexport { UserObservatonListPage }\n","import React, { Component } from 'react'\nimport { UserObservatonListPage } from '../../components/UserObservatonListPage'\nimport { observer, inject } from 'mobx-react'\nimport { withRouter } from 'react-router-dom'\nimport {\n   USER_OBSERVATION_PATH,\n   USER_OBSERVATION_SCREEN_PATH\n} from '../../constants/RouteConstants'\nimport { toJS } from 'mobx'\nimport LoadingWrapperWithFailure from '../../../common/components/LoadingWrapperWithFailure'\nimport { UserStore } from \"../../stores/UserStore\"\nimport {History} from 'history'\n\ntype UserObservatonListRouteProps={\n   userStore:UserStore,\n   history:History\n}\n\n\n@inject('authStore', 'userStore')\n@observer\nclass UserObservatonListRoute extends Component<UserObservatonListRouteProps> {\n   constructor(props) {\n      super(props)\n   }\n\n   componentDidMount = () => {\n      this.doNetworkCalls()\n   }\n\n   getUserStore = () => {\n      return this.props.userStore\n   }\n\n   doNetworkCalls = () => {\n      this.getUserStore().getObservationList()\n   }\n   onClickAddNew = () => {\n      const { history } = this.props\n      history.push(USER_OBSERVATION_PATH)\n   }\n   onSuccess = () => {\n      alert('data recieved')\n   }\n   onFailure = () => {\n      alert('data recieved')\n   }\n   onClickObservation = observationId => {\n      this.props.history.push({\n         pathname: `${USER_OBSERVATION_SCREEN_PATH}${observationId}`,\n         state: { userType: 'user', currentPage: '' }\n      })\n   }\n   filterObservationList = value => {\n      this.props.userStore.filterObservationList(toJS(value).value)\n   }\n   render() {\n      const {\n         observationList,\n         goToPreviousPage,\n         goToNextPage,\n         currentPage,\n         totalPages,\n         goToRandomPage,\n         reportedOnSort,\n         dueDateOnSort,\n         filterType,\n         userType,\n         getObservationListAPIStatus,\n         getObservationListAPIError\n      } = this.getUserStore()\n      const username = 'Santhosh'\n      const profilePic = ''\n      return (\n         <UserObservatonListPage\n            handleClick={this.onClickAddNew}\n            observationList={observationList}\n            onClickObservation={this.onClickObservation}\n            goToPreviousPage={goToPreviousPage}\n            goToNextPage={goToNextPage}\n            currentPage={currentPage}\n            totalPages={totalPages}\n            goToRandomPage={goToRandomPage}\n            dueDateOnSort={dueDateOnSort}\n            reportedOnSort={reportedOnSort}\n            filterType={filterType}\n            filterObservationList={this.filterObservationList}\n            userType={userType}\n            getObservationListAPIStatus={getObservationListAPIStatus}\n            getObservationListAPIError={getObservationListAPIError}\n            onRetryClick={this.doNetworkCalls}\n         />\n      )\n   }\n}\nwithRouter(UserObservatonListRoute)\nexport { UserObservatonListRoute }\n","export const USER_OBSERVATION_LIST_PATH = '/userobservationslist/'\nexport const USER_OBSERVATION_PATH = '/userobservation/'\nexport const USER_OBSERVATION_SCREEN_PATH = '/observationscreen/'\nexport const RP_OBSERVATION_LIST_PATH = '/rpobservationslist/'\nexport const OBSERVATIONS_ASSIGNED_TO_RP = '/observationsassignedrp/'\nexport const LIST_OF_OBSERVATIONS_PATH = '/listofobservations/'\n","import styled from '@emotion/styled'\nimport tw from 'tailwind.macro'\nimport { colors } from '../../themes/Colors'\nconst TextAreaElement = styled.textarea`\n   ${tw`focus:outline-none`}\n`\nexport { TextAreaElement }\n","import React, { Component } from 'react'\n\nimport { TextAreaElement } from './styledComponent'\ninterface TextAreaProps{\n   value:string,\n   className:string,\n   onHandleChange:(value:string)=>void,\n   placeHolder?:string,\n   isDisabled?:boolean,\n   testid?:string\n}\nclass TextArea extends Component <TextAreaProps>{\n   onHandleChange = event => {\n      this.props.onHandleChange(event.target.value)\n   }\n\n   render() {\n      const {\n         value,\n         className,\n         \n         placeHolder,\n         isDisabled,\n         testid\n      } = this.props\n\n      return (\n         <TextAreaElement\n            value={value}\n            onChange={this.onHandleChange}\n            placeholder={placeHolder}\n            className={className}\n            disabled={isDisabled}\n            data-testid={testid}\n         />\n      )\n   }\n}\nexport { TextArea }\n","import styled from '@emotion/styled'\nimport tw from 'tailwind.macro'\nimport {\n   Typo14SteelHKGroteskRegular,\n   Typo12DarkBlueGreyRubikMedium\n} from '../../../common/styleGuide/Typos'\n\nconst BackToObservationsLink = styled(Typo14SteelHKGroteskRegular)`\n   ${tw`flex`}\n   margin-bottom:34px;\n   width: 150px;\n   cursor: pointer;\n`\nconst FieldName = styled(Typo12DarkBlueGreyRubikMedium)`\n   width: 25%;\n   margin-left: 30px;\n`\n\nconst ObservationForm = styled.div`\n   ${tw`flex flex-col`}\n   width:80%;\n   background-color: white;\n   padding: 42px 80px;\n   margin: 32px 0px;\n`\nconst DragAndDrop = styled.div`\n   ${tw` flex justify-center items-center`}\n   width:34%;\n   height: 80px;\n   border-radius: 2px;\n   border: solid 1px #d7dfe9;\n   background-color: #ffffff;\n`\nconst FieldContainer = styled.div`\n   ${tw`flex items-center `}\n   margin-bottom:48px;\n   width: 100%;\n`\nconst Required = styled.span`\n   color: #ff0b37;\n   font-size: 12px;\n`\n\nconst InputAndErrorField = styled.div`\n   ${tw`flex flex-col`}\n   width:100%\n`\nexport {\n   BackToObservationsLink,\n   ObservationForm,\n   FieldContainer,\n   FieldName,\n   DragAndDrop,\n   Required,\n   InputAndErrorField\n}\n","import React, { Component } from 'react'\nimport { observer } from 'mobx-react'\n\nimport { DesktopLayoutMainPage } from '../../../common/components/DesktopLayoutMainPage'\nimport strings from '../../../common/i18n/strings.json'\nimport { Image } from '../../../common/components/Image'\nimport { InputField } from '../../../common/components/InputField'\nimport { DropDown } from '../../../common/components/DropDown'\nimport { TextArea } from '../../../common/components/TextArea'\nimport { PrimaryButton } from '../../../common/components/PrimaryButton'\n\nimport {\n   ObservationForm,\n   BackToObservationsLink,\n   FieldContainer,\n   FieldName,\n   DragAndDrop,\n   Required,\n   InputAndErrorField\n} from './styledComponent'\nimport './index.css'\n\nexport interface UserObservationPageProps{\n   onClickSubmit:()=>void,\n   title:string,\n   cateogaryOfObservation:string,\n   subCateogaryOfObservation:string,\n   severityOfObservation:string,\n   descriptionOfObservation:string,\n   attachmentsOfObservation:Array<string>,\n   onChangeTitleOfTheObservation:(value:string)=>void,\n   onChangeCateogary:(value:string)=>void,\n   onChangeSubCateogary:(value: string) => void,\n   onChangeSeverity:(value:string)=>void,\n   onChangeDescription:(value:string)=>void,\n   goBack:() => void,\n   getSubCateogaries:Array<string>,\n   cateogaries,\n   titleErrorMsg:string,\n   severityErrorMsg:string,\n   descriptionErrorMsg:string,\n   apiStatus:number,\n   cateogariesList:Array<string>\n}\n\n\n@observer\nclass UserObservationPage extends Component<UserObservationPageProps> {\n   render() {\n      const {\n         onClickSubmit,\n         title,\n         cateogaryOfObservation,\n         subCateogaryOfObservation,\n         severityOfObservation,\n         descriptionOfObservation,\n         attachmentsOfObservation,\n         onChangeTitleOfTheObservation,\n         onChangeCateogary,\n         onChangeSubCateogary,\n         onChangeSeverity,\n         onChangeDescription,\n         goBack,\n         getSubCateogaries,\n         cateogaries,\n         titleErrorMsg,\n         severityErrorMsg,\n         descriptionErrorMsg,\n         apiStatus,\n         cateogariesList\n      } = this.props\n\n      const {\n         titleOfTheObservation,\n         culturalDeviations,\n         backToObservations,\n         cateogary,\n         severity,\n         description,\n         attachments,\n         subCateogary,\n         submit\n      } = strings.usersScreen\n      return (\n         <DesktopLayoutMainPage>\n            <ObservationForm>\n               <BackToObservationsLink onClick={goBack}>\n                  <Image\n                     src={\n                        'https://cdn.zeplin.io/5d0afc9102b7fa56760995cc/assets/24ef7d49-46b3-47e6-b835-579ee7a857d0.svg'\n                     }\n                  />\n                  {backToObservations}\n               </BackToObservationsLink>\n\n               <FieldContainer>\n                  <FieldName>\n                     {titleOfTheObservation}\n                     <Required>*</Required>\n                  </FieldName>\n                  <InputAndErrorField>\n                     <InputField\n                        className={'title'}\n                        type={'text'}\n                        value={title}\n                        testid={'title'}\n                        onHandleChange={onChangeTitleOfTheObservation}\n                        placeHolder={culturalDeviations}\n                     />\n                     {titleErrorMsg !== '' && (\n                        <Required>{titleErrorMsg}</Required>\n                     )}\n                  </InputAndErrorField>\n               </FieldContainer>\n\n               <FieldContainer>\n                  <FieldName>{cateogary}</FieldName>\n                  <DropDown\n                     onSlectOption={onChangeCateogary}\n                     value={cateogaryOfObservation}\n                     options={cateogaries.length > 0 ? cateogariesList : []}\n                  />\n                  <FieldName>{subCateogary}</FieldName>\n                  <DropDown\n                     onSlectOption={onChangeSubCateogary}\n                     value={subCateogaryOfObservation}\n                     options={cateogaries.length > 0 ? getSubCateogaries : []}\n                  />\n               </FieldContainer>\n\n               <FieldContainer>\n                  <FieldName>\n                     {severity}\n                     <Required>*</Required>\n                  </FieldName>\n                  <InputAndErrorField>\n                     {' '}\n                     <DropDown\n                        placeholder={'severity'}\n                        onSlectOption={onChangeSeverity}\n                        value={severityOfObservation}\n                        options={['High', 'Low', 'Medium']}\n                     />\n                     {severityErrorMsg !== '' && (\n                        <Required>{severityErrorMsg}</Required>\n                     )}\n                  </InputAndErrorField>\n               </FieldContainer>\n\n               <FieldContainer>\n                  <FieldName>\n                     {description}\n                     <Required>*</Required>\n                  </FieldName>\n                  <InputAndErrorField>\n                     <TextArea\n                        testid={'description'}\n                        className={'user-observation-description'}\n                        value={descriptionOfObservation}\n                        onHandleChange={onChangeDescription}\n                        placeHolder={'Description'}\n                     />\n                     {descriptionErrorMsg !== '' && (\n                        <Required>{descriptionErrorMsg}</Required>\n                     )}\n                  </InputAndErrorField>\n               </FieldContainer>\n\n               <FieldContainer>\n                  <FieldName>{attachments}</FieldName>\n                  <DragAndDrop onDrag={() => {}} onDragOver={() => {}}>\n                     <InputField  value={\"\"} type={'file'} />\n                  </DragAndDrop>\n               </FieldContainer>\n\n               <PrimaryButton\n                  apiStatus={apiStatus}\n                  value={submit}\n                  handleClick={onClickSubmit}\n                  className={'submit-btn'}\n               />\n            </ObservationForm>\n         </DesktopLayoutMainPage>\n      )\n   }\n}\nexport { UserObservationPage }\n","import React, { Component } from 'react'\nimport { UserObservationPage } from '../../components/UserObservationPage'\nimport { observable, action, toJS } from 'mobx'\nimport { inject, observer } from 'mobx-react'\nimport { withRouter } from 'react-router-dom'\nimport { UserStore } from \"../../stores/UserStore\"\nimport {History} from 'history'\n\ntype UserObservationRouteProps={\n   userStore:UserStore,\n   history:History\n}\n\n@inject('userStore')\n@observer\nclass UserObservationRoute extends Component <UserObservationRouteProps>{\n   @observable titleOfTheObservation:string =\"\"\n   @observable cateogary :string =\"\"\n   @observable subCateogary :string =\"\"\n   @observable severity :string =\"\"\n   @observable description :string =\"\"\n   @observable attachments :Array<string>=[]\n   @observable titleErrorMsg :string =\"\"\n   @observable severityErrorMsg :string =\"\"\n   @observable descriptionErrorMsg :string =\"\"\n\n   constructor(props) {\n      super(props)\n      this.init()\n   }\n\n   init = () => {\n      this.titleOfTheObservation = ''\n      this.cateogary = ''\n      this.subCateogary = ''\n      this.severity = ''\n      this.description = ''\n      this.attachments = []\n   }\n   componentDidMount = () => {\n      this.props.userStore.getCateogaries(\n         {},\n         () => {},\n         () => {}\n      )\n   }\n\n   @action.bound onChangeTitleOfTheObservation(value) {\n      this.titleOfTheObservation = value\n      if (this.titleOfTheObservation === '')\n         this.titleErrorMsg = 'Please enter title'\n      else this.titleErrorMsg = ''\n   }\n\n   @action.bound onChangeCateogary(value) {\n      this.cateogary = toJS(value).value\n\n      this.props.userStore.cateogary = toJS(value).value\n   }\n\n   @action.bound onChangeSubCateogary(value) {\n      this.subCateogary = toJS(value).value\n   }\n\n   @action.bound onChangeSeverity(value) {\n      this.severity = toJS(value).value\n      if (this.severity === '') this.severityErrorMsg = 'Please select severty'\n      else this.severityErrorMsg = ''\n   }\n\n   @action.bound onChangeDescription(value) {\n      this.description = value\n      if (this.description === '')\n         this.descriptionErrorMsg = 'Please enter description'\n      else this.descriptionErrorMsg = ''\n   }\n\n   @action.bound onHandliErrorMsg() {\n      this.titleErrorMsg = ''\n      this.severityErrorMsg = ''\n      this.descriptionErrorMsg = ''\n      if (this.titleOfTheObservation === '')\n         this.titleErrorMsg = 'Please enter title'\n      if (this.severity === '') this.severityErrorMsg = 'Please select severty'\n      if (this.description === '')\n         this.descriptionErrorMsg = 'Please enter description'\n      if (\n         this.titleOfTheObservation !== '' &&\n         this.severity !== '' &&\n         this.description !== ''\n      )\n         return true\n   }\n\n   getCategoryAndSubCategoryId = () => {\n      const { cateogaries } = this.props.userStore\n      let category_id = 0\n      let sub_category_id = 0\n      if (cateogaries.length > 1) {\n         let temp = cateogaries.find(\n            cateogary => cateogary.name === this.cateogary\n         )\n         if (temp) category_id = temp.category_id\n         else return [0, 0]\n\n         cateogaries.forEach(cateogary => {\n            if (cateogary.name === this.cateogary) {\n               let temp2 = cateogary.sub_categories.find(\n                  subCateogary => subCateogary.name === this.subCateogary\n               )\n               if (temp2) sub_category_id = temp2.sub_category_id\n               else return [0, 0]\n            }\n         })\n         return [category_id, sub_category_id]\n      }\n      return [0, 0]\n   }\n\n   @action.bound onClickSubmit() {\n      if (this.onHandliErrorMsg()) {\n         let categoriesIds = this.getCategoryAndSubCategoryId()\n\n         const observation = {\n            title: this.titleOfTheObservation,\n            category_id: categoriesIds[0],\n            sub_category_id: categoriesIds[1],\n            severity: this.severity,\n            description: this.description,\n            attachments: []\n         }\n\n         this.props.userStore.addNewObservation(\n            observation,\n            this.onSuccess,\n            this.onFailure\n         )\n         console.log('status', this.props.userStore.getPostObservationAPIStatus)\n\n         this.init()\n         this.props.userStore.getPostObservationAPIStatus = 200\n         this.props.history.goBack()\n      }\n   }\n   goBack = () => {\n      this.props.history.goBack()\n   }\n   onSuccess() {\n      alert('observation submitted successfully...')\n   }\n   onFailure() {\n      alert('something went wrong pls try again...')\n   }\n\n   render() {\n      const {\n         getPostObservationAPIStatus,\n         cateogaries,\n         getSubCateogaries,\n         cateogariesList\n      } = this.props.userStore\n      return (\n         <UserObservationPage\n            title={this.titleOfTheObservation}\n            cateogaryOfObservation={this.cateogary}\n            subCateogaryOfObservation={this.subCateogary}\n            severityOfObservation={this.severity}\n            descriptionOfObservation={this.description}\n            attachmentsOfObservation={this.attachments}\n            onClickSubmit={this.onClickSubmit}\n            onChangeTitleOfTheObservation={this.onChangeTitleOfTheObservation}\n            onChangeCateogary={this.onChangeCateogary}\n            onChangeSubCateogary={this.onChangeSubCateogary}\n            onChangeSeverity={this.onChangeSeverity}\n            onChangeDescription={this.onChangeDescription}\n            goBack={this.goBack}\n            titleErrorMsg={this.titleErrorMsg}\n            severityErrorMsg={this.severityErrorMsg}\n            descriptionErrorMsg={this.descriptionErrorMsg}\n            apiStatus={getPostObservationAPIStatus}\n            cateogaries={cateogaries}\n            cateogariesList={cateogariesList}\n            getSubCateogaries={getSubCateogaries}\n         />\n      )\n   }\n}\nwithRouter(UserObservationPage)\nexport { UserObservationRoute }\n","import styled from '@emotion/styled'\nimport tw from 'tailwind.macro'\nimport {\n   Typo14SteelHKGroteskRegular,\n   Typo12SteelHKGroteskSemiBold,\n   Typo12DarkBlueGreyRubikMedium,\n   Typo24DarkBlueGreyHKGroteskMedium\n} from '../../styleGuide/Typos'\n\nconst BackToObservationsLink = styled(Typo14SteelHKGroteskRegular)`\n   ${tw`flex`}\n   margin-bottom:34px;\n`\nconst FieldName = styled(Typo12DarkBlueGreyRubikMedium)`\n   width: 25%;\n   margin-left: 30px;\n`\nconst ObsertationDiv = styled(Typo12DarkBlueGreyRubikMedium)`\n   ${tw`flex justify-center`}\n   border-bottom:2px solid blue;\n   width: 100px;\n`\n\nconst ChatHeading = styled(Typo12SteelHKGroteskSemiBold)`\n   margin-left: 20px;\n   padding-top: 4px;\n`\nconst Title = styled(Typo24DarkBlueGreyHKGroteskMedium)`\n   padding-left: 20px;\n`\nconst ObservationForm = styled.div`\n   ${tw`flex flex-col`}\n   width:80%;\n   background-color: white;\n   padding: 42px 80px;\n   margin: 32px 0px;\n`\nconst DragAndDrop = styled.div`\n   ${tw``}\n   width:25%;\n   height: 80px;\n   border-radius: 2px;\n   border: solid 1px #d7dfe9;\n   background-color: #ffffff;\n`\nconst FieldContainer = styled.div`\n   ${tw`flex items-center `}\n   margin-bottom:48px;\n   width: 100%;\n`\nconst Buttons = styled.div``\nconst Required = styled.span`\n   color: #ff0b37;\n   font-size: 12px;\n`\nconst ButtonsDiv = styled.div`\n   ${tw`flex justify-center items-center`}\n`\nconst RadioButtonsDiv = styled.div`\n   ${tw`flex`}\n   margin-left:260px;\n   margin-bottom: 48px;\n`\nconst HeaderDiv = styled.div`\n   ${tw`flex `}\n   margin-top:20px;\n   width: 1050px;\n   border-bottom: 1px solid lightgrey;\n`\nconst RadioLable = styled.label`\n   margin-right: 20px;\n`\nexport {\n   BackToObservationsLink,\n   ObservationForm,\n   FieldContainer,\n   FieldName,\n   DragAndDrop,\n   Required,\n   Title,\n   ButtonsDiv,\n   RadioButtonsDiv,\n   RadioLable,\n   HeaderDiv,\n   ChatHeading,\n   Buttons,\n   ObsertationDiv\n}\n","import styled from '@emotion/styled'\nimport tw from 'tailwind.macro'\nconst DatePickerElement = styled.input`\n   ${tw``}\n   width: 320px;\n   height: 40px;\n   border-radius: 2px;\n`\nexport { DatePickerElement }\n","import React, { Component } from 'react'\n\nimport { DatePickerElement } from './styledComponent'\n\ninterface DatePickerProps{\n   onChangeDate:(value:string)=>void\n   className?:string\n   isDisabled?:boolean\n   value?:string\n}\nclass DatePicker extends Component <DatePickerProps>{\n   onChangeDate = event => {\n      this.props.onChangeDate(event.target.value)\n   }\n   render() {\n      const { value, onChangeDate, className, isDisabled } = this.props\n      return (\n         <DatePickerElement\n            type='datetime-local'\n            value={value}\n            min='2010-01-01'\n            max='2030-12-31'\n            onChange={this.onChangeDate}\n            disabled={isDisabled}\n            className={className}\n         ></DatePickerElement>\n      )\n   }\n}\nexport { DatePicker }\n","import styled from '@emotion/styled'\nimport tw from 'tailwind.macro'\nconst ButtonElement = styled.button`\n   ${tw``}\n   height: 40px;\n   border-radius: 4px;\n   border: solid 1px #d7dfe9;\n   background-color: #ffffff;\n`\nexport { ButtonElement }\n","import React, { Component } from 'react'\nimport { ButtonElement } from './styledComponent'\n\ninterface SecondaryButtonProps{\n   value:string,\n   handleClick:()=>void,\n   className:string\n}\nclass SecondaryButton extends Component <SecondaryButtonProps>{\n   render() {\n      const { value, handleClick, className } = this.props\n      return (\n         <ButtonElement\n            className={className}\n            value={value}\n            onClick={handleClick}\n         >\n            {value}\n         </ButtonElement>\n      )\n   }\n}\nexport { SecondaryButton }\n","import styled from '@emotion/styled'\nimport tw from 'tailwind.macro'\nconst RadioButtonElement = styled.input`\n   ${tw``}\n   width: 16px;\n   height: 16px;\n`\nexport { RadioButtonElement }\n","import React, { Component } from 'react'\n\nimport { RadioButtonElement } from './styledComponent'\n\ninterface RadioButtonProps{\n   value:string,\n   name:string,\n   privacy:string,\n   className:string,\n   onHandleCheck:(value:string)=>void\n\n}\nclass RadioButton extends Component<RadioButtonProps> {\n   onHandleCheck = event => {\n      this.props.onHandleCheck(event.target.value)\n   }\n   render() {\n      const {  value, name, privacy, className } = this.props\n      return (\n         <RadioButtonElement\n            type='radio'\n            onChange={this.onHandleCheck}\n            name={name}\n            className={className}\n            value={value}\n            checked={value === privacy ? true : false}\n         ></RadioButtonElement>\n      )\n   }\n}\nexport { RadioButton }\n","import React, { Component } from 'react'\nimport './index.css'\nimport { DesktopLayoutMainPage } from '../DesktopLayoutMainPage'\nimport strings from '../../i18n/strings.json'\nimport {\n   ObservationForm,\n   BackToObservationsLink,\n   FieldContainer,\n   ButtonsDiv,\n   FieldName,\n   DragAndDrop,\n   Required,\n   Title,\n   RadioButtonsDiv,\n   RadioLable,\n   HeaderDiv,\n   ChatHeading,\n   Buttons,\n   ObsertationDiv\n} from './styledComponent'\nimport { USER, RP, ADMIN } from '../../constants/NameConstants'\nimport { Image } from '../Image'\nimport { DropDown } from '../DropDown'\nimport { TextArea } from '../TextArea'\nimport { PrimaryButton } from '../PrimaryButton'\n\nimport { observer } from 'mobx-react'\nimport { DatePicker } from '../DatePicker/DatePicker'\nimport { SecondaryButton } from '../SecondaryButton'\nimport { RadioButton } from '../RadioButton'\nimport LoadingWrapperWithFailure from '../LoadingWrapperWithFailure'\nimport { ToastContainer } from 'react-toastify'\n\ntype UserDetails={\n   first_name:string,\n   last_name:string\n}\n\n\ntype subCategoriesType={\n   \"id\": number,\n   \"name\": string\n}\n\ntype categoriesType={\n   \"category_id\": number,\n   \"category\": string,\n   \"sub_catogiries\":Array<subCategoriesType>\n}\n\ntype ObservationScreenProps={\n   title:string,\n   cateogaryOfObservation:string,\n   subCateogaryOfObservation:string,\n   severityOfObservation:string,\n   descriptionOfObservation:string,\n   attachmentsOfObservation:Array<string>,\n   assignedToOfObservation:string,\n   statusOfObservation:string,\n   dueDateOfObservation:string,\n   privacyOfObservation:string,\n   onChangePrivacy:(value:string)=>void,\n   onChangeAssignedTO:(value:string)=>void,\n   onChangeDueDate:(value:string)=>void,\n   onChangeStatus:(value:string)=>void,\n   onUpdate:()=>void,\n   onChangeDescription:(value:string)=>void,\n   reportedOnOfObservation:string,\n   goBack:()=>void,\n   onReset:()=>void,\n   userType:string,\n   apiStatus:number,\n   cateogaries:Array<categoriesType>,\n   getSubCateogaries:Array<string>,\n   cateogariesList:Array<string>,\n   onChangeSubCategory:(value:string)=>void,\n   onChangeCategory:(value:string)=>void,\n   rpList:Array<string>\n   apiError:string,\n   onRetryClick:()=>void,\n   currentPage:string,\n   navigateTOPage:(value:string)=>void\n}\n\n\n@observer\nclass ObservationScreen extends Component<ObservationScreenProps>{\n   renderSuccessUi = observer(() => {\n      const {\n         title,\n         cateogaryOfObservation,\n         subCateogaryOfObservation,\n         severityOfObservation,\n         descriptionOfObservation,\n         attachmentsOfObservation,\n         assignedToOfObservation,\n         statusOfObservation,\n         dueDateOfObservation,\n         privacyOfObservation,\n         onChangePrivacy,\n         onChangeAssignedTO,\n         onChangeDueDate,\n         onChangeStatus,\n         onUpdate,\n         onChangeDescription,\n         reportedOnOfObservation,\n         goBack,\n         onReset,\n         userType,\n         apiStatus,\n         cateogaries,\n         getSubCateogaries,\n         cateogariesList,\n         onChangeSubCategory,\n         onChangeCategory,\n         rpList\n      } = this.props\n\n      const {\n         cateogary,\n         severity,\n         attachments,\n         subCateogary,\n         submit,\n         status,\n         reportedOn,\n         assignedTo,\n         dueDate,\n         reset,\n         type,\n         publicBtn,\n         privateBtn,\n         observation,\n         chat,\n         update\n      } = strings.usersScreen\n      let reportedDate = reportedOnOfObservation\n         ? `${reportedOnOfObservation.slice(\n              0,\n              10\n           )}T${reportedOnOfObservation.slice(11)}`\n         : ''\n      let dueDateNewFormat = dueDateOfObservation\n         ? `${dueDateOfObservation.slice(0, 10)}T${dueDateOfObservation.slice(\n              11\n           )}`\n         : ''\n      return (\n         <React.Fragment>\n            <HeaderDiv>\n               <ObsertationDiv>{observation}</ObsertationDiv>\n               <ChatHeading>{chat}</ChatHeading>\n            </HeaderDiv>\n            <ObservationForm>\n               <BackToObservationsLink>\n                  <Image\n                     className={'goback'}\n                     onHandleClick={goBack}\n                     src={\n                        'https://cdn.zeplin.io/5d0afc9102b7fa56760995cc/assets/24ef7d49-46b3-47e6-b835-579ee7a857d0.svg'\n                     }\n                  />\n                  <Title>{title}</Title>\n               </BackToObservationsLink>\n\n               <FieldContainer>\n                  <TextArea\n                     className={'observation-description'}\n                     value={descriptionOfObservation}\n                     onHandleChange={onChangeDescription}\n                     isDisabled={true}\n                  />\n               </FieldContainer>\n\n               <FieldContainer>\n                  <FieldName>{cateogary}</FieldName>\n                  <DropDown\n                     onSlectOption={onChangeCategory}\n                     value={\n                        cateogaryOfObservation\n                           ? cateogaryOfObservation\n                           : ''\n                     }\n                     options={cateogaries.length > 0 ? cateogariesList : []}\n                     isDisabled={\n                        userType === USER || userType === RP ? true : false\n                     }\n                  />\n                  <FieldName>{subCateogary}</FieldName>\n                  {/* cateogaryOfObservation.name */}\n                  <DropDown\n                     userType={userType}\n                     onSlectOption={onChangeSubCategory}\n                     key={\n                        cateogaryOfObservation\n                           ? cateogaryOfObservation\n                           : ''\n                     }\n                     value={\n                        subCateogaryOfObservation\n                           ? subCateogaryOfObservation\n                           : ''\n                     }\n                     options={cateogaries.length > 0 ? getSubCateogaries : []}\n                     isDisabled={\n                        userType === USER || userType === RP ? true : false\n                     }\n                  />\n               </FieldContainer>\n\n               <FieldContainer>\n                  <FieldName>{status}</FieldName>\n                  <DropDown\n                     userType={userType}\n                     onSlectOption={onChangeStatus}\n                     value={statusOfObservation}\n                     options={[\n                        'Reported',\n                        'Action in progress',\n                        'Resolved',\n                        'Closed',\n                        'Acknowledged by Rp'\n                     ]}\n                     isDisabled={\n                        userType === USER || userType === ADMIN ? true : false\n                     }\n                  />\n               </FieldContainer>\n\n               <FieldContainer>\n                  <FieldName>{severity}</FieldName>\n                  <DropDown\n                     userType={userType}\n                     onSlectOption={() => {}}\n                     value={severityOfObservation}\n                     options={['High', 'Low', 'Medium']}\n                     isDisabled={true}\n                  />\n               </FieldContainer>\n\n               <FieldContainer>\n                  <FieldName>{attachments}</FieldName>\n                  <DragAndDrop\n                     onDrag={() => {}}\n                     onDragOver={() => {}}\n                  />\n               </FieldContainer>\n               <FieldContainer>\n                  <FieldName>{assignedTo}</FieldName>\n                  {/* assignedToOfObservation.first_name */}\n                  <DropDown\n                     userType={userType}\n                     onSlectOption={onChangeAssignedTO}\n                     value={\n                        assignedToOfObservation\n                           ? assignedToOfObservation\n                           : ''\n                     }\n                     options={rpList}\n                     isDisabled={\n                        userType === USER || userType === ADMIN ? true : false\n                     }\n                  />\n               </FieldContainer>\n\n               <FieldContainer>\n                  <FieldName>{reportedOn}</FieldName>\n                  <DatePicker\n                     isDisabled={true}\n                     className={'datepicker-field'}\n                     value={reportedDate}\n                     onChangeDate={()=>{}}\n                  />\n               </FieldContainer>\n\n               <FieldContainer>\n                  <FieldName>{dueDate}</FieldName>\n                  {dueDateNewFormat || userType == RP ? (\n                     <DatePicker\n                        isDisabled={\n                           userType === USER || userType === ADMIN\n                              ? true\n                              : false\n                        }\n                        className={\n                           userType === USER || userType === ADMIN\n                              ? 'datepicker-field'\n                              : ''\n                        }\n                        value={dueDateNewFormat}\n                        onChangeDate={onChangeDueDate}\n                     />\n                  ) : (\n                     <p>Due Date Not set</p>\n                  )}\n               </FieldContainer>\n               {userType !== 'user' && (\n                  <Buttons>\n                     {userType === RP && (\n                        <RadioButtonsDiv>\n                           <RadioButton\n                              data-testid='public'\n                              className={'radio-btn'}\n                              privacy={privacyOfObservation}\n                              name={type}\n                              value={'Public'}\n                              onHandleCheck={onChangePrivacy}\n                           />\n                           <RadioLable>{publicBtn}</RadioLable>\n                           <RadioButton\n                              data-testid='private'\n                              className={'radio-btn'}\n                              privacy={privacyOfObservation}\n                              name={type}\n                              value={'Private'}\n                              onHandleCheck={onChangePrivacy}\n                           />\n                           <RadioLable>{privateBtn}</RadioLable>\n                        </RadioButtonsDiv>\n                     )}\n\n                     <ButtonsDiv>\n                        <SecondaryButton\n                           data-testid='reset'\n                           value={reset}\n                           handleClick={onReset}\n                           className={'reset-btn'}\n                        />\n                        <PrimaryButton\n                           data-testid='submit'\n                           apiStatus={apiStatus}\n                           value={update}\n                           handleClick={onUpdate}\n                           className={'submit-btn'}\n                        />\n                     </ButtonsDiv>\n                  </Buttons>\n               )}\n            </ObservationForm>\n         </React.Fragment>\n      )\n   })\n\n   render() {\n      const {\n         apiStatus,\n         apiError,\n         onRetryClick,\n         currentPage,\n         navigateTOPage,\n         userType,\n      } = this.props\n\n      return (\n         <DesktopLayoutMainPage\n            userName={'Santhu'}\n            currentPage={currentPage}\n            navigateTOPage={navigateTOPage}\n            userType={userType}\n            profilePic={\n               'https://cdn.zeplin.io/5d0afc9102b7fa56760995cc/assets/5a060d96-2b5d-4c5d-8c81-cb89b5b8328a@3x.png'\n            }\n         >\n            <LoadingWrapperWithFailure\n               apiStatus={apiStatus}\n               apiError={apiError}\n               renderSuccessUI={this.renderSuccessUi}\n               onRetryClick={onRetryClick}\n            />\n         </DesktopLayoutMainPage>\n      )\n   }\n}\nexport { ObservationScreen }\n","import React, { Component } from 'react'\nimport { observable, action, toJS } from 'mobx'\nimport { inject, observer } from 'mobx-react'\nimport { withRouter,RouteComponentProps } from 'react-router-dom'\nimport { ObservationScreen } from '../../../common/components/ObservationScreen'\nimport {\n   RP_OBSERVATION_LIST_PATH,\n   USER_OBSERVATION_LIST_PATH,\n   LIST_OF_OBSERVATIONS_PATH,\n   OBSERVATIONS_ASSIGNED_TO_RP\n} from '../../constants/RouteConstants'\nimport strings from '../../../common/i18n/strings.json'\nimport { getLoadingStatus } from '@ib/api-utils'\nimport { API_INITIAL } from \"@ib/api-constants\"\nimport { UserStore } from \"../../stores/UserStore\"\nimport {History} from 'history'\nconst ADMIN = 'Admin'\n\ninterface UserObservationScreenRouteProp extends RouteComponentProps{\n   userStore:UserStore,\n   history:History,\n   match:any,\n   location:any\n}\n\n\n\n\ntype UserTye={\n\n}\n\n@inject('userStore')\n@observer\nclass UserObservationScreenRoute extends Component<UserObservationScreenRouteProp> {\n   @observable titleOfTheObservation:string = \"\"\n   @observable description:string = \"\"\n   @observable cateogary :null|any \n   @observable subCateogary :null|any \n   @observable status !:string\n   @observable severity  :string = \"\"\n   @observable attachments:Array<string>=[]\n   @observable assignedTO  :string = \"\"\n   @observable reportedOn  :string = \"\"\n   @observable dueDate  :string = \"\"\n   @observable privacy :string = \"\"\n   constructor(props) {\n      super(props)\n      this.init()\n   }\n\n   init = () => {\n      this.assignedTO = ''\n      this.status = \"\"\n      this.dueDate = ''\n      this.privacy = \"\"\n      this.cateogary = ''\n      this.subCateogary = \"\"\n   }\n   componentDidMount = () => {\n      this.doNetworkCalss()\n   }\n   doNetworkCalss = () => {\n      const { id } = this.props.match.params\n      \n\n      this.props.userStore.getObservation(id, this.onSuccess, this.onFailure)\n      this.props.userStore.getCateogaries(\n         {},\n         () => {},\n         () => {}\n      )\n   }\n\n   @action.bound onChangePrivacy(value) {\n      this.privacy = value\n   }\n\n   @action.bound onChangeAssignedTO(value) {\n      this.assignedTO = toJS(value).value\n   }\n\n   @action.bound onChangeDueDate(value) {\n      this.dueDate = value\n   }\n\n   @action.bound onChangeStatus(value) {\n      this.status = toJS(value).value\n   }\n\n   @action.bound onChangeCategory(value) {\n      this.cateogary = toJS(value).value\n      this.subCateogary = null\n      this.props.userStore.cateogary = toJS(value).value\n   }\n   @action.bound onChangeSubCategory(value) {\n      this.subCateogary = toJS(value).value\n   }\n\n   @action.bound onChangeDescription(value) {\n      this.description = value\n      console.log(value)\n   }\n\n   @action.bound onReset() {\n      const { userType } = this.props.userStore\n      if (userType == ADMIN) {\n         this.cateogary = ''\n         this.subCateogary = null\n      } else {\n         this.assignedTO = ''\n         this.status =\"\"\n         this.dueDate = ''\n         this.privacy = \"\"\n      }\n   }\n   goBack = () => {\n      this.props.history.goBack()\n   }\n   onSuccess = () => {\n      const {\n         assigned_to,\n         status,\n         due_date_type,\n         due_date,\n         category,\n         sub_category\n      } = this.props.userStore.observationDetails\n      if (assigned_to) this.assignedTO = assigned_to.first_name\n\n      this.status = status\n      if (due_date) this.dueDate = due_date\n\n      if (category) {\n         this.cateogary = category.name\n         this.subCateogary = sub_category.name\n      }\n      this.privacy = due_date_type\n   }\n   onFailure = () => {}\n   navigateTOPage = page => {\n      const {\n         totalObservations,\n         categories,\n         myObservations,\n         assignedToMe\n      } = strings.rpFeatures\n      switch (page) {\n         case totalObservations:\n            this.props.history.push(`${LIST_OF_OBSERVATIONS_PATH}`)\n            break\n         case myObservations:\n            this.props.history.push(`${RP_OBSERVATION_LIST_PATH}`)\n            break\n         case assignedToMe:\n            this.props.history.push(`${OBSERVATIONS_ASSIGNED_TO_RP}`)\n            break\n         case categories:\n            break\n      }\n   }\n   updationFail = () => {}\n\n   @action.bound onUpdate = async () => {\n      const { id } = this.props.match.params\n      let typeOfUser = this.props.location.state.userType\n      let observation\n      if (typeOfUser === ADMIN) {\n         observation = {\n            observation_id: id,\n            category_id: this.getCategoryAndSubCategoryId()[0],\n            sub_category_id: this.getCategoryAndSubCategoryId()[1]\n         }\n      } else {\n         let due_date:string|null = null\n         if (this.dueDate)\n            due_date = `${this.dueDate.slice(0, 10)} ${this.dueDate.slice(11)}`\n         observation = {\n            observation_id: id,\n            status: this.status,\n            due_date: due_date,\n            assigned_to_id: this.getAssignedToId(),\n            due_date_type: this.privacy\n         }\n      }\n\n      await this.props.userStore.updateObservationDeatails(\n         this.updationFail,\n         typeOfUser,\n         observation\n      )\n\n      if (this.props.userStore.updateObservationAPIError != null) {\n      }\n      this.init()\n      this.props.history.goBack()\n   }\n\n   getAssignedToId = () => {\n      if (this.assignedTO != '') {\n         return this.props.userStore.rpList.find(\n            rp => rp.first_name === this.assignedTO\n         ).user_id\n      }\n   }\n   getCategoryAndSubCategoryId = () => {\n      if (this.cateogary == null) return [0, 0]\n      const { cateogaries } = this.props.userStore\n      let category_id = 0\n      let sub_category_id = 0\n      let category = cateogaries.find(\n         cateogary => cateogary.name === this.cateogary\n      )\n      if (category) category_id = category.category_id\n      cateogaries.forEach(cateogary => {\n         if (cateogary.name === this.cateogary) {\n            cateogary.sub_categories.forEach(subCateogary => {\n               if (subCateogary.name === this.subCateogary)\n                  sub_category_id = subCateogary.sub_category_id\n            })\n         }\n      })\n      return [category_id, sub_category_id]\n   }\n\n   getComputedRpList = () => {\n      let rpList:Array<string> = []\n      this.props.userStore.rpList.forEach(rp => {\n         rpList.push(rp.first_name)\n      })\n      return rpList\n   }\n\n   render() {\n      const {\n         title,\n         severity,\n         description,\n         reported_on,\n         attachments\n      } = this.props.userStore.observationDetails\n      const {\n         getObservationAPIStatus,\n         getCateogariesAPIStatus,\n         getObservationAPIError,\n         getCateogariesAPIError,\n         cateogaries,\n         getSubCateogaries,\n         rpList,\n         cateogariesList\n      } = this.props.userStore\n      const { userType, currentPage } = this.props.location.state\n\n      const apiStatus = getLoadingStatus(\n         getCateogariesAPIStatus,\n         getObservationAPIStatus\n      )\n      return (\n         <ObservationScreen\n            userType={userType}\n            currentPage={currentPage}\n            title={title}\n            rpList={this.getComputedRpList()}\n            cateogaryOfObservation={this.cateogary}\n            subCateogaryOfObservation={this.subCateogary}\n            severityOfObservation={severity}\n            reportedOnOfObservation={reported_on}\n            descriptionOfObservation={description}\n            attachmentsOfObservation={attachments}\n            onChangePrivacy={this.onChangePrivacy}\n            onChangeAssignedTO={this.onChangeAssignedTO}\n            onChangeDueDate={this.onChangeDueDate}\n            onChangeStatus={this.onChangeStatus}\n            onUpdate={this.onUpdate}\n            onChangeDescription={this.onChangeDescription}\n            onChangeCategory={this.onChangeCategory}\n            onChangeSubCategory={this.onChangeSubCategory}\n            goBack={this.goBack}\n            onReset={this.onReset}\n            assignedToOfObservation={this.assignedTO}\n            statusOfObservation={this.status}\n            dueDateOfObservation={this.dueDate}\n            privacyOfObservation={this.privacy}\n            apiStatus={apiStatus}\n            apiError={getObservationAPIError}\n            onRetryClick={this.doNetworkCalss}\n            navigateTOPage={this.navigateTOPage}\n            cateogaries={cateogaries}\n            getSubCateogaries={getSubCateogaries}\n            cateogariesList={cateogariesList}\n         />\n      )\n   }\n}\nwithRouter(UserObservationScreenRoute)\nexport { UserObservationScreenRoute }\n","import React from 'react'\nimport { Redirect, Route } from 'react-router-dom'\nimport { getAccessToken } from '../../utils/StorageUtils'\n\ninterface ProtectedRouteProps{\n   path:string,\n   component:Function\n   exact:boolean\n}\n\nclass ProtectedRoute extends React.Component <ProtectedRouteProps>{\n   constructor(props) {\n      super(props)\n   }\n\n   render() {\n      const { path, component: Component } = this.props\n      if (getAccessToken()) {\n         return <Route path={path} component={Component} />\n      }\n      return (\n         <Redirect\n            to={{\n               pathname: '/signin'\n            }}\n         />\n      )\n   }\n}\nexport { ProtectedRoute }\n","import React from 'react'\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport {\n   USER_OBSERVATION_LIST_PATH,\n   USER_OBSERVATION_PATH,\n   USER_OBSERVATION_SCREEN_PATH\n} from '../constants/RouteConstants'\nimport { UserObservatonListRoute } from './UserObservatonListRoue'\nimport { UserObservationRoute } from './UserObservationRoute'\nimport { UserObservationScreenRoute } from './UserObservationScreenRoute'\nimport { ProtectedRoute } from '../../common/components/ProtectedRoute/ProtectedRoute'\n\nconst userRoutes = [\n   <ProtectedRoute\n      path={USER_OBSERVATION_LIST_PATH}\n      exact\n      component={UserObservatonListRoute}\n   />,\n   <ProtectedRoute\n      exact\n      path={USER_OBSERVATION_PATH}\n      component={UserObservationRoute}\n   />,\n   <ProtectedRoute\n      exact\n      path={`${USER_OBSERVATION_SCREEN_PATH}:id`}\n      component={UserObservationScreenRoute}\n   />\n]\n\nexport { userRoutes }\n","import styled from '@emotion/styled'\nimport tw from 'tailwind.macro'\nimport { Typo32BrightBlueHKGroteskMedium } from '../../../common/styleGuide/Typos'\nconst PageHeading = styled(Typo32BrightBlueHKGroteskMedium)``\n\nconst ObseravationsHeader = styled.div`\n   ${tw`flex flex-col`}\n   padding:48px 48px;\n   width: 98%;\n`\nconst PageHeadingAndAddButonDiv = styled.div`\n   ${tw`flex items-center justify-between`}\n`\nconst ObseravationsListTable = styled.table`\n   ${tw``}\n`\nconst TableHeader = styled.thead``\nconst TableBody = styled.tbody``\nexport {\n   PageHeading,\n   ObseravationsHeader,\n   ObseravationsListTable,\n   TableHeader,\n   TableBody,\n   PageHeadingAndAddButonDiv\n}\n","import React, { Component } from 'react'\nimport { observer } from 'mobx-react'\n\nimport { DesktopLayoutMainPage } from '../../../common/components/DesktopLayoutMainPage'\nimport { PrimaryLeftIconDefault } from '../../../common/components/PrimaryLeftIconDefault'\nimport strings from '../../../common/i18n/strings.json'\nimport { ObservationListHeader } from '../../../common/components/ObservationListHeader'\nimport { ObservationListItem } from '../../../common/components/ObservationListItem'\nimport { Pagination } from '../../../common/components/Pagination'\n\nimport './index.css'\nimport {\n   ObseravationsHeader,\n   PageHeading,\n   ObseravationsListTable,\n   TableHeader,\n   TableBody,\n   PageHeadingAndAddButonDiv\n} from './styledComponent'\nimport { DropDown } from '../../../common/components/DropDown'\nimport LoadingWrapperWithFailure from '../../../common/components/LoadingWrapperWithFailure'\nimport { USER } from '../../../common/constants/NameConstants'\nimport NoDataView from '../../../common/components/NoDataView'\n\nimport {UserObservatonListPageProps} from '../../../UserModule/components/UserObservatonListPage/UserObservatonListPage'\n\ninterface RpObservatonListPageProps extends UserObservatonListPageProps{\n   navigateTOPage:(page:string)=>void\n}\n\n@observer\nclass RpObservatonListPage extends Component <RpObservatonListPageProps>{\n   renderSuccessUi = () => {\n      const {\n         observationList,\n         onClickObservation,\n         totalPages,\n         currentPage,\n         handleClick,\n         userType,\n         goToPreviousPage,\n         goToNextPage,\n         filterObservationList,\n         goToRandomPage,\n         filterType,\n         reportedOnSort,\n         dueDateOnSort\n      } = this.props\n      const {\n         title,\n         reportedOn,\n         assignedTo,\n         severty,\n         status,\n         dueDate,\n         messages,\n         listofObservations,\n         addNew,\n         closed,\n         all,\n         acknowledgedbyRp,\n         assignedToMe,\n         myObservations,\n         resolved,\n         reported,\n         actioninProgress\n      } = strings.rpFeatures\n\n      return (\n         <React.Fragment>\n            <ObseravationsHeader>\n               <PageHeadingAndAddButonDiv>\n                  <PageHeading>{listofObservations}</PageHeading>\n\n                  <PrimaryLeftIconDefault\n                     className={'Primary-Left-IconDefault'}\n                     value={addNew}\n                     handleClick={handleClick}\n                     src={\n                        'https://cdn.zeplin.io/5d0afc9102b7fa56760995cc/assets/7930d80d-a88c-485e-b54b-4239b82c39f0.svg'\n                     }\n                  />\n               </PageHeadingAndAddButonDiv>\n               <DropDown\n                  onSlectOption={filterObservationList}\n                  className={'flter-Drop-Down'}\n                  options={[\n                     all,\n                     acknowledgedbyRp,\n                     resolved,\n                     closed,\n                     reported,\n                     actioninProgress\n                  ]}\n                  value={filterType}\n                  userType={userType}\n               />\n            </ObseravationsHeader>\n            {observationList.length > 0 ? (\n               <React.Fragment>\n                  <ObseravationsListTable>\n                     <TableHeader>\n                        <ObservationListHeader\n                           dueDateOnSort={dueDateOnSort}\n                           reportedOnSort={reportedOnSort}\n                           headings={[\n                              title,\n                              reportedOn,\n                              assignedTo,\n                              severty,\n                              status,\n                              dueDate,\n                              messages\n                           ]}\n                        />\n                     </TableHeader>\n                     <TableBody>\n                        {observationList.length > 0 &&\n                           observationList.map(observation => {\n                              return (\n                                 <ObservationListItem\n                                    key={Math.random()}\n                                    onClickObservation={onClickObservation}\n                                    title={observation.title}\n                                    reportedOn={observation.reportedOn}\n                                    severty={observation.severty}\n                                    status={observation.status}\n                                    dueDate={observation.dueDate}\n                                    dueDateType={observation.dueDateType}\n                                    pairedPerson={observation.assignedTo}\n                                    messages={observation.messages}\n                                    observationId={observation.observationId}\n                                    userType={userType}\n                                    assignedTo={observation.assignedTo}\n                                    //reportedBy={''}\n                                    src={\n                                       'https://cdn.zeplin.io/5d0afc9102b7fa56760995cc/assets/867a98d4-d61b-45cf-89cc-0a50a9dddb38@3x.png'\n                                    }\n                                 />\n                              )\n                           })}\n                     </TableBody>\n                  </ObseravationsListTable>\n\n                  <Pagination\n                     totalPages={totalPages}\n                     currentPage={currentPage}\n                     goToNextPage={goToNextPage}\n                     goToRandomPage={goToRandomPage}\n                     goToPreviousPage={goToPreviousPage}\n                  />\n               </React.Fragment>\n            ) : (\n               <NoDataView />\n            )}\n         </React.Fragment>\n      )\n   }\n\n   render() {\n      const {\n         navigateTOPage,\n         getObservationListAPIStatus,\n         getObservationListAPIError,\n         onRetryClick\n      } = this.props\n      const { assignedToMe, myObservations } = strings.rpFeatures\n\n      return (\n         <DesktopLayoutMainPage\n            userName={'Sai Ram'}\n            userType={USER}\n            navigateTOPage={navigateTOPage}\n            currentPage={myObservations}\n            profilePic={\n               'https://cdn.zeplin.io/5d0afc9102b7fa56760995cc/assets/4f00d506-2d1f-4bba-9084-f0666b4e3f2b@3x.png'\n            }\n         >\n            <LoadingWrapperWithFailure\n               apiStatus={getObservationListAPIStatus}\n               apiError={getObservationListAPIError}\n               renderSuccessUI={this.renderSuccessUi}\n               onRetryClick={onRetryClick}\n            />\n         </DesktopLayoutMainPage>\n      )\n   }\n}\nexport { RpObservatonListPage }\n","import React, { Component } from 'react'\nimport { observer, inject } from 'mobx-react'\nimport { withRouter,RouterProps } from 'react-router-dom'\nimport {\n   RP_OBSERVATION_PATH,\n   RP_OBSERVATION_SCREEN_PATH,\n   OBSERVATIONS_ASSIGNED_TO_RP,\n   OBSERVATION_SCREEN_PATH,\n   RP_OBSERVATION_LIST_PATH\n} from '../../constants/RouteConstants'\nimport { RpObservatonListPage } from '../../components/RpObservatonListPage'\nimport { toJS } from 'mobx'\n\nimport strings from '../../../common/i18n/strings.json'\n\n\n\n\n@inject('rpStore')\n@observer\nclass RpObservatonListRoute extends Component<RouterProps> {\n   constructor(props) {\n      super(props)\n   }\n\n   componentDidMount = () => {\n      this.doNetworkCalls()\n   }\n\n   getRpStore = () => {\n      return this.props.rpStore\n   }\n\n   doNetworkCalls = () => {\n      this.getRpStore().getObservationList()\n   }\n   onClickAddNew = () => {\n      const { history } = this.props\n      history.push(RP_OBSERVATION_PATH)\n   }\n   onSuccess = () => {\n      //alert(\"data recieved\")\n   }\n   onFailure = () => {\n      //alert(\"data recieved\")\n   }\n   navigateTOPage = page => {\n      const { myObservations } = strings.rpFeatures\n      const { history } = this.props\n      if (page === myObservations) history.push(RP_OBSERVATION_LIST_PATH)\n      else history.push(OBSERVATIONS_ASSIGNED_TO_RP)\n   }\n   onClickObservation = observationId => {\n      this.props.history.push({\n         pathname: `${OBSERVATION_SCREEN_PATH}${observationId}`,\n         state: {\n            userType: 'user',\n            currentPage: strings.rpFeatures.myObservations\n         }\n      })\n   }\n   filterObservationList = value => {\n      this.props.rpStore.filterObservationList(toJS(value).value)\n   }\n\n   render() {\n      const {\n         observationList,\n         goToPreviousPage,\n         goToNextPage,\n         goToRandomPage,\n         totalPages,\n         currentPage,\n         reportedOnSort,\n         dueDateOnSort,\n         userType,\n         filterType,\n         getObservationListAPIStatus,\n         getObservationListAPIError\n      } = this.getRpStore()\n      return (\n         <RpObservatonListPage\n            handleClick={this.onClickAddNew}\n            observationList={observationList}\n            onClickObservation={this.onClickObservation}\n            goToPreviousPage={goToPreviousPage}\n            goToNextPage={goToNextPage}\n            goToRandomPage={goToRandomPage}\n            totalPages={totalPages}\n            currentPage={currentPage}\n            filterObservationList={this.filterObservationList}\n            userType={userType}\n            navigateTOPage={this.navigateTOPage}\n            filterType={filterType}\n            getObservationListAPIStatus={getObservationListAPIStatus}\n            getObservationListAPIError={getObservationListAPIError}\n            onRetryClick={this.doNetworkCalls}\n            reportedOnSort={reportedOnSort}\n            dueDateOnSort={dueDateOnSort}\n         />\n      )\n   }\n}\nwithRouter(RpObservatonListRoute)\nexport { RpObservatonListRoute }\n","export const RP_OBSERVATION_LIST_PATH = '/rpobservationslist/'\nexport const RP_OBSERVATION_PATH = '/rpobservation/'\nexport const RP_OBSERVATION_SCREEN_PATH = '/rpobservationscreen/'\nexport const OBSERVATIONS_ASSIGNED_TO_RP = '/observationsassignedrp/'\nexport const OBSERVATION_SCREEN_PATH = '/observationscreen/'\n","import styled from '@emotion/styled'\nimport tw from 'tailwind.macro'\nimport {\n   Typo14SteelHKGroteskRegular,\n   Typo12DarkBlueGreyRubikMedium\n} from '../../../common/styleGuide/Typos'\n\nconst BackToObservationsLink = styled(Typo14SteelHKGroteskRegular)`\n   ${tw`flex`}\n   margin-bottom:34px;\n   width: 150px;\n   cursor: pointer;\n`\nconst FieldName = styled(Typo12DarkBlueGreyRubikMedium)`\n   width: 25%;\n   margin-left: 30px;\n`\n\nconst ObservationForm = styled.div`\n   ${tw`flex flex-col`}\n   width:80%;\n   background-color: white;\n   padding: 42px 80px;\n   margin: 32px 0px;\n`\nconst DragAndDrop = styled.div`\n   ${tw` flex justify-center items-center`}\n   width:34%;\n   height: 80px;\n   border-radius: 2px;\n   border: solid 1px #d7dfe9;\n   background-color: #ffffff;\n`\nconst FieldContainer = styled.div`\n   ${tw`flex items-center `}\n   margin-bottom:48px;\n   width: 100%;\n`\nconst Required = styled.span`\n   color: #ff0b37;\n   font-size: 12px;\n`\n\nconst InputAndErrorField = styled.div`\n   ${tw`flex flex-col`}\n   width:100%\n`\nexport {\n   BackToObservationsLink,\n   ObservationForm,\n   FieldContainer,\n   FieldName,\n   DragAndDrop,\n   Required,\n   InputAndErrorField\n}\n","import React, { Component } from 'react'\nimport { observer } from 'mobx-react'\n\nimport { DesktopLayoutMainPage } from '../../../common/components/DesktopLayoutMainPage'\nimport strings from '../../../common/i18n/strings.json'\nimport { Image } from '../../../common/components/Image'\nimport { InputField } from '../../../common/components/InputField'\nimport { DropDown } from '../../../common/components/DropDown'\nimport { TextArea } from '../../../common/components/TextArea'\nimport { PrimaryButton } from '../../../common/components/PrimaryButton'\n\nimport {\n   ObservationForm,\n   BackToObservationsLink,\n   FieldContainer,\n   FieldName,\n   DragAndDrop,\n   Required,\n   InputAndErrorField\n} from './styledComponent'\nimport './index.css'\n\nimport {UserObservationPageProps} from '../../../UserModule/components/UserObservationPage/UserObservationPage'\n\ninterface RpObservationPageProps extends UserObservationPageProps{\n\n}\n\n@observer\nclass RpObservationPage extends Component<RpObservationPageProps> {\n   render() {\n      const {\n         onClickSubmit,\n         title,\n         cateogaryOfObservation,\n         subCateogaryOfObservation,\n         severityOfObservation,\n         descriptionOfObservation,\n         attachmentsOfObservation,\n         onChangeTitleOfTheObservation,\n         onChangeCateogary,\n         onChangeSubCateogary,\n         onChangeSeverity,\n         onChangeDescription,\n         goBack,\n         cateogaries,\n         getSubCateogaries,\n         cateogariesList,\n         titleErrorMsg,\n         severityErrorMsg,\n         descriptionErrorMsg,\n         apiStatus\n      } = this.props\n\n      const {\n         titleOfTheObservation,\n         culturalDeviations,\n         backToObservations,\n         cateogary,\n         severity,\n         description,\n         attachments,\n         subCateogary,\n         submit\n      } = strings.usersScreen\n      return (\n         <DesktopLayoutMainPage>\n            <ObservationForm>\n               <BackToObservationsLink onClick={goBack}>\n                  <Image\n                     src={\n                        'https://cdn.zeplin.io/5d0afc9102b7fa56760995cc/assets/24ef7d49-46b3-47e6-b835-579ee7a857d0.svg'\n                     }\n                  />\n                  {backToObservations}\n               </BackToObservationsLink>\n\n               <FieldContainer>\n                  <FieldName>\n                     {titleOfTheObservation}\n                     <Required>*</Required>\n                  </FieldName>\n                  <InputAndErrorField>\n                     <InputField\n                        testid={'title'}\n                        className={'title'}\n                        type={'text'}\n                        value={title}\n                        onHandleChange={onChangeTitleOfTheObservation}\n                        placeHolder={culturalDeviations}\n                     />\n                     {titleErrorMsg !== '' && (\n                        <Required>{titleErrorMsg}</Required>\n                     )}\n                  </InputAndErrorField>\n               </FieldContainer>\n\n               <FieldContainer>\n                  <FieldName>{cateogary}</FieldName>\n                  <DropDown\n                     onSlectOption={onChangeCateogary}\n                     value={cateogaryOfObservation}\n                     options={cateogaries.length > 0 ? cateogariesList : []}\n                  />\n                  <FieldName>{subCateogary}</FieldName>\n                  <DropDown\n                     onSlectOption={onChangeSubCateogary}\n                     value={subCateogaryOfObservation}\n                     options={cateogaries.length > 0 ? getSubCateogaries : []}\n                  />\n               </FieldContainer>\n\n               <FieldContainer>\n                  <FieldName>\n                     {severity}\n                     <Required>*</Required>\n                  </FieldName>\n                  <InputAndErrorField>\n                     <DropDown\n                        onSlectOption={onChangeSeverity}\n                        value={severityOfObservation}\n                        options={['High', 'Low', 'Medium']}\n                     />\n                     {severityErrorMsg !== '' && (\n                        <Required>{severityErrorMsg}</Required>\n                     )}\n                  </InputAndErrorField>\n               </FieldContainer>\n\n               <FieldContainer>\n                  <FieldName>\n                     {description}\n                     <Required>*</Required>\n                  </FieldName>\n                  <InputAndErrorField>\n                     <TextArea\n                        testid={'description'}\n                        className={'user-observation-description'}\n                        value={descriptionOfObservation}\n                        onHandleChange={onChangeDescription}\n                        placeHolder={'Description'}\n                     />\n                     {descriptionErrorMsg !== '' && (\n                        <Required>{descriptionErrorMsg}</Required>\n                     )}\n                  </InputAndErrorField>\n               </FieldContainer>\n\n               <FieldContainer>\n                  <FieldName>{attachments}</FieldName>\n                  <DragAndDrop onDrag={() => {}} onDragOver={() => {}}>\n                     <InputField value=\"\" type={'file'} />\n                  </DragAndDrop>\n               </FieldContainer>\n\n               <PrimaryButton\n                  apiStatus={apiStatus}\n                  value={submit}\n                  handleClick={onClickSubmit}\n                  className={'submit-btn'}\n               />\n            </ObservationForm>\n         </DesktopLayoutMainPage>\n      )\n   }\n}\nexport { RpObservationPage }\n","import React, { Component } from 'react'\nimport { RpObservationPage } from '../../components/RpObservationPage'\nimport { observable, action, toJS } from 'mobx'\nimport { inject, observer } from 'mobx-react'\nimport { withRouter,RouterProps } from 'react-router-dom'\n@inject('rpStore')\n@observer\nclass RpObservationRoute extends Component<RouterProps> {\n   @observable titleOfTheObservation:string =\"\"\n   @observable cateogary :string =\"\"\n   @observable subCateogary :string =\"\"\n   @observable severity :string =\"\"\n   @observable description :string =\"\"\n   @observable attachments :Array<string>=[]\n   @observable titleErrorMsg :string =\"\"\n   @observable severityErrorMsg :string =\"\"\n   @observable descriptionErrorMsg :string =\"\"\n\n   constructor(props) {\n      super(props)\n      this.init()\n   }\n\n   init = () => {\n      this.titleOfTheObservation = ''\n      this.cateogary = ''\n      this.subCateogary = ''\n      this.severity = ''\n      this.description = ''\n      this.attachments = []\n   }\n   componentDidMount = () => {\n      this.props.rpStore.getCateogaries(\n         {},\n         () => {},\n         () => {}\n      )\n   }\n\n   @action.bound onChangeTitleOfTheObservation(value) {\n      this.titleOfTheObservation = value\n      if (this.titleOfTheObservation === '')\n         this.titleErrorMsg = 'Please enter title'\n      else this.titleErrorMsg = ''\n   }\n\n   @action.bound onChangeCateogary(value) {\n      this.cateogary = toJS(value).value\n\n      this.props.rpStore.cateogary = toJS(value).value\n   }\n\n   @action.bound onChangeSubCateogary(value) {\n      this.subCateogary = toJS(value).value\n   }\n\n   @action.bound onChangeSeverity(value) {\n      this.severity = toJS(value).value\n      if (this.severity === '') this.severityErrorMsg = 'Please select severty'\n      else this.severityErrorMsg = ''\n   }\n\n   @action.bound onChangeDescription(value) {\n      this.description = value\n      if (this.description === '')\n         this.descriptionErrorMsg = 'Please enter description'\n      else this.descriptionErrorMsg = ''\n   }\n\n   @action.bound onHandleErrorMsg() {\n      this.titleErrorMsg = ''\n      this.severityErrorMsg = ''\n      this.descriptionErrorMsg = ''\n      if (this.titleOfTheObservation === '')\n         this.titleErrorMsg = 'Please enter title'\n      if (this.severity === '') this.severityErrorMsg = 'Please select severty'\n      if (this.description === '')\n         this.descriptionErrorMsg = 'Please enter description'\n      if (\n         this.titleOfTheObservation !== '' &&\n         this.severity !== '' &&\n         this.description !== ''\n      )\n         return true\n   }\n\n   getCategoryAndSubCategoryId = () => {\n      const { cateogaries } = this.props.rpStore\n      let category_id\n      let sub_category_id\n      if (cateogaries.length > 1) {\n         let temp = cateogaries.find(\n            cateogary => cateogary.name === this.cateogary\n         )\n         if (temp) category_id = temp.category_id\n         else return [0, 0]\n\n         cateogaries.forEach(cateogary => {\n            if (cateogary.name === this.cateogary) {\n               sub_category_id = cateogary.sub_categories.find(\n                  subCateogary => subCateogary.name === this.subCateogary\n               ).sub_category_id\n            }\n         })\n         return [category_id, sub_category_id]\n      }\n      return [0, 0]\n   }\n\n   @action.bound onClickSubmit() {\n      if (this.onHandleErrorMsg()) {\n         let categoriesIds = this.getCategoryAndSubCategoryId()\n         const observation = {\n            title: this.titleOfTheObservation,\n            category_id: categoriesIds[0],\n            sub_category_id: categoriesIds[1],\n            severity: this.severity,\n            description: this.description,\n            attachments: []\n         }\n         this.props.rpStore.addNewObservation(\n            observation,\n            this.onSuccess,\n            this.onFailure\n         )\n         this.init()\n         this.props.history.goBack()\n      }\n   }\n   goBack = () => {\n      this.props.history.goBack()\n   }\n   onSuccess() {\n      //alert(\"observation submitted successfully...\")\n   }\n   onFailure() {\n      // alert(\"something went wrong pls try again...\")\n   }\n\n   render() {\n      const {\n         getPostObservationAPIStatus,\n         cateogaries,\n         getSubCateogaries,\n         cateogariesList\n      } = this.props.rpStore\n      return (\n         <RpObservationPage\n            title={this.titleOfTheObservation}\n            cateogaryOfObservation={this.cateogary}\n            subCateogaryOfObservation={this.subCateogary}\n            severityOfObservation={this.severity}\n            descriptionOfObservation={this.description}\n            attachmentsOfObservation={this.attachments}\n            onClickSubmit={this.onClickSubmit}\n            onChangeTitleOfTheObservation={this.onChangeTitleOfTheObservation}\n            onChangeCateogary={this.onChangeCateogary}\n            onChangeSubCateogary={this.onChangeSubCateogary}\n            onChangeSeverity={this.onChangeSeverity}\n            onChangeDescription={this.onChangeDescription}\n            goBack={this.goBack}\n            titleErrorMsg={this.titleErrorMsg}\n            severityErrorMsg={this.severityErrorMsg}\n            descriptionErrorMsg={this.descriptionErrorMsg}\n            apiStatus={getPostObservationAPIStatus}\n            cateogaries={cateogaries}\n            getSubCateogaries={getSubCateogaries}\n            cateogariesList={cateogariesList}\n         />\n      )\n   }\n}\nwithRouter(RpObservationRoute)\nexport { RpObservationRoute }\n","import styled from '@emotion/styled'\nimport tw from 'tailwind.macro'\nimport { Typo32BrightBlueHKGroteskMedium } from '../../../common/styleGuide/Typos'\nconst PageHeading = styled(Typo32BrightBlueHKGroteskMedium)``\n\nconst ObseravationsHeader = styled.div`\n   ${tw`flex flex-col`}\n   padding:48px 64px;\n   width: 100%;\n`\nconst ObseravationsListTable = styled.table`\n   ${tw``}\n`\nconst TableHeader = styled.thead``\nconst TableBody = styled.tbody``\nexport {\n   PageHeading,\n   ObseravationsHeader,\n   ObseravationsListTable,\n   TableHeader,\n   TableBody\n}\n","import React, { Component } from 'react'\nimport { observer } from 'mobx-react'\n\nimport { DesktopLayoutMainPage } from '../../../common/components/DesktopLayoutMainPage'\nimport { PrimaryLeftIconDefault } from '../../../common/components/PrimaryLeftIconDefault'\nimport strings from '../../../common/i18n/strings.json'\nimport { ObservationListHeader } from '../../../common/components/ObservationListHeader'\nimport { ObservationListItem } from '../../../common/components/ObservationListItem'\nimport { Pagination } from '../../../common/components/Pagination'\n\nimport './index.css'\nimport {\n   ObseravationsHeader,\n   PageHeading,\n   ObseravationsListTable,\n   TableHeader,\n   TableBody\n} from './styledComponent'\nimport { DropDown } from '../../../common/components/DropDown'\nimport LoadingWrapperWithFailure from '../../../common/components/LoadingWrapperWithFailure'\nimport { RP } from '../../../common/constants/NameConstants'\nimport NoDataView from '../../../common/components/NoDataView'\nimport { ToastContainer } from 'react-toastify'\nimport { RpModel } from \"../../stores/Models/RpModel\"\n\ntype ObservationsAssignedToRpProps={\n   observationList:Array<RpModel>,\n   onClickObservation:(id:number)=>void,\n   totalPages:number,\n   currentPage:number,\n   assignedObservationsGoToNextPage:()=>void,\n   assignedObservationsGoToPreviousPage:()=>void,\n   assignedObservationsGoToRandomPage:(no:string)=>void\n   navigateTOPage:(page:String)=>void,\n   userType:string|null,\n   filterAssignedObservationList:(value:string)=>void,\n   filterTypeOfAssignedObservation:string,\n   assignedObservationsDueDateOnSort:()=>void,\n   assignedObservationsReportedOnSort:()=>void,\n   assignedObservationAPIStatus:number,\n   assignedObservationAPIError:string,\n   onRetryClick:()=>void\n}\n\n\n@observer\nclass ObservationsAssignedToRp extends Component<ObservationsAssignedToRpProps> {\n   renderSuccessUi = observer(() => {\n      const {\n         observationList,\n         onClickObservation,\n         totalPages,\n         currentPage,\n         assignedObservationsGoToNextPage,\n         assignedObservationsGoToPreviousPage,\n         assignedObservationsGoToRandomPage,\n         navigateTOPage,\n         userType,\n         filterAssignedObservationList,\n         filterTypeOfAssignedObservation,\n         assignedObservationsDueDateOnSort,\n         assignedObservationsReportedOnSort,\n         assignedObservationAPIStatus,\n         assignedObservationAPIError\n      } = this.props\n      const {\n         title,\n         reportedOn,\n         reportedBy,\n         severty,\n         status,\n         dueDate,\n         messages,\n         ObservationsAssignedTOMe,\n         closed,\n         all,\n         acknowledgedbyRp,\n         assignedToMe,\n         myObservations,\n         resolved,\n         reported,\n         actioninProgress\n      } = strings.rpFeatures\n      return (\n         <React.Fragment>\n            <ObseravationsHeader>\n               <PageHeading>{ObservationsAssignedTOMe}</PageHeading>\n\n               <DropDown\n                  onSlectOption={filterAssignedObservationList}\n                  className={'flter-Drop-Down'}\n                  options={[\n                     all,\n                     acknowledgedbyRp,\n                     resolved,\n                     closed,\n                     reported,\n                     actioninProgress\n                  ]}\n                  value={filterTypeOfAssignedObservation}\n                  userType={userType}\n               />\n            </ObseravationsHeader>\n            {observationList.length > 0 ? (\n               <React.Fragment>\n                  <ObseravationsListTable>\n                     <TableHeader>\n                        <ObservationListHeader\n                           reportedOnSort={assignedObservationsReportedOnSort}\n                           dueDateOnSort={assignedObservationsDueDateOnSort}\n                           headings={[\n                              title,\n                              reportedOn,\n                              reportedBy,\n                              severty,\n                              status,\n                              dueDate,\n                              messages\n                           ]}\n                        />\n                     </TableHeader>\n                     <TableBody>\n                        {observationList.length > 0 &&\n                           observationList.map(observation => {\n                              return (\n                                 <ObservationListItem\n                                    key={Math.random()}\n                                    onClickObservation={onClickObservation}\n                                    title={observation.title}\n                                    reportedOn={observation.reportedOn}\n                                    severty={observation.severty}\n                                    status={observation.status}\n                                    dueDate={observation.dueDate}\n                                    dueDateType={observation.dueDateType}\n                                    pairedPerson={observation.reportedBy}\n                                    messages={observation.messages}\n                                    observationId={observation.observationId}\n                                    reportedBy={observation.reportedBy}\n                                    userType={userType}\n                                    src={\n                                       'https://cdn.zeplin.io/5d0afc9102b7fa56760995cc/assets/867a98d4-d61b-45cf-89cc-0a50a9dddb38@3x.png'\n                                    }\n                                 />\n                              )\n                           })}\n                     </TableBody>\n                  </ObseravationsListTable>\n\n                  <Pagination\n                     totalPages={totalPages}\n                     currentPage={currentPage}\n                     goToNextPage={assignedObservationsGoToNextPage}\n                     goToRandomPage={assignedObservationsGoToRandomPage}\n                     goToPreviousPage={assignedObservationsGoToPreviousPage}\n                  />\n               </React.Fragment>\n            ) : (\n               <NoDataView />\n            )}\n         </React.Fragment>\n      )\n   })\n\n   render() {\n      const { assignedToMe, myObservations } = strings.rpFeatures\n      const {\n         assignedObservationAPIStatus,\n         assignedObservationAPIError,\n         onRetryClick,\n         navigateTOPage\n      } = this.props\n      return (\n         <DesktopLayoutMainPage\n            userName={'Sai Ram'}\n            userType={RP}\n            navigateTOPage={navigateTOPage}\n            currentPage={assignedToMe}\n            profilePic={\n               'https://cdn.zeplin.io/5d0afc9102b7fa56760995cc/assets/4f00d506-2d1f-4bba-9084-f0666b4e3f2b@3x.png'\n            }\n         >\n            <LoadingWrapperWithFailure\n               apiStatus={assignedObservationAPIStatus}\n               apiError={assignedObservationAPIError}\n               renderSuccessUI={this.renderSuccessUi}\n               onRetryClick={onRetryClick}\n            />\n         </DesktopLayoutMainPage>\n      )\n   }\n}\nexport { ObservationsAssignedToRp }\n","import React, { Component } from 'react'\nimport { observer, inject } from 'mobx-react'\nimport { withRouter,RouteComponentProps } from 'react-router-dom'\nimport {\n   RP_OBSERVATION_PATH,\n   RP_OBSERVATION_SCREEN_PATH,\n   RP_OBSERVATION_LIST_PATH,\n   OBSERVATIONS_ASSIGNED_TO_RP,\n   OBSERVATION_SCREEN_PATH\n} from '../../constants/RouteConstants'\nimport { ObservationsAssignedToRp } from '../../components/ObservationsAssignedToRp'\nimport { toJS } from 'mobx'\nimport strings from '../../../common/i18n/strings.json'\nimport { RpStore } from \"../../stores/RpStore\"\n\ninterface ObservationsAssignedToRpRouteProps{\n\n}\ninterface InjectedProps{\n   rpStore:RpStore\n}\n@inject('rpStore')\n@observer\nclass ObservationsAssignedToRpRoute extends Component<ObservationsAssignedToRpRouteProps & RouteComponentProps> {\n   constructor(props) {\n      super(props)\n   } \n\n   componentDidMount = () => {\n      this.doNetworkCalls()\n   }\n\n   getInjectedProps=():InjectedProps=>(\n      this.props as InjectedProps\n   )\n   getRpStore = () => {\n      return this.getInjectedProps().rpStore\n   }\n\n   doNetworkCalls = () => {\n      this.getRpStore().getAssignedObservationList()\n   }\n   // onClickAddNew = () => {\n   //    const { history } = this.props\n   //    history.push(RP_OBSERVATION_PATH)\n   // }\n   // onSuccess = () => {\n   //    //alert(\"data recieved\")\n   // }\n   // onFailure = () => {\n   //    // alert(\"data recieved\")\n   // }\n   navigateTOPage = page => {\n      const { myObservations } = strings.rpFeatures\n      const { history } = this.props\n      if (page === myObservations) history.push(RP_OBSERVATION_LIST_PATH)\n      else history.push(OBSERVATIONS_ASSIGNED_TO_RP)\n   }\n   onClickObservation = observationId => {\n      this.props.history.push({\n         pathname: `${OBSERVATION_SCREEN_PATH}${observationId}`,\n         state: { userType: 'Rp', currentPage: 'Assigned To Me' }\n      })\n   }\n   filterAssignedObservationList = value => {\n      this.props.rpStore.filterAssignedObservationList(toJS(value).value)\n   }\n\n   render() {\n      const {\n         assignedObservationListForRp,\n         assignedObservationsGoToPreviousPage,\n         assignedObservationsGoToNextPage,\n         assignedObservationsCurrentPage,\n         filterTypeOfAssignedObservation,\n         assignedObservationsTotalPages,\n         assignedObservationsGoToRandomPage,\n         assignedObservationsReportedOnSort,\n         assignedObservationsDueDateOnSort,\n         assignedObservationAPIStatus,\n         assignedObservationAPIError,\n         userType\n      } = this.getRpStore()\n      return (\n         <ObservationsAssignedToRp\n            filterAssignedObservationList={this.filterAssignedObservationList}\n            filterTypeOfAssignedObservation={filterTypeOfAssignedObservation}\n            // handleClick={this.onClickAddNew}\n            observationList={assignedObservationListForRp}\n            onClickObservation={this.onClickObservation}\n            assignedObservationsGoToPreviousPage={\n               assignedObservationsGoToPreviousPage\n            }\n            assignedObservationsGoToNextPage={assignedObservationsGoToNextPage}\n            currentPage={assignedObservationsCurrentPage}\n            totalPages={assignedObservationsTotalPages}\n            assignedObservationsGoToRandomPage={\n               assignedObservationsGoToRandomPage\n            }\n            userType={userType}\n            navigateTOPage={this.navigateTOPage}\n            assignedObservationsReportedOnSort={\n               assignedObservationsReportedOnSort\n            }\n            assignedObservationsDueDateOnSort={\n               assignedObservationsDueDateOnSort\n            }\n            onRetryClick={this.doNetworkCalls}\n            assignedObservationAPIStatus={assignedObservationAPIStatus}\n            assignedObservationAPIError={assignedObservationAPIError}\n         />\n      )\n   }\n}\nwithRouter(ObservationsAssignedToRpRoute)\nexport { ObservationsAssignedToRpRoute }\n","import React from 'react'\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport {\n   RP_OBSERVATION_LIST_PATH,\n   RP_OBSERVATION_PATH,\n   RP_OBSERVATION_SCREEN_PATH,\n   OBSERVATIONS_ASSIGNED_TO_RP\n} from '../constants/RouteConstants'\nimport { RpObservatonListRoute } from './RpObservatonListRoute'\nimport { RpObservationRoute } from './RpObservationRoute'\n//import { RpObservationScreenRoute } from './RpObservationScreenRoute'\nimport { ObservationsAssignedToRpRoute } from './ObservationsAssignedToRpRoute'\nimport { ProtectedRoute } from '../../common/components/ProtectedRoute/ProtectedRoute'\n\nconst rpRoutes = [\n   <ProtectedRoute\n      exact\n      path={RP_OBSERVATION_LIST_PATH}\n      component={RpObservatonListRoute}\n   />,\n   <ProtectedRoute\n      exact\n      path={RP_OBSERVATION_PATH}\n      component={RpObservationRoute}\n   />,\n   <ProtectedRoute\n      exact\n      path={OBSERVATIONS_ASSIGNED_TO_RP}\n      component={ObservationsAssignedToRpRoute}\n   />\n]\nexport { rpRoutes }\n","import styled from '@emotion/styled'\nimport tw from 'tailwind.macro'\nimport { Typo32BrightBlueHKGroteskMedium } from '../../../common/styleGuide/Typos'\nconst PageHeading = styled(Typo32BrightBlueHKGroteskMedium)``\n\nconst ObseravationsHeader = styled.div`\n   ${tw`flex flex-col`}\n   padding:48px 48px;\n   width: 98%;\n`\nconst PageHeadingAndAddButonDiv = styled.div`\n   ${tw`flex items-center justify-between`}\n`\nconst ObseravationsListTable = styled.table`\n   ${tw``}\n`\nconst ParentDiv = styled.div``\nconst FilterBar = styled.div`\n   ${tw` flex justify-between`}\n`\nconst TableHeader = styled.thead``\nconst TableBody = styled.tbody``\nconst FilterLefttSubPart = styled.div`\n   ${tw`flex`}\n`\nexport {\n   PageHeading,\n   ObseravationsHeader,\n   ObseravationsListTable,\n   TableHeader,\n   TableBody,\n   PageHeadingAndAddButonDiv,\n   FilterBar,\n   FilterLefttSubPart,\n   ParentDiv\n}\n","import React, { Component } from 'react'\n//worst practise\nimport { observer } from 'mobx-react'\n\nimport { DesktopLayoutMainPage } from '../../../common/components/DesktopLayoutMainPage'\nimport strings from '../../../common/i18n/strings.json'\nimport { ObservationListHeader } from '../../../common/components/ObservationListHeader'\nimport { ObservationListItem } from '../../../common/components/ObservationListItem'\nimport { Pagination } from '../../../common/components/Pagination'\n\nimport './index.css'\nimport {\n   ObseravationsHeader,\n   PageHeading,\n   ObseravationsListTable,\n   TableHeader,\n   TableBody,\n   PageHeadingAndAddButonDiv,\n   FilterBar,\n   FilterLefttSubPart\n} from './styledComponent'\nimport { DropDown } from '../../../common/components/DropDown'\nimport { ADMIN } from '../../../common/constants/NameConstants'\nimport LoadingWrapperWithFailure from '../../../common/components/LoadingWrapperWithFailure'\nimport NoDataView from '../../../common/components/NoDataView'\nimport {UserObservatonListPageProps} from '../../../UserModule/components/UserObservatonListPage/UserObservatonListPage'\nimport {categoriesType} from '../../../UserModule/stores/UserStore/UserStore'\nimport { AdminObsevationModel } from \"../../stores/Models/AdminObsevationModel\"\n\ninterface ListOfObservationsProps {\n   filterCategory:(value:string)=>void,\n   filterSubCategory:(value:string)=>void,\n   getSubCateogariesMultiple:Array<string>,\n   statusFilterOfList:string,\n   setStatusFilterOfList:(value:string)=>void,\n   categotyFilterType:string,\n   subCategotyFilterType:string,\n   cateogaries:Array<categoriesType>,\n   getSubCateogaries:()=>Array<string>,\n   cateogariesList:Array<string>,\n   observationList:Array<AdminObsevationModel>,\n   adminObservationsListAPIStatus:number,\n   adminObservationsListAPIError:string,\n   onClickObservation:(id:number)=>void,\n   totalPages:number,\n   currentPage:number,\n   goToNextPage:()=>void,\n   goToPreviousPage:()=>void,\n   goToRandomPage:(value:string)=>void,\n   dueDateOnSort:()=>void,\n   userType:string,\n   onRetryClick:()=>void\n}\n\n@observer\nclass ListOfObservations extends Component <ListOfObservationsProps>{\n   renderSuccessUi = () => {\n      const {\n         observationList,\n         onClickObservation,\n         totalPages,\n         currentPage,\n         userType,\n         goToPreviousPage,\n         goToNextPage,\n         filterCategory,\n         filterSubCategory,\n         getSubCateogariesMultiple,\n         statusFilterOfList,\n         setStatusFilterOfList,\n         goToRandomPage,\n         categotyFilterType,\n         subCategotyFilterType,\n         cateogaries,\n         dueDateOnSort,\n         cateogariesList\n      } = this.props\n      const {\n         title,\n         assignedTo,\n         severty,\n         status,\n         dueDate,\n         messages,\n         closed,\n         all,\n         acknowledgedbyRp,\n         resolved,\n         reported,\n         reportedBy,\n         totalObservations,\n         actioninProgress\n      } = strings.rpFeatures\n      return (\n         <React.Fragment>\n            <ObseravationsHeader>\n               <PageHeadingAndAddButonDiv>\n                  <PageHeading>{totalObservations}</PageHeading>\n               </PageHeadingAndAddButonDiv>\n               <FilterBar>\n                  <FilterLefttSubPart>\n                     <DropDown\n                        onSlectOption={filterCategory}\n                        isMulti={true}\n                        className={'filters'}\n                        options={cateogaries.length > 0 ? cateogariesList : []}\n                        value={categotyFilterType}\n                        userType={userType}\n                     />\n                     <DropDown\n                        onSlectOption={filterSubCategory}\n                        isMulti={true}\n                        className={'filters'}\n                        options={getSubCateogariesMultiple}\n                        value={subCategotyFilterType}\n                        userType={userType}\n                     />\n                  </FilterLefttSubPart>\n                  <DropDown\n                     onSlectOption={setStatusFilterOfList}\n                     className={'filters'}\n                     options={[\n                        all,\n                        actioninProgress,\n                        acknowledgedbyRp,\n                        resolved,\n                        closed,\n                        reported\n                     ]}\n                     value={statusFilterOfList}\n                     userType={userType}\n                  />\n               </FilterBar>\n            </ObseravationsHeader>\n            {observationList.length > 0 ? (\n               <React.Fragment>\n                  <ObseravationsListTable>\n                     <TableHeader>\n                        <ObservationListHeader\n                           dueDateOnSort={dueDateOnSort}\n                           headings={[\n                              title,\n                              reportedBy,\n                              severty,\n                              status,\n                              assignedTo,\n                              dueDate,\n                              messages\n                           ]}\n                        />\n                     </TableHeader>\n                     <TableBody>\n                        {observationList.length > 0 &&\n                           observationList.map(observation => {\n                              return (\n                                 <ObservationListItem\n                                    key={Math.random()}\n                                    onClickObservation={onClickObservation}\n                                    title={observation.title}\n                                    reportedBy={observation.reportedBy}\n                                    severty={observation.severty}\n                                    status={observation.status}\n                                    assignedTo={observation.assignedTo}\n                                    dueDate={observation.dueDate}\n                                    dueDateType={observation.dueDateType}\n                                    pairedPerson={observation.assignedTo}\n                                    messages={observation.messages}\n                                    observationId={observation.observationId}\n                                    reportedOn={\"\"}\n                                    userType={'Admin'}\n                                    src={\n                                       'https://cdn.zeplin.io/5d0afc9102b7fa56760995cc/assets/867a98d4-d61b-45cf-89cc-0a50a9dddb38@3x.png'\n                                    }\n                                 />\n                              )\n                           })}\n                     </TableBody>\n                  </ObseravationsListTable>\n\n                  <Pagination\n                     totalPages={totalPages}\n                     currentPage={currentPage}\n                     goToNextPage={goToNextPage}\n                     goToRandomPage={goToRandomPage}\n                     goToPreviousPage={goToPreviousPage}\n                  />\n               </React.Fragment>\n            ) : (\n               <NoDataView />\n            )}\n         </React.Fragment>\n      )\n   }\n   render() {\n      const {\n         adminObservationsListAPIStatus,\n         adminObservationsListAPIError,\n         onRetryClick\n      } = this.props\n      const { totalObservations } = strings.rpFeatures\n      return (\n         <DesktopLayoutMainPage\n            userName={'Santhu'}\n            userType={ADMIN}\n            currentPage={totalObservations}\n            profilePic={\n               'https://cdn.zeplin.io/5d0afc9102b7fa56760995cc/assets/4f00d506-2d1f-4bba-9084-f0666b4e3f2b@3x.png'\n            }\n         >\n            <LoadingWrapperWithFailure\n               apiStatus={adminObservationsListAPIStatus}\n               apiError={adminObservationsListAPIError}\n               renderSuccessUI={this.renderSuccessUi}\n               onRetryClick={onRetryClick}\n            />\n         </DesktopLayoutMainPage>\n      )\n   }\n}\nexport { ListOfObservations }\n","import React, { Component } from 'react'\nimport { ListOfObservations } from '../../components/ListOfObservations'\nimport { observable, toJS } from 'mobx'\nimport { inject, observer } from 'mobx-react'\nimport { OBSERVATION_SCREEN_PATH } from '../../constants/RouteConstants'\nimport {RouterProps} from 'react-router-dom'\n@inject('adminStore')\n@observer\nclass ListOfObservationsRoute extends Component<RouterProps> {\n   constructor(props) {\n      super(props)\n   }\n\n   componentDidMount = () => {\n      this.doNetworkCalls()\n   }\n\n   getAdminStore = () => {\n      return this.props.adminStore\n   }\n\n   doNetworkCalls = () => {\n      this.getAdminStore().getCateogaries(\n         {},\n         () => {},\n         () => {}\n      )\n\n      this.getAdminStore().getAdminObservationList()\n   }\n\n   onSuccess = () => {}\n   onFailure = () => {}\n   onClickObservation = observationId => {\n      this.props.history.push({\n         pathname: `${OBSERVATION_SCREEN_PATH}${observationId}`,\n         state: { userType: 'Admin', currentPage: 'Total Observations' }\n      })\n   }\n   filterCategory = value => {\n      this.getAdminStore().filterCategory(value)\n   }\n   filterSubCategory = value => {\n      this.getAdminStore().filterSubCategory(value)\n   }\n   setStatusFilterOfList = value => {\n      this.getAdminStore().setStatusFilterOfList(value)\n   }\n   dueDateSortOfList = () => {\n      this.props.adminStore.dueDateOnSort()\n      this.getAdminStore().getAdminObservationList()\n   }\n   render() {\n      const {\n         adminObservationsList,\n         goToPreviousObservations,\n         goToNextObservations,\n         goToRandomObservations,\n         listOfObservationsTotalPages,\n         listOfObservationsCurrentPage,\n         userType,\n         categotyFilterType,\n         subCategotyFilterType,\n         adminObservationsListAPIStatus,\n         adminObservationsListAPIError,\n         cateogaries,\n         getSubCateogaries,\n         cateogariesList,\n         getSubCateogariesMultiple,\n         statusFilterOfList\n      } = this.getAdminStore()\n\n      return (\n         <ListOfObservations\n            observationList={adminObservationsList}\n            onClickObservation={this.onClickObservation}\n            goToPreviousPage={goToPreviousObservations}\n            goToNextPage={goToNextObservations}\n            goToRandomPage={goToRandomObservations}\n            totalPages={listOfObservationsTotalPages}\n            currentPage={listOfObservationsCurrentPage}\n            filterCategory={this.filterCategory}\n            filterSubCategory={this.filterSubCategory}\n            userType={userType}\n            categotyFilterType={categotyFilterType}\n            subCategotyFilterType={subCategotyFilterType}\n            adminObservationsListAPIError={adminObservationsListAPIError}\n            adminObservationsListAPIStatus={adminObservationsListAPIStatus}\n            onRetryClick={this.doNetworkCalls}\n            cateogaries={cateogaries}\n            getSubCateogaries={getSubCateogaries}\n            cateogariesList={cateogariesList}\n            getSubCateogariesMultiple={getSubCateogariesMultiple}\n            statusFilterOfList={statusFilterOfList}\n            setStatusFilterOfList={this.setStatusFilterOfList}\n            dueDateOnSort={this.dueDateSortOfList}\n         />\n      )\n   }\n}\nexport { ListOfObservationsRoute }\n","export const LIST_OF_OBSERVATIONS_PATH = '/listofobservations/'\n\nexport const OBSERVATION_SCREEN_PATH = '/observationscreen/'\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport { LIST_OF_OBSERVATIONS_PATH } from '../constants/RouteConstants'\n\nimport { ListOfObservationsRoute } from './ListOfObservationsRoute'\nimport { ProtectedRoute } from '../../common/components/ProtectedRoute/ProtectedRoute'\n\nconst adminRoutes = [\n   <Route\n      exact\n      path={LIST_OF_OBSERVATIONS_PATH}\n      component={ListOfObservationsRoute}\n   />\n]\n\nexport { adminRoutes }\n","import getData from '@ib/api'\n\nimport {\n   apiMethods,\n   statusCodes,\n   resStatuses,\n   apiErrorProblems\n} from '../constants/APIConstants'\n\nimport { getAccessToken } from './StorageUtils'\n\nexport const networkCallWithApisauceWithoutAccessToken = async (\n   api,\n   url,\n   requestObject,\n   type = apiMethods.post\n) => {\n   let response = null\n   // const accessToken = getAccessToken()\n   // if (accessToken) {\n   //    api.setHeader('Authorization', `Bearer ${accessToken}`)\n   // }\n   api.setHeader('Content-Type', 'application/json; charset=UTF-8')\n   try {\n      response = await getData(api, url, requestObject, type)\n   } catch (error) {\n      throw error\n   }\n   return response\n}\n\nexport const getUserDisplayableErrorMessage = error => {\n   const formattedError = getFormattedError(error)\n   return formattedError.description\n}\n\nexport function isNetworkError(error) {\n   const apiError = JSON.parse(error)\n   const { networkError, timeoutError } = apiErrorProblems\n   return apiError.problem === networkError || apiError.problem === timeoutError\n      ? true\n      : false\n}\n\nexport const getFormattedError = apiError => {\n   //TODO: Need to use strings from i18n\n   const errorViewTitle = 'Oops! Something Went Wrong'\n   const errorViewDescription =\n      \"We're having some trouble completing your request. Please try again.\"\n   const connectionLost = 'Connection lost'\n   const internetConnection = 'Please check your internet connection'\n\n   let description = ''\n   let errorConstant = ''\n   let title = errorViewTitle\n   let errorCode = statusCodes.internalServerErrorCode\n   if (apiError !== null && apiError !== undefined) {\n      try {\n         const parsedMessage = JSON.parse(apiError)\n         let parsedError\n\n         if (parsedMessage.data === undefined || parsedMessage.data === null) {\n            // To handle case when we are directly returning backend error message\n            parsedError = parsedMessage\n         } else {\n            // To handle case when we are adding all the requests to backend error message\n            parsedError = parsedMessage.data\n         }\n\n         if (parsedError !== undefined && parsedError !== null) {\n            if (\n               parsedError.message &&\n               parsedError.message === resStatuses.requestTimedOut\n            ) {\n               title = errorViewTitle\n               description = errorViewDescription\n            }\n\n            if (parsedError.response) {\n               try {\n                  const response = JSON.parse(parsedError.response)\n                  const {\n                     title: errorTitle,\n                     description: errorDescription\n                  } = response\n                  if (errorTitle) {\n                     title = errorTitle\n                  }\n                  if (errorDescription) {\n                     description = errorDescription\n                  } else {\n                     description = parsedError.response\n                  }\n               } catch (e) {\n                  description = parsedError.response\n               }\n               errorConstant = parsedError.res_status\n            }\n            if (parsedError.http_status_code) {\n               errorCode = parsedError.http_status_code\n               errorConstant = parsedError.res_status\n\n               if (\n                  parsedError.http_status_code ===\n                  statusCodes.noInternetErrorCode\n               ) {\n                  title = connectionLost\n                  description = internetConnection\n               }\n            }\n         }\n         if (isNetworkError(JSON.stringify(parsedError))) {\n            title = connectionLost\n            description = internetConnection\n         }\n      } catch (e) {}\n   }\n\n   if (description === null || description === '') {\n      title = errorViewTitle\n      description = errorViewDescription\n   }\n   const apiErrorResponse = {\n      errorCode,\n      title,\n      description,\n      errorConstant\n   }\n   return apiErrorResponse\n}\n","export const apiMethods = {\n   post: 'POST',\n   get: 'GET'\n}\nexport const apiUrls = {\n   signin: 'https://42c5946b5357.ngrok.io/api/reporting_portal/'\n}\n","export const endPoints = {\n   signin: 'user/login/v1/',\n   signup: 'signup/v1/',\n   signout: 'signout/v1/'\n}\n","const envVaribles=process.env\nconst Config={}\nObject.keys(envVaribles).forEach(variable=>{\n    if(variable.includes('REACT_APP')){\n        const envKey=variable.replace(\"REACT_APP_\",\"\")\n        Config[envKey]=envVaribles[variable]\n    }\n}\n)\n\nexport default  Config","import { create } from 'apisauce'\n\nimport { networkCallWithApisauceWithoutAccessToken } from '../../../common/utils/AuthUtils'\nimport { networkCallWithApisauce } from '../../../common/utils/APIUtils'\n\nimport { apiMethods, apiUrls } from '../../constants/APIConstants'\n\nimport { endPoints } from '../EndPoints'\n\nimport { SigninService } from \".\"\nimport baseURL from '../../../common/constants/EnvironmentConstants'\n\nclass AuthAPI implements SigninService {\n   api\n   \n   \n   constructor() {\n      this.api = create({\n         baseURL: apiUrls.signin\n      })\n      console.log(baseURL);\n   }\n   signInAPI(requestObject) {\n      return networkCallWithApisauceWithoutAccessToken(\n         this.api,\n         endPoints.signin,\n         requestObject,\n         apiMethods.post\n      )\n   }\n   signoutAPI() {\n      return networkCallWithApisauce(\n         this.api,\n         endPoints.signout,\n         {},\n         apiMethods.get\n      )\n   }\n}\n\nexport { AuthAPI }\n","export function resolveWithTimeout<T>(response: T): Promise<T> {\n  const timeOut = process.env.IS_JEST ? 0 : 2000\n  return new Promise(resolve => {\n    setTimeout(() => resolve(response), timeOut)\n  })\n}","import { resolveWithTimeout } from \"../../../common/utils/TestUtils\"\n\nimport getSignInResponce from '../../fixtures/getUserSignInResponse.json'\n\nimport getUserSignOutResponse from '../../fixtures/getUserSignOutResponse.json'\n\nimport { SigninService } from \"./index.js\"\nimport Config from '../../../common/constants/EnvironmentConstants'\n\nclass AuthFixtureService implements SigninService {\n   signInAPI(requestObject){\n      return resolveWithTimeout(getSignInResponce)\n   }\n   signoutAPI() {\n      return resolveWithTimeout(getUserSignOutResponse);\n   }\n}\nexport { AuthFixtureService }\n","import { observable, action, computed, toJS } from 'mobx'\nimport { API_INITIAL } from '@ib/api-constants'\nimport { bindPromiseWithOnSuccess } from '@ib/mobx-promise'\nimport { getUserDisplayableErrorMessage } from '../../../common/utils/APIUtils'\nimport {\n   setAccessToken,\n   getAccessToken,\n   clearUserSession\n} from '../../../common/utils/StorageUtils'\nimport { object } from \"@storybook/addon-knobs\"\nimport { AuthAPI } from \"../../services/AuthService/AuthAPI\"\nimport { AuthFixtureService } from \"../../services/AuthService/AuthFixtureService\"\n\ntype SigninResponseType={\n   access_token:string,\n   user_type:string\n}\n\nclass AuthStore {\n   @observable getUserAuthAPIStatus!:number\n   @observable getUserAuthAPIError!:string|null\n   @observable getUserSignOutAPIStatus!:number\n   @observable getUserSignOutAPIError!:string|null\n   @observable Access_token!:string|null\n   authAPIService :AuthFixtureService\n\n   constructor(authAPIService:AuthFixtureService) {\n      this.authAPIService = authAPIService\n      this.init()\n   }\n\n   @action.bound\n   init() {\n      this.getUserAuthAPIStatus = API_INITIAL\n      this.getUserSignOutAPIStatus = API_INITIAL\n      this.getUserAuthAPIError = null\n      this.getUserSignOutAPIError = null\n   }\n   @action.bound\n   userSignIn(request, onSuccess, onFailure) {\n      const signInPromise = this.authAPIService.signInAPI(request)\n      return bindPromiseWithOnSuccess(signInPromise)\n         .to(this.setGetUserAuthAPIStatus, (response) => {\n            this.setUserAuthAPIResponse(response)\n            if(response)\n            onSuccess(response.user_type)\n            else\n            alert(\"Something went wrong...\")\n         })\n         .catch(error => {\n            this.setGetUserAuthAPIError(error)\n            onFailure()\n         })\n   }\n   @action.bound\n   setUserAuthAPIResponse(SignInAPIResponse) {\n      this.Access_token = SignInAPIResponse.access_token\n      setAccessToken(this.Access_token)\n   }\n\n   @action.bound\n   setGetUserAuthAPIStatus(apiStatus) {\n      this.getUserAuthAPIStatus = apiStatus\n   }\n\n   @action.bound\n   setGetUserAuthAPIError(error) {\n      this.getUserAuthAPIError = getUserDisplayableErrorMessage(error)\n   }\n\n   @action.bound\n   userSignOut(request, onSuccess, onFailure) {\n      clearUserSession()\n      const signOutPromise = this.authAPIService.signoutAPI()\n      return bindPromiseWithOnSuccess(signOutPromise)\n         .to(this.setGetUserSignOutSignOutStatus, response => {\n            this.setUserSignOutAPIResponse(response)\n            onSuccess()\n         })\n         .catch(error => {\n            this.setGetUserSignOutAPIError(error)\n            onFailure()\n         })\n   }\n\n   @action.bound\n   setGetUserSignOutSignOutStatus(apiStatus) {\n      this.getUserSignOutAPIStatus = apiStatus\n   }\n\n   @action.bound\n   setGetUserSignOutAPIError(error) {\n      this.getUserSignOutAPIError = error\n   }\n\n   @action.bound\n   setUserSignOutAPIResponse(SignOutAPIResponse) {}\n}\nexport { AuthStore }\n","import { AuthAPI } from '../services/AuthService/AuthAPI'\nimport { AuthFixtureService } from '../services/AuthService/AuthFixtureService'\nimport { AuthStore } from './AuthStore'\nconst authAPI = new AuthAPI()\nconst authService = new AuthFixtureService()\nconst authStore = new AuthStore(authService)\nexport default { authStore }\n","class Observation {\n   title\n   reportedOn\n   assignedTo\n   severty\n   status\n   dueDate\n   messages\n   observationId\n   dueDateType\n   constructor(observation) {\n      const {\n         title,\n         reported_on,\n         severty,\n         status,\n         due_date,\n         messages_count,\n         due_date_type,\n         assigned_to,\n         observation_id\n      } = observation\n      this.title = title\n      this.reportedOn = reported_on\n      this.assignedTo = assigned_to\n      this.status = status\n      this.severty = severty\n      this.dueDate = due_date\n      this.dueDateType = due_date_type\n      this.messages = messages_count\n      this.observationId = observation_id\n   }\n}\nexport { Observation }\n","import { observable, action, computed, reaction, toJS } from 'mobx'\nimport { API_INITIAL, APIStatus } from '@ib/api-constants'\nimport { bindPromiseWithOnSuccess } from '@ib/mobx-promise'\nimport { getUserDisplayableErrorMessage } from '../../../common/utils/APIUtils'\n\nimport { getLoadingStatus } from '@ib/api-utils'\nimport { Observation } from '../Models/Observation'\nimport { observationType, getObservationApiResponce } from \"../types\"\nimport { ObservationApiService } from \"../../services/ObservationApiService/ObservationApiService\"\nconst LIMIT = 3\nconst SORT_OPTIONS = ['new', 'old']\nconst SORT_KEYS = ['due_date', 'reported_on']\nconst SORT_KEY = 'reported_on'\nconst FILTER_TYPE = 'all'\nconst USERTYPE = 'user'\n\n\nexport interface subCategoriesType{\n   \"id\": number,\n   \"name\": string\n}\n\n\nexport interface  categoriesType{\n   \"category_id\": number,\n   \"category\": string,\n   \"sub_catogiries\":Array<subCategoriesType>\n}\nclass UserStore {\n   @observable userType\n   @observable observationList\n   @observable observation\n   @observable observationDetails\n   @observable getObservationListAPIStatus\n   @observable getObservationListAPIError\n   @observable userObservationAPIService\n\n   @observable getObservationAPIStatus\n   @observable getObservationAPIError\n\n   @observable getPostObservationAPIStatus\n   @observable getPostObservationAPIError\n\n   @observable updateObservationAPIStatus\n   @observable updateObservationAPIError\n\n   @observable observationsSortType\n   @observable observationsSortOption\n   @observable reportedOnSortType\n   @observable dueDateSortType\n   @observable filtersOfObservation\n\n   @observable currentPage\n   @observable totalPages\n   @observable filterType\n   @observable sortType\n   @observable cateogary\n   @observable cateogaries\n   @observable subCateogaries\n   @observable rpList\n\n   @observable getCateogariesAPIStatus\n   @observable getCateogariesAPIError\n\n   constructor(userObservationAPIService) {\n      this.init()\n      this.userObservationAPIService = userObservationAPIService\n   }\n   @action.bound\n   init() {\n      this.getObservationListAPIStatus = API_INITIAL\n      this.getObservationListAPIError = null\n\n      this.getObservationAPIStatus = API_INITIAL\n      this.getObservationAPIError = null\n\n      this.getPostObservationAPIStatus = API_INITIAL\n      this.getPostObservationAPIError = null\n\n      this.getCateogariesAPIStatus = API_INITIAL\n      this.getCateogariesAPIError = null\n\n      this.updateObservationAPIStatus = API_INITIAL\n      this.updateObservationAPIError = null\n\n      this.observationDetails = {}\n      this.observationList = []\n      this.observation = {}\n      this.currentPage = 1\n      this.totalPages = null\n      this.userType = ''\n      this.filterType = 'all'\n      this.observationsSortOption = SORT_OPTIONS[0]\n      this.reportedOnSortType = SORT_OPTIONS[0]\n      this.dueDateSortType = SORT_OPTIONS[0]\n      this.observationsSortType = SORT_KEY\n      this.cateogaries = []\n      this.subCateogaries = []\n      this.filtersOfObservation = FILTER_TYPE\n      this.cateogary = null\n      this.rpList = []\n   }\n\n   @action.bound\n   updateObservationDeatails(updationFail, userType, details) {\n      const updateObservationApiPromise = this.userObservationAPIService.updateObservationApi(\n         userType,\n         details\n      )\n\n      return  bindPromiseWithOnSuccess(updateObservationApiPromise)\n\n         .to(\n            this.setUpdateObservationApiAPIStatus,\n            this.setUpdateObservationApiResponse\n         )\n         .catch(error => {\n            this.setUpdateObservationApiAPIError(error)\n            updationFail()\n         })\n   }\n\n   @action.bound\n   setUpdateObservationApiAPIStatus(apiStatus) {\n      this.updateObservationAPIStatus = apiStatus\n   }\n   @action.bound\n   setUpdateObservationApiResponse(response) {}\n\n   @action.bound\n   setUpdateObservationApiAPIError(error) {\n      this.updateObservationAPIError = getUserDisplayableErrorMessage(error)\n   }\n\n   @action.bound\n   getCateogaries(requestObject, onSuccess, onFailure) {\n      const categoriesPromise = this.userObservationAPIService.getCateogariesApi(\n      )\n      return bindPromiseWithOnSuccess(categoriesPromise)\n         .to(this.setGetCateogariesApiAPIStatus, response => {\n            this.setGetCateogariesApiResponse(response)\n            onSuccess()\n         })\n         .catch(error => {\n            this.setGetCateogariesApiAPIError(error)\n            onFailure()\n         })\n   }\n   \n\n   @action.bound\n   setGetCateogariesApiAPIStatus(apiStatus) {\n      this.getCateogariesAPIStatus = apiStatus\n   }\n\n   @action.bound\n   setGetCateogariesApiAPIError(error) {\n      this.getCateogariesAPIError = error\n   }\n\n   @action.bound\n   setGetCateogariesApiResponse(response) {\n      this.cateogaries = response.categories\n      this.subCateogaries = []\n   }\n   @computed get cateogariesList() {\n      let temp:Array<string>  = []\n      this.cateogaries.forEach((cateogary:categoriesType) => {\n         temp.push(cateogary.category)\n      })\n      return temp\n   }\n   @computed get getSubCateogaries() {\n      let subCateogaries = []\n      if (this.cateogaries.length > 0 && this.cateogary != null) {\n         subCateogaries = this.cateogaries.find(\n            cateogary => cateogary.name === this.cateogary\n         ).sub_categories\n      } else subCateogaries = []\n\n      let temp:Array<string> = []\n      if (subCateogaries)\n         subCateogaries.forEach((subCateogary:subCategoriesType) => {\n            temp.push(subCateogary.name)\n         })\n      return temp\n   }\n\n   @action.bound\n   getObservationList() {\n      let offset = Math.ceil(LIMIT * (this.currentPage - 1))\n      let details = {\n         user_type: USERTYPE,\n         sort_on: this.observationsSortType,\n         sort_by: this.observationsSortOption,\n         filter_on: this.filterType\n      }\n\n      const userObservationPromise = this.userObservationAPIService.getObservationListApi(\n         LIMIT,\n         offset,\n         details\n      )\n      return bindPromiseWithOnSuccess(userObservationPromise)\n         .to(\n            this.setGetObservationListApiAPIStatus,\n            this.setGetObservationListApiResponse\n         )\n         .catch(this.setGetObservationListApiAPIError)\n   }\n\n   @action.bound\n   setGetObservationListApiAPIStatus(apiStatus) {\n      this.getObservationListAPIStatus = apiStatus\n   }\n\n   @action.bound\n   setGetObservationListApiAPIError(error) {\n      this.getObservationListAPIError = error\n   }\n\n   @action.bound\n   setGetObservationListApiResponse(ObservationListResponse) {\n      this.totalPages = Math.ceil(\n         ObservationListResponse.user_observations_count / LIMIT\n      )\n      if (this.totalPages < 1) this.currentPage = 1\n      this.observationList = ObservationListResponse.user_observations.map(\n         observation => new Observation(observation)\n      )\n      this.userType = ObservationListResponse.user_type\n   }\n\n   @action.bound\n   getObservation(observation_id, onSuccess, onFailure) {\n      const observationPromise = this.userObservationAPIService.getObservationApi(\n         observation_id\n      )\n      return bindPromiseWithOnSuccess(observationPromise)\n         .to(this.setGetObservationApiAPIStatus, response => {\n            this.setGetObservationApiResponse(response)\n            onSuccess()\n         })\n         .catch(error => {\n            this.setGetObservationApiAPIError(error)\n            onFailure()\n         })\n   }\n\n   @action.bound\n   setGetObservationApiAPIStatus(apiStatus) {\n      this.getObservationAPIStatus = apiStatus\n   }\n\n   @action.bound\n   setGetObservationApiAPIError(error) {\n      this.getObservationAPIError = error\n   }\n\n   @action.bound\n   setGetObservationApiResponse(ObservationResponse) {\n      this.observationDetails = ObservationResponse\n      this.userType = ObservationResponse.user_type\n      this.rpList = ObservationResponse.rp_list\n   }\n\n   @action.bound\n   addNewObservation(requestObject, onSuccess, onFailure) {\n      const postObservationPromise = this.userObservationAPIService.postObservationApi(\n         requestObject\n      )\n      return bindPromiseWithOnSuccess(postObservationPromise)\n         .to(this.setPostObservationApiAPIStatus, response => {\n            this.setPostObservationApiResponse(response)\n            onSuccess()\n         })\n         .catch(error => {\n            this.setPostObservationApiAPIError(error)\n            onFailure()\n         })\n   }\n\n   @action.bound\n   setPostObservationApiAPIStatus(apiStatus) {\n      this.getPostObservationAPIStatus = apiStatus\n   }\n\n   @action.bound\n   setPostObservationApiAPIError(error) {\n      this.getPostObservationAPIError = error\n   }\n\n   @action.bound\n   setPostObservationApiResponse(postObservationResponse) {\n      this.observation = postObservationResponse\n   }\n\n   @action.bound\n   filterObservationList(value) {\n      this.filterType = value\n      this.currentPage = 1\n      this.getObservationList()\n   }\n\n   @action.bound\n   goToPreviousPage() {\n      this.currentPage--\n      this.getObservationList()\n   }\n\n   @action.bound\n   goToNextPage() {\n      this.currentPage++\n      this.getObservationList()\n   }\n\n   @action.bound\n   goToRandomPage(value) {\n      this.currentPage = parseInt(value, 10)\n      this.getObservationList()\n   }\n   // currentPage = reaction(\n   //    () => {\n   //       return {\n   //          currentPage: this.currentPage,\n   //          filterType: this.filterType\n   //       }\n   //    },\n   //    () => this.getObservationList()\n   // )\n\n   @action.bound\n   reportedOnSort() {\n      if (this.reportedOnSortType === SORT_OPTIONS[0])\n         this.reportedOnSortType = SORT_OPTIONS[1]\n      else this.reportedOnSortType = SORT_OPTIONS[0]\n      this.observationsSortType = SORT_KEYS[1]\n      this.observationsSortOption = this.reportedOnSortType\n      this.currentPage = 1\n      this.getObservationList()\n   }\n   @action.bound\n   dueDateOnSort() {\n      if (this.dueDateSortType === SORT_OPTIONS[0])\n         this.dueDateSortType = SORT_OPTIONS[1]\n      else this.dueDateSortType = SORT_OPTIONS[0]\n      this.observationsSortType = SORT_KEYS[0]\n      this.observationsSortOption = this.dueDateSortType\n      this.currentPage = 1\n      this.getObservationList()\n   }\n}\nexport { UserStore }\n","export const apiMethods = {\n   post: 'POST',\n   get: 'GET'\n}\nexport const apiUrls = {\n   obseravationList: 'https://42c5946b5357.ngrok.io/api/reporting_portal/',\n   obseravation: 'https://42c5946b5357.ngrok.io/api/reporting_portal/'\n}\n","export const endPoints = {\n   observationList: 'get/observations/v1/',\n   observation: 'observation/',\n   postObservation: '/post/observation/v1/',\n   categories: '/get/categories/v1/',\n   updateObservationByRp: '/update/rp/observation/v1/',\n   updateObservationByAdmin: '/update/admin/observation/v1/'\n}\n","import { networkCallWithApisauce } from '../../../common/utils/APIUtils'\nimport { create } from 'apisauce'\nimport { apiMethods, apiUrls } from '../../constants/APIConstants'\nimport { endPoints } from '../EndPoints'\nimport { UserService } from \"..\"\nclass ObservationApiService {\n   api\n   constructor() {\n      this.api = create({\n         baseURL: apiUrls.obseravation\n      })\n   }\n   getObservationApi(observation_id) {\n      let endPoint = `/get/${observation_id}/observation/v1/`\n      return networkCallWithApisauce(this.api, endPoint, {}, apiMethods.get)\n   }\n   postObservationApi(obseravation) {\n      return networkCallWithApisauce(\n         this.api,\n         endPoints.postObservation,\n         obseravation,\n         apiMethods.post\n      )\n   }\n   getObservationListApi(Limit, offeset, details) {\n      let endPoint = `${endPoints.observationList}?limit=${Limit}&offset=${offeset}`\n\n      return networkCallWithApisauce(\n         this.api,\n         endPoint,\n         details,\n         apiMethods.post\n      )\n   }\n   getCateogariesApi() {\n      return networkCallWithApisauce(\n         this.api,\n         endPoints.categories,\n         {},\n         apiMethods.get\n      )\n   }\n   updateObservationApi(userType, Details) {\n      if (userType === 'Rp')\n         return networkCallWithApisauce(\n            this.api,\n            endPoints.updateObservationByRp,\n            Details,\n            apiMethods.post\n         )\n      else {\n         return networkCallWithApisauce(\n            this.api,\n            endPoints.updateObservationByAdmin,\n            Details,\n            apiMethods.post\n         )\n      }\n   }\n}\n\nexport { ObservationApiService }\n","import getObservationsList from '../../fixtures/getObservationsResponse.json'\nimport getObservation from '../../fixtures/getObservationResponse.json'\nimport getCateogaries from '../../fixtures/getCateogaries.json'\nimport getPostObservationResponse from '../../fixtures/getPostObservationResponse.json'\nimport getUpdateObservationResponse from '../../fixtures/getUpdateObservationResponse.json'\nimport { action } from '@storybook/addon-actions'\nimport { UserService } from \"..\"\nimport { resolveWithTimeout } from \"../../../common/utils/TestUtils\"\nclass ObservationFixtureService{\n   \n   getObservationApi(requestObject) {\n      return resolveWithTimeout(getObservation)\n   }\n   postObservationApi(obseravation) {\n      return new Promise(resolve => resolve(getPostObservationResponse))\n   }\n\n   getObservationListApi(Limit, offeset, accessToken) {\n      let dataCopy = getObservationsList.user_observations.slice()\n      let data = dataCopy.splice(offeset, Limit)\n\n      let dummyData = {\n         user_observations: data,\n         user_observations_count: getObservationsList.user_observations_count,\n         user_type: getObservationsList.user_type\n      }\n      return resolveWithTimeout(dummyData)\n\n   }\n   getCateogariesApi() {\n      return resolveWithTimeout(getCateogaries)\n\n   }\n   updateObservationApi(id, Details) {\n      \n      return new Promise(resolve =>\n         setTimeout(() => resolve(getUpdateObservationResponse), 1000)\n      )\n   }\n}\n\nexport { ObservationFixtureService }\n","import { UserStore } from './UserStore'\n\nimport { ObservationApiService } from '../services/ObservationApiService/ObservationApiService'\nimport { ObservationFixtureService } from '../services/ObservationFixtureService/ObservationFixtureService'\n\nconst observationApiService = new ObservationApiService()\nconst observationFixtureService = new ObservationFixtureService()\nconst userStore = new UserStore(observationFixtureService)\nexport default { userStore }\n","import getObservationsResponse from '../../fixtures/getObservationsResponse.json'\nclass AdminObservationFixtureService {\n   listOfObservationApi(Limit, offeset, accessToken) {\n      let dataCopy = getObservationsResponse.all_observations.slice()\n      let data = dataCopy.splice(offeset, Limit)\n      let dummyData = {\n         all_observations: data,\n         total_observations_count:\n            getObservationsResponse.total_observations_count,\n         user_type: getObservationsResponse.user_type\n      }\n      return new Promise(resolve => resolve(dummyData))\n   }\n}\n\nexport { AdminObservationFixtureService }\n","class AdminObsevationModel {\n   title\n   reportedOn\n   reportedBy\n   assignedTo\n   severty\n   status\n   dueDate\n   messages\n   observationId\n   dueDateType\n\n   constructor(observation) {\n      const {\n         title,\n         reported_on,\n         severity,\n         status,\n         due_date,\n         messages,\n         reported_by,\n         due_date_type,\n         assigned_to,\n         observation_id\n      } = observation\n      this.title = title\n      this.reportedOn = reported_on\n      this.assignedTo = assigned_to\n      this.status = status\n      this.severty = severity\n      this.dueDate = due_date\n      this.dueDateType = due_date_type\n      this.messages = messages\n      this.observationId = observation_id\n      this.reportedBy = reported_by\n   }\n}\nexport { AdminObsevationModel }\n","class RpModel {\n   title\n   reportedOn\n   reportedBy\n   severty\n   status\n   dueDate\n   messages\n   observationId\n\n   dueDateType\n   constructor(observation) {\n      const {\n         title,\n         reported_on,\n         severity,\n         status,\n         due_date,\n         messages_count,\n         due_date_type,\n         reported_by,\n         observation_id\n      } = observation\n      this.title = title\n      this.reportedOn = reported_on\n      this.reportedBy = reported_by\n      this.status = status\n      this.severty = severity\n      this.dueDate = due_date\n      this.dueDateType = due_date_type\n      this.messages = messages_count\n      this.observationId = observation_id\n   }\n}\nexport { RpModel }\n","import React, { Component } from 'react'\nimport { observable, action } from 'mobx'\nimport { API_INITIAL } from '@ib/api-constants'\nimport { UserStore } from '../../../UserModule/stores/UserStore'\nimport { ObservationFixtureService } from '../../../UserModule/services/ObservationFixtureService/ObservationFixtureService'\n\nimport { bindPromiseWithOnSuccess } from '@ib/mobx-promise'\nimport { RpModel } from '../Models/RpModel'\nconst SORT_OPTIONS = ['new', 'old']\nconst SORT_KEYS = ['due_date', 'reported_on']\nconst SORT_KEY = 'reported_on'\nconst FILTER_TYPE = 'all'\nconst USERTYPE = 'Rp'\nconst LIMIT = 4\nclass RpStore extends UserStore {\n   @observable assignedObservationsSortType\n   @observable assignedObservationsSortOption\n   @observable assignedObservationReportedOnSortType\n   @observable assignedObservationDueDateSortType\n   @observable assignedObservationAPIStatus\n   @observable assignedObservationAPIError\n   @observable rpObservationAPIService\n   @observable assignedObservationListForRp\n   @observable assignedObservationsCurrentPage\n   @observable assignedObservationsTotalPages\n   @observable filterTypeOfAssignedObservation\n\n   constructor(rpObservationFixtureService, observationFixtureService) {\n      super(observationFixtureService)\n      this.rpStoreInit()\n      this.rpObservationAPIService = rpObservationFixtureService\n   }\n\n   rpStoreInit = () => {\n      this.assignedObservationAPIStatus = API_INITIAL\n      this.assignedObservationAPIError = null\n      this.assignedObservationListForRp = []\n      this.assignedObservationsSortType = SORT_KEY\n      this.assignedObservationsCurrentPage = 1\n      this.filterTypeOfAssignedObservation = FILTER_TYPE\n      this.assignedObservationsSortOption = SORT_OPTIONS[0]\n      this.assignedObservationReportedOnSortType = SORT_OPTIONS[0]\n      this.assignedObservationDueDateSortType = SORT_OPTIONS[0]\n   }\n\n   @action.bound\n   getAssignedObservationList() {\n      let offset = Math.ceil(LIMIT * (this.assignedObservationsCurrentPage - 1))\n      let details = {\n         user_type: USERTYPE,\n         sort_on: this.assignedObservationsSortType,\n         sort_by: this.assignedObservationsSortOption,\n         filter_on: this.filterTypeOfAssignedObservation\n      }\n      const userObservationPromise = this.rpObservationAPIService.getAssignedObservationListApi(\n         LIMIT,\n         offset,\n         details\n      )\n      return bindPromiseWithOnSuccess(userObservationPromise)\n         .to(\n            this.setAssignedObservationListApiAPIStatus,\n            this.setAssignedObservationListApiResponse\n         )\n         .catch(this.setAssignedObservationListApiAPIError)\n   }\n\n   @action.bound\n   setAssignedObservationListApiAPIStatus(apiStatus) {\n      this.assignedObservationAPIStatus = apiStatus\n   }\n\n   @action.bound\n   setAssignedObservationListApiAPIError(error) {\n      this.assignedObservationAPIError = error\n   }\n\n   @action.bound\n   setAssignedObservationListApiResponse(assignedObservationListResponse) {\n      this.assignedObservationsTotalPages = Math.ceil(\n         assignedObservationListResponse.total_observations_count / LIMIT\n      )\n\n      if (\n         this.assignedObservationsTotalPages <\n         this.assignedObservationsCurrentPage\n      ) {\n         this.assignedObservationsCurrentPage = 1\n      }\n\n      this.assignedObservationListForRp = assignedObservationListResponse.observations_assigned_to_rp.map(\n         observation => new RpModel(observation)\n      )\n\n      this.userType = assignedObservationListResponse.user_type\n   }\n   @action.bound\n   assignedObservationsReportedOnSort() {\n      if (this.assignedObservationReportedOnSortType === SORT_OPTIONS[0])\n         this.assignedObservationReportedOnSortType = SORT_OPTIONS[1]\n      else this.assignedObservationReportedOnSortType = SORT_OPTIONS[0]\n      this.assignedObservationsSortType = SORT_KEYS[1]\n      this.assignedObservationsSortOption = this.assignedObservationReportedOnSortType\n      this.getAssignedObservationList()\n   }\n   @action.bound\n   assignedObservationsDueDateOnSort() {\n      if (this.assignedObservationDueDateSortType === SORT_OPTIONS[0])\n         this.assignedObservationDueDateSortType = SORT_OPTIONS[1]\n      else this.assignedObservationDueDateSortType = SORT_OPTIONS[0]\n      this.assignedObservationsSortType = SORT_KEYS[0]\n      this.assignedObservationsSortOption = this.assignedObservationDueDateSortType\n      this.getAssignedObservationList()\n   }\n\n   @action.bound\n   assignedObservationsGoToPreviousPage() {\n      this.assignedObservationsCurrentPage--\n      this.getAssignedObservationList()\n   }\n   @action.bound\n   assignedObservationsGoToNextPage() {\n      this.assignedObservationsCurrentPage++\n      this.getAssignedObservationList()\n   }\n   @action.bound\n   assignedObservationsGoToRandomPage(value) {\n      this.assignedObservationsCurrentPage = parseInt(value, 10)\n      this.getAssignedObservationList()\n   }\n   @action.bound\n   filterAssignedObservationList(value) {\n      this.filterTypeOfAssignedObservation = value\n      this.assignedObservationsCurrentPage = 1\n      this.getAssignedObservationList()\n   }\n}\nexport { RpStore }\n","import React, { Component } from 'react'\nimport { AdminObsevationModel } from '../Models/AdminObsevationModel'\nimport { observable, action, computed, toJS } from 'mobx'\nimport { API_INITIAL } from '@ib/api-constants'\nimport { inject } from 'mobx-react'\nimport { bindPromiseWithOnSuccess } from '@ib/mobx-promise'\nimport { RpStore } from '../../../RpModule/stores/RpStore'\nconst ALL = 'all'\nconst SORT_OPTIONS = ['new', 'old']\nconst LIMIT = 4\nconst USER = 'Admin'\n\nimport {subCategoriesType,categoriesType} from '../../../UserModule/stores/UserStore/UserStore'\n\nclass AdminStore extends RpStore {\n   @observable categotyFilterType\n   @observable subCategotyFilterType\n   @observable adminObservationsListAPIStatus\n   @observable adminObservationsListAPIError\n   @observable adminObservationsList\n   @observable adminObservationAPIService\n   @observable listOfObservationsCurrentPage\n   @observable listOfObservationsTotalPages\n   @observable statusFilterOfList\n\n   constructor(\n      adminObservationAPIService,\n      rpObservationFixtureService,\n      observationFixtureService\n   ) {\n      super(rpObservationFixtureService, observationFixtureService)\n      this.adminObservationAPIService = adminObservationAPIService\n      this.initAdmin()\n   }\n\n   initAdmin = () => {\n      this.adminObservationsListAPIStatus = API_INITIAL\n      this.adminObservationsListAPIError = null\n      this.userType = null\n      this.adminObservationsList = []\n      this.categotyFilterType = []\n      this.subCategotyFilterType = []\n      this.listOfObservationsCurrentPage = 1\n      this.statusFilterOfList = ALL\n   }\n\n   @action.bound\n   getAdminObservationList() {\n      let details = {\n         sort_on: this.observationsSortType,\n         sort_by: this.observationsSortOption,\n         filter_on: this.statusFilterOfList,\n         categories: this.getCategoryAndSubCategoryId()[0],\n         sub_categories: this.getCategoryAndSubCategoryId()[1]\n      }\n      let offset = Math.ceil(LIMIT * (this.listOfObservationsCurrentPage - 1))\n      const adminObservationPromise = this.adminObservationAPIService.listOfObservationApi(\n         LIMIT,\n         offset,\n         details\n      )\n      return bindPromiseWithOnSuccess(adminObservationPromise)\n         .to(\n            this.setAdminObservationListApiAPIStatus,\n            this.setAdminObservationListApiResponse\n         )\n         .catch(this.setAdminObservationListApiAPIError)\n   }\n\n   @action.bound\n   setAdminObservationListApiAPIStatus(apiStatus) {\n      this.adminObservationsListAPIStatus = apiStatus\n   }\n\n   @action.bound\n   setAdminObservationListApiAPIError(error) {\n      this.adminObservationsListAPIError = error\n   }\n\n   @action.bound\n   setAdminObservationListApiResponse(adminObservationListResponse) {\n      this.listOfObservationsTotalPages = Math.ceil(\n         adminObservationListResponse.total_observations_count / LIMIT\n      )\n      if (\n         this.listOfObservationsTotalPages < this.listOfObservationsCurrentPage\n      )\n         this.listOfObservationsCurrentPage = 1\n      this.adminObservationsList = adminObservationListResponse.all_observations.map(\n         observation => new AdminObsevationModel(observation)\n      )\n      this.userType = USER\n   }\n   @action.bound\n   filterCategory(value) {\n      this.categotyFilterType = value\n      this.listOfObservationsCurrentPage = 1\n      this.getCategoryAndSubCategoryId()\n      this.getAdminObservationList()\n   }\n   @action.bound\n   filterSubCategory(value) {\n      this.subCategotyFilterType = value\n      this.listOfObservationsCurrentPage = 1\n      this.getCategoryAndSubCategoryId()\n      this.getAdminObservationList()\n   }\n   @action.bound\n   setStatusFilterOfList = value => {\n      this.statusFilterOfList = value.value\n      this.listOfObservationsCurrentPage = 1\n      this.getAdminObservationList()\n   }\n\n   @computed get getSubCateogariesMultiple() {\n      let categories:Array<string> = []\n      if (this.categotyFilterType) {\n         this.categotyFilterType.forEach(category =>\n            categories.push(category.value)\n         )\n         let subCategories:Array<subCategoriesType> = []\n         this.cateogaries.forEach(category => {\n            if (categories.includes(category.name)) {\n               subCategories.push(...category.sub_categories)\n            }\n         })\n         let temp:Array<string> = []\n         toJS(subCategories).forEach(category => temp.push(category.name))\n         return temp\n      }\n      return []\n   }\n\n   getCategoryAndSubCategoryId = () => {\n      let categories_ids:Array<number> = []\n      if (this.categotyFilterType) {\n         this.categotyFilterType.forEach(cateogary => {\n            this.cateogaries.forEach(cateogary2 => {\n               if (cateogary.value == cateogary2.name)\n                  categories_ids.push(cateogary2.category_id)\n            })\n         })\n      } else return [[], []]\n      if (this.subCategotyFilterType) {\n         let sub_category_ids:Array<number> = []\n         this.subCategotyFilterType.forEach(subCategory => {\n            this.cateogaries.forEach(cateogary => {\n               cateogary.sub_categories.forEach(subCategory2 => {\n                  if (subCategory2.name === subCategory.value) {\n                     sub_category_ids.push(subCategory2.sub_category_id)\n                  }\n               })\n            })\n         })\n         return [categories_ids, sub_category_ids]\n      } else return [[], []]\n   }\n\n   @action.bound\n   goToPreviousObservations() {\n      this.listOfObservationsCurrentPage--\n      this.getAdminObservationList()\n   }\n\n   @action.bound\n   goToNextObservations() {\n      this.listOfObservationsCurrentPage++\n      this.getAdminObservationList()\n   }\n\n   @action.bound\n   goToRandomObservations(value) {\n      this.listOfObservationsCurrentPage = parseInt(value, 10)\n      this.getAdminObservationList()\n   }\n}\nexport { AdminStore }\n","export const apiMethods = {\n   post: 'POST',\n   get: 'GET'\n}\nexport const apiUrls = {\n   obseravationList: 'https://42c5946b5357.ngrok.io/api/reporting_portal/',\n   obseravation: 'https://42c5946b5357.ngrok.io/api/reporting_portal/'\n}\n","export const endPoints = {\n   observationList: 'get/observations/v1/',\n   observation: 'observation/',\n   postObservation: 'postobservation/',\n   updateObservationByRp: '/update/rp/observation/v1/',\n}\n","import { networkCallWithApisauce } from '../../../common/utils/APIUtils'\nimport { create } from 'apisauce'\nimport { apiMethods, apiUrls } from '../../constants/APIConstants'\nimport { endPoints } from '../EndPoints'\nclass RpObservationApiService {\n   api\n   constructor() {\n      this.api = create({\n         baseURL: apiUrls.obseravation\n      })\n   }\n   // getObservationApi(requestObject) {\n   //     return networkCallWithApisauce(\n   //         this.api,\n   //         endPoints.observation,\n   //         { requestObject },\n   //         apiMethods.get\n   //     )\n   // }\n   // postObservationApi(obseravation) {\n   //     console.log(\"post api observation submitted...\", obseravation);\n   //     return networkCallWithApisauce(\n   //         this.api,\n   //         endPoints.postObservation,\n   //         { obseravation },\n   //         apiMethods.get\n   //     )\n   // }\n   // getObservationListApi(Limit, offeset, accessToken) {\n   //     let endPoint = `${endPoints.obseravationList}?limit=${Limit}&offset=${offeset}`\n   //     return networkCallWithApisauce(\n   //         this.api,\n   //         endPoint,\n   //         { accessToken },\n   //         apiMethods.get\n   //     )\n   // }\n   // updateObservationApi(id, Details) {\n   //    return networkCallWithApisauce(\n   //       this.api,\n   //       endPoints,\n   //       { id, Details },\n   //       apiMethods.post\n   //    )\n   // }\n   getAssignedObservationListApi(Limit, offeset, details) {\n      let endPoint = `${endPoints.observationList}?limit=${Limit}&offset=${offeset}`\n      return networkCallWithApisauce(\n         this.api,\n         endPoint,\n         details,\n         apiMethods.post\n      )\n   }\n}\n\nexport { RpObservationApiService }\n","import getAssignedObservationsResponse from '../../fixtures/getAssignedObservationsResponse.json'\nclass RpObservationFixtureService {\n   // updateObservationApi(id, Details) {\n   //    console.log('observation updated...', Details)\n   //    return new Promise(resolve => setTimeout(resolve('Updated'), 1000))\n   // }\n   getAssignedObservationListApi(Limit, offeset, accessToken) {\n      let dataCopy = getAssignedObservationsResponse.observations_assigned_to_rp.slice()\n      let data = dataCopy.splice(offeset, Limit)\n      let dummyData = {\n         observations_assigned_to_rp: data,\n         total_observations_count:\n            getAssignedObservationsResponse.total_observations_count,\n         user_type: getAssignedObservationsResponse.user_type\n      }\n      return new Promise(resolve => setTimeout(() => resolve(dummyData), 1000))\n   }\n}\n\nexport { RpObservationFixtureService }\n","export const apiMethods = {\n   post: 'POST',\n   get: 'GET'\n}\nexport const apiUrls = {\n   admin: 'https://42c5946b5357.ngrok.io/api/reporting_portal/'\n}\n","export const endPoints = {\n   listofObservations: '/get/admin/observations/v1/'\n}\n","import { networkCallWithApisauce } from '../../../common/utils/APIUtils'\nimport { create } from 'apisauce'\nimport { apiMethods, apiUrls } from '../../constants/APIConstants'\nimport { endPoints } from '../Endpoints'\nclass AdminObservationApiService {\n   api\n   constructor() {\n      this.api = create({\n         baseURL: apiUrls.admin\n      })\n   }\n\n   listOfObservationApi(Limit, offeset, details) {\n      let endPoint = `${endPoints.listofObservations}?limit=${Limit}&offset=${offeset}`\n      return networkCallWithApisauce(\n         this.api,\n         endPoint,\n         details,\n         apiMethods.post\n      )\n   }\n}\nexport { AdminObservationApiService }\n","import { AdminObservationFixtureService } from '../services/AdminObservationFixtureService/AdminObservationFixtureService'\nimport { AdminStore } from './AdminStore'\nimport { RpObservationApiService } from '../../RpModule/services/RpObservationApiService/RpObservationApiService'\nimport { RpObservationFixtureService } from '../../RpModule/services/RpObservationFixtureService/RpObservationFixtureService'\nimport { ObservationApiService } from '../../UserModule/services/ObservationApiService/ObservationApiService'\nimport { ObservationFixtureService } from '../../UserModule/services/ObservationFixtureService/ObservationFixtureService'\nimport { AdminObservationApiService } from '../services/AdminObservationApiService/AdminObservationApiService'\nconst rpObservationApiService = new RpObservationApiService()\nconst observationApiService = new ObservationApiService()\nconst adminObservationApiService = new AdminObservationApiService()\n\nconst observationFixtureService = new ObservationFixtureService()\nconst rpObservationFixtureService = new RpObservationFixtureService()\nconst adminObservationFixtureService = new AdminObservationFixtureService()\n\nconst adminStore = new AdminStore(\n   adminObservationFixtureService,\n   rpObservationFixtureService,\n   observationFixtureService\n)\nexport default { adminStore }\n\n//const observationFixtureService = new ObservationFixtureService();\n// import { ObservationApiService } from '../../UserModule/services/ObservationApiService/ObservationApiService'\n// import { ObservationFixtureService } from \"../../UserModule/services/ObservationFixtureService/ObservationFixtureService\";\n// const observationApiService = new ObservationApiService();\n// const rpObservationApiService = new RpObservationApiService();\n\n//import { AdminObservationApiService } from '../services/AdminObservationApiService/AdminObservationApiService'\n","import { RpObservationApiService } from '../services/RpObservationApiService/RpObservationApiService'\nimport { RpObservationFixtureService } from '../services/RpObservationFixtureService/RpObservationFixtureService'\n\nimport { ObservationApiService } from '../../UserModule/services/ObservationApiService/ObservationApiService'\nimport { ObservationFixtureService } from '../../UserModule/services/ObservationFixtureService/ObservationFixtureService'\n\nimport { RpStore } from './RpStore'\nconst rpObservationApiService = new RpObservationApiService()\nconst observationApiService = new ObservationApiService()\nconst observationFixtureService = new ObservationFixtureService()\nconst rpObservationFixtureService = new RpObservationFixtureService()\n\n// const observationApiService = new ObservationApiService();\n// const rpObservationApiService = new RpObservationApiService();\n\nconst rpStore = new RpStore(\n   rpObservationFixtureService,\n   observationFixtureService\n)\nexport default { rpStore }\n","import React, { Component } from 'react'\nimport { Provider } from 'mobx-react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nimport HomePage from './common/components/HomePage'\n\nimport './App.css'\nimport { authRoutes } from './Authuntication/routes'\nimport { userRoutes } from './UserModule/routes'\nimport { rpRoutes } from './RpModule/routes'\nimport { adminRoutes } from './AdminModule/routes'\nimport authStore from './Authuntication/stores'\nimport userStore from './UserModule/stores'\nimport adminStore from './AdminModule/stores'\nimport rpStore from './RpModule/stores'\n\n//Comment added\nclass App extends Component {\n   render() {\n      return (\n         <Provider {...authStore} {...userStore} {...rpStore} {...adminStore}>\n            <Router basename={process.env.PUBLIC_URL}>\n               <Switch>\n                  {authRoutes}\n                  {userRoutes}\n                  {rpRoutes}\n                  {adminRoutes}\n                  <Route path='/'>\n                     <HomePage />\n                  </Route>\n               </Switch>\n            </Router>\n         </Provider>\n      )\n   }\n}\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n   window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n         /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n)\n\nexport function register(config) {\n   if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n      if (publicUrl.origin !== window.location.origin) {\n         // Our service worker won't work if PUBLIC_URL is on a different origin\n         // from what our page is served on. This might happen if a CDN is used to\n         // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n         return\n      }\n\n      window.addEventListener('load', () => {\n         const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n         if (isLocalhost) {\n            // This is running on localhost. Let's check if a service worker still exists or not.\n            checkValidServiceWorker(swUrl, config)\n\n            // Add some additional logging to localhost, pointing developers to the\n            // service worker/PWA documentation.\n            navigator.serviceWorker.ready.then(() => {\n               console.log(\n                  'This web app is being served cache-first by a service ' +\n                     'worker. To learn more, visit https://bit.ly/CRA-PWA'\n               )\n            })\n         } else {\n            // Is not localhost. Just register service worker\n            registerValidSW(swUrl, config)\n         }\n      })\n   }\n}\n\nfunction registerValidSW(swUrl, config) {\n   navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n         registration.onupdatefound = () => {\n            const installingWorker = registration.installing\n            if (installingWorker == null) {\n               return\n            }\n            installingWorker.onstatechange = () => {\n               if (installingWorker.state === 'installed') {\n                  if (navigator.serviceWorker.controller) {\n                     // At this point, the updated precached content has been fetched,\n                     // but the previous service worker will still serve the older\n                     // content until all client tabs are closed.\n                     console.log(\n                        'New content is available and will be used when all ' +\n                           'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                     )\n\n                     // Execute callback\n                     if (config && config.onUpdate) {\n                        config.onUpdate(registration)\n                     }\n                  } else {\n                     // At this point, everything has been precached.\n                     // It's the perfect time to display a\n                     // \"Content is cached for offline use.\" message.\n                     console.log('Content is cached for offline use.')\n\n                     // Execute callback\n                     if (config && config.onSuccess) {\n                        config.onSuccess(registration)\n                     }\n                  }\n               }\n            }\n         }\n      })\n      .catch(error => {\n         console.error('Error during service worker registration:', error)\n      })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n   // Check if the service worker can be found. If it can't reload the page.\n   fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' }\n   })\n      .then(response => {\n         // Ensure service worker exists, and that we really are getting a JS file.\n         const contentType = response.headers.get('content-type')\n         if (\n            response.status === 404 ||\n            (contentType != null && contentType.indexOf('javascript') === -1)\n         ) {\n            // No service worker found. Probably a different app. Reload the page.\n            navigator.serviceWorker.ready.then(registration => {\n               registration.unregister().then(() => {\n                  window.location.reload()\n               })\n            })\n         } else {\n            // Service worker found. Proceed as normal.\n            registerValidSW(swUrl, config)\n         }\n      })\n      .catch(() => {\n         console.log(\n            'No internet connection found. App is running in offline mode.'\n         )\n      })\n}\n\nexport function unregister() {\n   if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n         .then(registration => {\n            registration.unregister()\n         })\n         .catch(error => {\n            console.error(error.message)\n         })\n   }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/tailwind.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}